<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>New Page 1</title>
<meta name="Microsoft Theme" content="canvas 0001">
</head>

<body background="../_themes/canvas/cnvbkgnd.jpg" bgcolor="#FFFFFF" text="#000000" link="#0066CC" vlink="#006666" alink="#996699"><!--mstheme--><font face="Arial, Arial, Helvetica"><font FACE="Arial" SIZE="2">
<p ALIGN="left">&nbsp;</p>
<blockquote>
  <blockquote>
    <h1 ALIGN="left"><!--mstheme--><font color="#336666">Chapter <a name="7">7</a> - Block Statements<!--mstheme--></font></h1>
    <p ALIGN="left">You use Block Statements to create GPSS Block Entities.
    Block Statements which are part of the Initial Model Translation create
    permanent Blocks in the simulation. A Block Statement sent to an existing
    simulation creates a one-time temporary Block to be used in a mode called <i>Manual
    Simulation</i>. This is discussed in more detail in Section 2.3.</p>
    <p ALIGN="left">A model is simply a sequence of Model Statements. A GPSS
    World Model Statement is either a GPSS Statement or a PLUS Procedure
    definition. The GPSS Statements, in turn, are either Block Statements, which
    cause a Block to be created, or Commands, which do not. Any Model Statement
    can be sent to an existing simulation as an Interactive Statement.</p>
    <p ALIGN="left">This chapter contains reference information for each
    Block Statement supported by GPSS World.</p>
    <p ALIGN="left">The GPSS Block statements are:</p>
    <b>
    <p align="left">ADOPT</b> - Change Assembly Set.</p>
    <b>
    <p align="left">ADVANCE</b> - Place Transaction on Future Events Chain.</p>
    <b>
    <p align="left">ALTER</b> - Test and modify Transactions in a Group.</p>
    <b>
    <p align="left">ASSEMBLE</b> - Wait for and destroy related Transactions.</p>
    <b>
    <p align="left">ASSIGN</b> - Modify Transaction Parameter.</p>
    <b>
    <p align="left">BUFFER</b> - Place Transaction at end of the Current Events Chain.</p>
    <b>
    <p align="left">CLOSE</b> - End the Data Stream.</p>
    <b>
    <p align="left">COUNT</b> - Place count of entities into a Transaction Parameter.</p>
    <b>
    <p align="left">DEPART</b> - Decrement content of a Queue Entity.</p>
    <b>
    <p align="left">DISPLACE</b> - Change the Next Sequential Block of a Transaction.</p>
    <b>
    <p align="left">ENTER</b> - Occupy or wait for storage units in a Storage Entity.</p>
    <b>
    <p align="left">EXAMINE</b> - Test group membership.</p>
    <b>
    <p align="left">EXECUTE</b> - Perform action specified by a different Block.</p>
    <b>
    <p align="left">FAVAIL</b> - Change status of a Facility Entity to &quot;available&quot;.</p>
    <b>
    <p align="left">FUNAVAIL</b> - Change status of a Facility Entity to &quot;not
    available&quot;.</p>
    <b>
    <p align="left">GATE</b> - Test entity and modify Transaction flow.</p>
    <b>
    <p align="left">GATHER</b> - Wait for related Transactions.</p>
    <b>
    <p align="left">GENERATE</b> - Create Transaction and place on Future Events Chain.</p>
    <b>
    <p align="left">INDEX</b> - Modify Transaction Parameter.</p>
    <b>
    <p align="left">INTEGRATION</b> - Turn the integration of a User Variable On or Off.</p>
    <b>
    <p align="left">JOIN</b> - Place a member into a Numeric or Transaction Group.</p>
    <b>
    <p align="left">LEAVE</b> - Release storage units of a Storage Entity.</p>
    <b>
    <p align="left">LINK</b> - Move Transaction to Userchain Entity.</p>
    <b>
    <p align="left">LOGIC</b> - Modify Logicswitch Entity.</p>
    <b>
    <p align="left">LOOP</b> - Decrement Parameter, jump to different Block if result is
    nonzero.</p>
    <b>
    <p align="left">MARK</b> - Place value of system clock into Transaction Parameter.</p>
    <b>
    <p align="left">MATCH</b> - Wait for related Transaction to reach conjugate MATCH Block.</p>
    <b>
    <p align="left">MSAVEVALUE</b> - Assign value to Matrix Entity element.</p>
    <b>
    <p align="left">OPEN</b> - Initialize a Data Stream.</p>
    <b>
    <p align="left">PLUS</b> - Evaluate PLUS Expression and save result in Parameter.</p>
    <b>
    <p align="left">PREEMPT</b> - Displace Facility owner.</p>
    <b>
    <p align="left">PRIORITY</b> - Modify Transaction priority.</p>
    <b>
    <p align="left">QUEUE</b> - Increment content of a Queue Entity.</p>
    <b>
    <p align="left">READ</b> - Bring the next line of data from a Data Stream.</p>
    <b>
    <p align="left">RELEASE</b> - Free Facility Entity.</p>
    <b>
    <p align="left">REMOVE</b> - Take a member out of Numeric or Transaction Group.</p>
    <b>
    <p align="left">RETURN</b> - Free Facility Entity.</p>
    <b>
    <p align="left">SAVAIL</b> - Change status of Storage Entity to &quot;available&quot;.</p>
    <b>
    <p align="left">SAVEVALUE</b> - Assign a value to Savevalue Entity.</p>
    <b>
    <p align="left">SCAN</b> - Test Transaction group, place value in Parameter.</p>
    <b>
    <p align="left">SEEK</b> - Change the line pointer in a Data Stream.</p>
    <b>
    <p align="left">SEIZE</b> - Assume ownership of or wait for a Facility Entity.</p>
    <b>
    <p align="left">SELECT</b> - Place selected entity number into Transaction Parameter.</p>
    <b>
    <p align="left">SPLIT</b> - Create related Transaction.</p>
    <b>
    <p align="left">SUNAVAIL</b> - Change status of Storage Entity to &quot;not
    available&quot;.</p>
    <b>
    <p align="left">TABULATE</b> - Update Table Entity.</p>
    <b>
    <p align="left">TERMINATE</b> - Destroy Transaction, decrement Termination Count.</p>
    <b>
    <p align="left">TEST</b> - Test arithmetic condition and modify Transaction flow.</p>
    <b>
    <p align="left">TRACE</b> - Set Trace Indicator of the Active Transaction.</p>
    <b>
    <p align="left">TRANSFER</b> - Move to specified Block.</p>
    <b>
    <p align="left">UNLINK</b> - Remove Transaction from Userchain Entity.</p>
    <b>
    <p align="left">UNTRACE</b> - Turn off Trace Indicator in the Active Transaction.</p>
    <b>
    <p align="left">WRITE</b> - Send a value to a Data Stream.</p>
    <p ALIGN="left">&nbsp;</p>
    <p ALIGN="left">&nbsp;</p>
    <p ALIGN="left">&nbsp;</p>
  </font><b><font FACE="Arial" SIZE="4">
  <p align="left">Operands</p>
  </font></b><font FACE="Arial" SIZE="2">
  <p ALIGN="left">Statements usually have one or more operands which you must
  fill in. Most operands have several different forms which are valid. In the
  descriptions which follow, a valid class of operands may be described by an
  italicized word. You must choose a member of the class and type it into the
  operand field. For example, if one of the valid forms of an operand is given
  as <i>PosInteger</i>, you could type:</p>
  </font><b><font FACE="Arial">
  <p ALIGN="CENTER">21</p>
  </font></b><font FACE="Arial" SIZE="2">
  <p ALIGN="left">The italicized words are usually suggestive, but you may
  need to refer to the formal definition in the Appendix.</p>
  </font><b><font FACE="Arial" SIZE="4">
  <p align="left">Windows</p>
  </font></b><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A wide variety of windows are available for you to observe
  the state of Blocks and their effects on the other entities in your
  simulations. In general, windows are specialized by the entity type.</p>
  <blockquote>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Model Window -
  Text View — Full screen textual model editor.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Block Input
  Window - Drag and Drop model building.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Journal Window -
  Record session events.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
  Online view of Block dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Expressions
  Window - Online view of values of expressions.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities
  Window - Online view of Facility Entity dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Logicswitches
  Window - Online view of Logicswitch Entity dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Matrix Window -
  Online view of the dynamics of a Matrix cross-section.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Plot Window -
  Online view of a plot of up to 8 expressions.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Queues Window -
  Online view of Queue Entity dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Savevalues
  Window - Online view of Savevalue Entity dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window
  - Online view of Storage Entity dynamics.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Table Window -
  Online view of Table Entity dynamics.</p>
  <p ALIGN="left">&nbsp;</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
  Snapshot - Picture of the state of a Transaction in the simulation.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
  Picture of the state of the Current Events Chain in the simulation.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
  Picture of the state of the Future Events Chain in the simulation.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Numeric Groups
  Snapshot - Picture of the state of the Numeric Groups in the simulation.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Userchains
  Snapshot - Picture of the state of the User Chains in the simulation.</p>
  </font><font FACE="Symbol" SIZE="2">
  <p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
  Groups Snapshot - Picture of the state of the Transaction Groups in the
  simulation.</p>
  <p ALIGN="left">&nbsp;</p>
  </font><b><font FACE="Arial" SIZE="5">
  <p align="left">&nbsp;</p>
  </blockquote>
  </blockquote>
  </blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a name="ADOPT">ADOPT</a><!--mstheme--></font></h1>
<blockquote>
  <blockquote>
    <p align="left">ADOPT Blocks are used to change the Assembly Set of the Active Transaction.</p>
    <p ALIGN="CENTER">ADOPT A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Assembly
  Set. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ADOPT 2000</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The numerical Assembly Set value of the Active Transaction is
given the value 2000. In effect, the Active Transaction becomes a member of
Assembly Set 2000.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters an ADOPT Block, Operand A is
evaluated numerically, and truncated. If the result is less than or equal to
zero, an Error Stop occurs. Otherwise, the result is assigned to the Assembly
Set value of the Active Transaction.</p>
<p ALIGN="left">Every Transaction is assigned to an Assembly Set when it is
created. For Transactions created in GENERATE Blocks, the initial assignment
uses the same number for the Assembly Set as was used for the Transaction
Number. For Transactions created in SPLIT Blocks, the offspring Transactions are
placed in the same Assembly Set as their parent Transaction.</p>
<p ALIGN="left">Assembly Sets are used to combine related Transactions in
ASSEMBLE and GATHER Blocks. The ADOPT Block provides for easy control of
Assembly Set assignments.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an ADOPT Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ASSEMBLE&nbsp;-&nbsp;Wait
for and destroy Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GATHER&nbsp;-&nbsp;Wait
for Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MATCH - Wait for
Assembly Set member.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SPLIT - Create
Transaction(s) in the same Assembly Set.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A1&nbsp;-&nbsp;Assembly
Set. Return the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MB<i>Entnum</i>&nbsp;-&nbsp;Match
at Block. MB<i>Entnum</i> returns a 1 if there is a Transaction at Block <i>Entnum</i>
which is in the same Assembly Set as the Active Transaction. MB<i>Entnum</i>
returns a 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="ADVANCE">ADVANCE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An ADVANCE Block delays the progress of a Transaction for a specified amount
of simulated time.</p>
    <p ALIGN="CENTER">ADVANCE A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;The
  mean time increment. Required. The operand must be <i>Name</i>, <i>Number</i>,
  <i>String</i>, <i>ParenthesizedExpression, SNA</i> or<i> SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;The time half-range or, if a function,
  the function modifier. Optional. The operand must be <i>Null</i>, <i>Name,</i>
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ADVANCE 101.6,50.3</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This example creates a Block which chooses a random number
between 51.3 and 151.9, inclusively (i.e. 101.6 plus or minus 50.3), and delays
the entering Transaction that amount of simulated time.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An ADVANCE Block calculates a time increment and places the
entering Transaction on the Future Events Chain (FEC) for that amount of
simulated time.</p>
<p ALIGN="left">The time increment can be calculated in several ways. If only
the A Operand is specified, it is evaluated and used as the time increment. If
the A and B operands are present, and B does not specify a function, both A and
B are evaluated numerically and a random number between A-B and A+B,
inclusively, is used as the time increment. You can select which random number
generator number is to be used as the source of the random number. This is set
in the &quot;Random&quot; page of the Model Settings Notebook.</p>
</blockquote>
</blockquote>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
CHOOSE</font><b><font FACE="Arial"> View / Settings / Model</p>
<blockquote>
  <blockquote>
  </font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">then select the </font><b><font FACE="Arial">Random</font></b><font FACE="Arial" SIZE="2">
page. Then fill in the desired random number stream entity number in the entry
box marked &quot;ADVANCE&quot;. The installation default is to use Random Number
Stream number 1.</p>
<p ALIGN="left">If B is an FN class SNA, called a Function Modifier, the
evaluating B is multiplied by the result of evaluating the A Operand; the
product is used as the time increment.</p>
<p ALIGN="left">If zero is calculated as the time increment (ADVANCE 0), the
entering Transaction is placed on the Current Events Chain in front of priority
peers. Such a Block then behaves as a null operation. A further discussion of
the Current Events Chain can be found in Chapter 9.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If a negative
number is calculated as the time increment, an Error Stop occurs.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Normally, Transactions are not refused entry to an ADVANCE
Block. However, since preempted Transactions are not permitted to exist on the
Future Events Chain, a preempted Transaction will not be permitted to enter an
ADVANCE Block if the time increment is positive (nonzero).</p>
<p ALIGN="left">When a Transaction is refused entry, its Delay Indicator is
set and remains so until the Transaction enters a &quot;Simultaneous&quot; Mode
TRANSFER Block. To coordinate the state of multiple entities, it is better to
use a TEST Block and BOOLEAN VARIABLE instead of a TRANSFER SIM Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="ALTER">ALTER</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An ALTER Block changes the priority or a Parameter of selected members of a
Transaction Group.</p>
    <p ALIGN="CENTER">ALTER O A,B,C,D,E,F,G</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator. Relationship of E to F for the alteration to occur. These choices
  are explained below. Optional. The operator must be <i>Null</i>, E, G, GE, L,
  LE, MAX, MIN, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Transaction Group. Group whose members
  will be tested for alteration. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Limit. The maximum number of Transactions
  to be altered. The default is ALL. Optional. The operand must be <i>Null, Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Altered attribute. The member Transaction
  Parameter to be altered, or PR to alter the member Transaction priority. The
  operand must be PR, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Replacement value. The value which will
  replace attribute C. Required. The operand must be <i>Name</i>, <i>Number</i>,
  <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;Test value. PR or Parameter number. The
  member Transaction Parameter which determines whether each Group member
  Transaction should be altered, or PR to use the Transaction priority for the
  determination. It is evaluated with respect to the Transaction Group member.
  Optional. The operand must be PR, <i>Null, Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Reference value. The value against which
  the E Operand is compared. It is evaluated with respect to the Active
  Transaction. Optional. The operand must be <i>Null, Name</i>, <i>Number</i>, <i>String</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">G</b> - Alternate Block number. The alternate destination
  for the Active Transaction. Optional. The operand must be <i>Null, Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ALTER Inventory,ALL,Price,49.95</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this simple example, all Transactions in the Transaction
Group named Inventory have their Parameter named Price set equal to 49.95.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">ALTER NE Bin7,10,Price,49.95,PartNum,99.95,Out</p>
</b>
<p ALIGN="left">In this example, when a Transaction enters the ALTER Block,
Transaction Group named Bin7 is scanned for Transactions which do not have a
value of 99.95 in their Parameter named PartNum. The first 10 Transactions which
meet the test have the value of their Parameter named Price set to 49.95. If 10
Transactions cannot be found which pass the test, the entering Transaction
attempts to enter the Block labeled Out. Otherwise, it proceeds to the Next
Sequential Block.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An ALTER Block selects Transactions from a Transaction Group
and alters one of the attributes of each of these Transactions. When a
Transaction Group member is altered, its Transaction attribute specified by the
C Operand is given the value specified by the D Operand. Altered Transactions
are not displaced from their context. However, the Transaction entering the
ALTER Block may be redirected according to the G Operand.</p>
<p ALIGN="left">If you do not use a conditional operator, or operands E or F,
all Transactions up to the limit (Operand B) are altered. In this case, no
priority or Parameter test is made to determine whether or not to alter the
attribute of the member Transaction.</p>
<p ALIGN="left">If you use operands E, F, or a conditional operator, each
Group member must pass a test before it is altered. Operand E specifies which
attribute of the member Transactions is to be tested. It may be compared to the
minimum or the maximum of all such Group member attributes by using MIN or MAX
as the conditional operator. All Transactions which are tested and have the
maximum or minimum attribute are altered. In this case, you must not use Operand
F.</p>
<p ALIGN="left">You may use a conditional operator to specify the
relationship between the Transaction attribute (Operand E) and the reference
value (Operand F) which will initiate the alteration of the Transaction. The
default for the conditional operator is E for equality. If you use no
conditional operator, but you use operand E and Operand F, the values must be
equal for the member Transaction attribute to be altered.</p>
<p ALIGN="left">You may compare the Group member attribute to Operand F, with
or without a conditional operator. In this case, the conditional operator must
not be MIN or MAX. Operand E always refers to the Group member under test.
However, if any other operand is a Transaction related SNA, it is evaluated with
respect to the entering Transaction.</p>
<p ALIGN="left">The B Operand cuts off the Group scan when it equals the
number of Transactions that have been altered. The default is ALL. If there is
no attribute test, that is, if E is not specified, Transactions are altered
until the alteration count equals B or until the entire Group has been tested.</p>
<p ALIGN="left">The G Operand indicates an alternate destination Block to be
taken by the entering Transaction when a special condition occurs. The G Operand
is used for the next Block under the following conditions:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;No Transaction is
altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;The count of
altered Transactions specified by B cannot be reached.</p>
</blockquote>
<p ALIGN="left">If the G Operand is not used, the entering Transaction always
goes to the Next Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The conditional operator may be E, G, GE, L, LE, MAX, MIN, or
NE. If no conditional operator is used, E (equality) is assumed. When the
condition is true, the Transaction being tested is altered. The conditions are
defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be equal to the
reference value specified by Operand F for the member Transaction to be altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be greater than the
reference value specified by Operand F for the member Transaction to be altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be greater than or
equal to the reference value specified by Operand F for the member Transaction
to be altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be less than the
reference value specified by Operand F for the member Transaction to be altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be less than or equal
to the reference value specified by Operand F for the member Transaction to be
altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MAX&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be equal to the largest
such attribute of all Transactions in the Group for the member Transaction to be
altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MIN&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be equal to the
smallest such attribute of all Transactions in the Group for the member
Transaction to be altered.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand E must be unequal to the
reference value specified by Operand F for the member Transaction to be altered.</p>
</blockquote>
<p ALIGN="left">If no conditional operator is used, E is assumed.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand E is
used, then you must use Operand F or else you must use the conditional operator
MIN or MAX.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand F is
used, you must use Operand E, and not MIN or MAX.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If MIN or MAX is
used for the conditional operator, Operand E must be used and Operand F must not
be used.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an ALTER Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Transactions are added to Transaction Groups, and numbers are
added to Numeric Groups by JOIN Blocks. Transactions in Groups can be referenced
by ALTER, EXAMINE, REMOVE, and SCAN Blocks. Numbers in Numeric Groups can be
referenced by EXAMINE and REMOVE Blocks.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GT<i>Entnum</i> -
Transaction Group count. GT<i>Entnum</i> returns the membership count of
Transaction Group <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction Groups
Snapshot - Picture of the state of the Transaction Groups in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="ASSEMBLE">ASSEMBLE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">Wait for and destroy related Transactions.</p>
    <p ALIGN="CENTER">ASSEMBLE A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transaction
  count. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ASSEMBLE 2</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the ASSEMBLE Block. The first
Transaction of an Assembly Set (see Section 9.3) is caused to wait when it
enters an ASSEMBLE Block. When another Transaction in the same Assembly Set
enters the Block, it is destroyed and the waiting Transaction is allowed to
continue.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters an ASSEMBLE Block, the Match Chain
of the Block is searched for a waiting Transaction of the same Assembly Set. If
there are no other members of the same Assembly Set present, the A Operand is
evaluated, truncated, decremented by one, and saved in a storage location in the
Transaction. If this number is zero, the Transaction immediately attempts to
enter the Next Sequential Block. Otherwise the Transaction is placed on a queue
attached to the ASSEMBLE Block called the Match Chain to await the arrival of
other members of its Assembly Set.</p>
<p ALIGN="left">When a Transaction enters an ASSEMBLE Block, if a waiting
Transaction is found, the entering Transaction is destroyed and the Transaction
count that was saved in the chained Transaction is reduced by one. When this
count becomes 0, the waiting Transaction is removed from the Match Chain. If
this Transaction has not been preempted at any Facility, it attempts to enter
the Next Sequential Block. When it does so, it is scheduled behind active
Transactions of the same priority.</p>
<p ALIGN="left">Preempted Transactions which complete an assembly at an
ASSEMBLE Block are not permitted to leave the Block until all preemptions have
been cleared. More discussion of the preemption mechanism can be found in
Section 9.4. Preempted Transactions which have been removed from the Match Chain
do not participate in later assemblies even though they remain in the ASSEMBLE
Block.</p>
<p ALIGN="left">ASSEMBLE Blocks differ from GATHER Blocks in that succeeding
Transactions are destroyed at an ASSEMBLE.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transactions which
are currently preempted are not permitted to leave ASSEMBLE Blocks.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an ASSEMBLE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ADOPT&nbsp;-&nbsp;Set
the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GATHER&nbsp;-&nbsp;Wait
for members of an Assembly Set.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MATCH - Wait for
Assembly Set member.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SPLIT - Create
Transactions in the same Assembly Set.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A1&nbsp;-&nbsp;Assembly
Set. Return the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MB<i>Entnum</i>&nbsp;-&nbsp;Match
at Block. MB<i>Entnum</i> returns a 1 if there is a Transaction at Block <i>Entnum</i>
which is in the same Assembly Set as the Active Transaction. MB<i>Entnum</i>
returns a 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="ASSIGN">ASSIGN</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">ASSIGN Blocks are used to place or modify a value in a Transaction Parameter.</p>
    <p ALIGN="CENTER">ASSIGN A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Parameter
  number of the Active Transaction. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>, followed by +,
  -, or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Value. Required. the operand must be <i>Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression</i>, SNA, or SNA*Parameter.</p>
  <b>
  <p ALIGN="left">C</b> - Function number. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ASSIGN 2000,150.6</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the ASSIGN Block. The value
150.6 is assigned to Parameter number 2000 of the entering Transaction. If no
such Parameter exists, it is created.</p>
<b>
<p ALIGN="CENTER">ASSIGN TEXT,&quot;Look on my works, ye Mighty, and
despair.&quot;</p>
</b>
<p ALIGN="left">In this example, a string is assigned to the Parameter of the
Active Transaction named TEXT. If no such Parameter exists, it is created.</p>
<b>
<p ALIGN="CENTER">ASSIGN 2000+,-3</p>
</b>
<p ALIGN="left">In this example, the [+] following Operand A indicates that
the value of Operand B is to be added to the original Parameter value. This
Block adds a -3 to the value contained in Transaction Parameter 2000. If there
is no such Transaction Parameter, one is created and initialized to 0 before the
addition. In this case, the value of the Transaction Parameter becomes -3.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">ASSIGN 2000-,-3</p>
</b>
<p ALIGN="left">In this example, the [-] following Operand A indicates that
the value of Operand B is to be subtracted from to the original Parameter value.
This Block subtracts a -3 from the value contained in Transaction Parameter
2000. If there is no such Transaction Parameter, one is created and initialized
to 0 before the subtraction. Then value of the Transaction Parameter becomes 3.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters an ASSIGN Block, the value of the
Transaction Parameter identified in the A Operand is set according to the B and
C operands. A Transaction Parameter is created if necessary.</p>
<p ALIGN="left">You may assign, add to, or subtract from the numeric
equivalent of the Transaction Parameter’s value. If there is no C Operand,
Operand B is evaluated and is used as the new value, or its numeric equivalent
is used as the increment or decrement. Addition and subtraction are specified by
a + or - suffix immediately following the A Operand. If there is no such suffix,
Operand B is evaluated and the result is given to the value of the Transaction
Parameter.</p>
<p ALIGN="left">Optionally, Operand C may be used to determine the number of
a function, here called a &quot;Function Modifier&quot;. If specified, the
function is evaluated, multiplied by the numerical equivalent of the evaluated B
Operand, and the result is added, subtracted, or assigned to the value of the
Transaction Parameter depending on the optional suffix of the A Operand. Notice
that Operand C specifies a Function Entity number or name (do not precede it
with an FN or FN$). If an FN class SNA is used, the GPSS Function is evaluated
and the result is used to specify a second GPSS Function which is then
evaluated.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive, but may be followed by a + or - suffix.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an ASSIGN Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;P<i>Parameter</i>
or *<i>Parameter</i>&nbsp;-&nbsp;Parameter value. P<i>Parameter</i> returns the
value of Parameter <i>Parameter</i>. (note: e.g. P1 or *1 or P$NAME will yield
the value in the Parameter 1 in the first two cases and the Parameter called
NAME in the final case.)</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="BUFFER">BUFFER</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A BUFFER Block places the Active Transaction on the Current Events Chain
behind its priority peers.</p>
    <p ALIGN="CENTER">BUFFER</p>
    <p align="left">Operands</p>
  </font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">None.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">BUFFER</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This example creates a Block which gives Transactions other
than the Active Transaction a chance to be scheduled.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a BUFFER Block, it is placed on the
Current Events Chain behind Transactions of equal priority.</p>
<p ALIGN="left">The Transaction scheduler tries to move the Active
Transaction as far as it can in the simulation. In effect, the Transaction
scheduler removes the Active Transaction from the CEC, calls the routine for the
Next Sequential Block (NSB), and unless something extraordinary occurs, replaces
the Transaction on the CEC <i>IN FRONT</i> of its peers (i.e. same priority) on
the CEC. This replacement is modified by PRIORITY and BUFFER Blocks. After a
Transaction enters a BUFFER Block, it is replaced <i>BEHIND</i> its peers on the
CEC. A more detailed discussion of Transaction scheduling is in Chapter 9.</p>
<p ALIGN="left">BUFFER Blocks are used to allow newly reactivated
Transactions to get ahead of the Active Transaction. It is a common occurrence
that the Active Transaction enters a Block which triggers an event which must
proceed to completion before the Active Transaction should proceed. It may be
necessary to follow such Blocks by BUFFER Blocks in order to allow reactivated
Transaction(s) to proceed immediately in the simulation. Alternately, the
reactivated Transactions could be given a higher priority.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a BUFFER Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="CLOSE">CLOSE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A CLOSE Block terminates a Data Stream and retrieves its error code.</p>
    <p ALIGN="CENTER">CLOSE A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transaction
  Parameter. Optional. The operand must be <i>Null, Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Data Stream. Optional. The operand must
  be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>. The default is 1.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Alternate Destination. Optional. The
  operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">CLOSE Error_Parm,2</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the CLOSE Block terminates the operation of
Data Stream 2 and frees all the resources associated with it. The internal error
code of Data Stream 2 is placed in Parameter Error_Parm of the Active
Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A CLOSE Block shuts down a Data Stream and retrieves its
error code.</p>
<p ALIGN="left">If Operand A is used, it is evaluated numerically, truncated,
and used as the number of a Parameter of the Active Transaction. If no such
Parameter exits, one is created. The error code of the Data Stream is placed in
this Parameter.</p>
<p ALIGN="left">If Operand B is used, it is evaluated numerically, truncated,
and used as the entity number of the Data Stream. The result must be a positive
integer. If Operand B is not used, Data Stream number 1 is closed.</p>
<p ALIGN="left">If Operand C is used, it is evaluated numerically, truncated,
and used as the Block Entity number of an Alternate Destination Block. When the
error code of the Data Stream is nonzero, the Active Transaction proceeds to the
Alternate Destination Block after it enters the CLOSE Block.</p>
<p ALIGN="left">Chapter 4 (4.16) contains a full discussion of Data Streams,
including the error code descriptions, under the Section entitled <u>Data
Streams</u>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Blocking Condition</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The simulation is blocked while CLOSE retrieves the error
code.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A and B, if
specified, must be positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;C, if specified,
must be a valid Block location in the simulation.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a CLOSE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;OPEN&nbsp;-&nbsp;Create
a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;READ&nbsp;-&nbsp;Retrieve
a text line from a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;WRITE&nbsp;-&nbsp;Send
a text line to a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SEEK&nbsp;-&nbsp;Set
the Current Line Position of a Data Stream.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="COUNT">COUNT</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A COUNT Block places an entity count into a Parameter of the Active
Transaction.</p>
    <p ALIGN="CENTER">COUNT O A,B,C,D,E</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator or logical operator. These choices are explained below. Required. The
  operator must be FNV, FV, I, LS, LR, NI, NU, SE, SF, SNE, SNF, SNV, SV, U, E,
  G, GE, L, LE, MIN, MAX, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Parameter number to receive count.
  Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Number or name of entity at lower end of
  range. The entity number of the first entity to be tested. The entity type is
  implicitly specified by the logical operator or by Operand E. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Number or name of entity at upper end of
  range. The entity number of the last entity to be tested. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Reference value for E Operand. Required
  only when in Conditional Mode. Optional. The operand must be <i>Null, Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;SNA class name. Entity attribute
  specifier for Conditional Mode tests. Required only for Conditional Mode. The
  type of SNA implies the entity type. You do not specify the entity number in
  Operand E. This is done automatically as the entity number range is searched.
  You may use any entity SNA class. The operand must be <i>Null</i> or <i>entitySNAclass</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">COUNT SF FullCount,Warehouse1,Warehouse13</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the number of full Storage Entities whose
entity numbers fall between Warehouse1 and Warehouse13 and will be stored in the
Transaction Parameter named FullCount. Normally, the Storage Entity Labels
should be assigned contiguous integers in a set of EQU Commands.</p>
<b>
<p ALIGN="CENTER">COUNT E EmptyCount,FirstQueue,LastQueue,0,Q</p>
</b>
<p ALIGN="left">In this example, the COUNT Block operates in Conditional
Mode. Operand E specifies SNA class Q, which refers to a Queue Entity. Each
Queue Entity with entity number between that of FirstQueue and LastQueue is
tested. Any such queue entity whose current content is 0 is counted. EmptyCount
is the name of the Parameter of the Active Transaction to receive the count of
&quot;empty&quot; Queue Entities in the specified range. Normally, the Queue
Entity Labels should be assigned contiguous integers in a set of EQU Commands.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the COUNT Block is entered, the entity specified by
Operand B is tested. If the entity does not exist and does not require a
separate Command for its definition, a new entity is created. Thereafter, each
entity in the range indicated by operands B and C is tested. An SNA is built
automatically for each entity. The SNA class used to build the SNA is taken from
Operand E or is specified by the logical operator.</p>
<p ALIGN="left">A COUNT Block operates in either Logical Mode or in
Conditional Mode, depending on whether a logical operator or a conditional
operator is used.</p>
<p ALIGN="left">When a logical operator is used (defined below), Operands A,
B, and C are used. The condition specified by the logical operator is tested for
the entities whose numbers fall between B and C. The count of entities in that
condition is placed in the Parameter of the entering Transaction whose number or
name is given by Operand A. If the Parameter does not exist, it is created. The
entity type is implied by the logical operator.</p>
<p ALIGN="left">When a conditional operator is used, Operands A, B, C, D, and
E are used. Operands A, B, C, are used to specify the target Parameter, and the
range of entity numbers, as above. But now the conditional operator specifies
the relationship between operands D and E that must hold for the entity to be
counted.</p>
<p ALIGN="left">In Conditional Mode, the SNA class is combined with the
entity specifications in order to build an SNA. The entity type implied by each
SNA class is given in Section 3.4. The complete SNA is built from this class and
the number of the entity being tested. Each such SNA is evaluated for each
entity and compared to the reference value in Operand D. If the condition set up
in the conditional operator is met, the entity is counted.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Logical Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Either a conditional operator or a logical operator is
required. The logical operator may be FNV, FV, I, LS, LR, NI, NU, SE, SF, SNE,
SNF, SNV, SV, or U. When the logical operator is true, the entity being tested
is counted. The conditions are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FNV&nbsp;-&nbsp;The
Facility must be unavailable in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV&nbsp;-&nbsp;The
Facility must be available in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;I&nbsp;-&nbsp;The
Facility must be currently interrupted (preempted) in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LS&nbsp;-&nbsp;The
Logicswitch Entity must be set (in the &quot;on&quot; state) in order to be
counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LR&nbsp;-&nbsp;The
Logicswitch Entity must be reset (in the &quot;off&quot; state) in order to be
counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NI&nbsp;-&nbsp;The
Facility must NOT be currently interrupted (preempted) in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NU&nbsp;-&nbsp;The
Facility must not be in use in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE&nbsp;-&nbsp;The
Storage must be empty in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF&nbsp;-&nbsp;The
Storage must be full in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNE&nbsp;-&nbsp;The
Storage must NOT be empty in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNF&nbsp;-&nbsp;The
Storage must NOT be full in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNV&nbsp;-&nbsp;The
Storage must NOT be available in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV&nbsp;-&nbsp;The
Storage must be available in order to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;U&nbsp;-&nbsp;The
Facility must be in use in order to be counted.</p>
<p ALIGN="left">&nbsp;</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Either a conditional operator or a logical operator is
required. The conditional operator may be E, G, GE, L, LE, MAX, MIN, or NE. The
conditions are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the reference value specified by
Operand D for the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
value of the automatic SNA must be greater than the reference value specified by
Operand D for the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
value of the automatic SNA must be greater than or equal to the reference value
specified by Operand D for the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
value of the automatic SNA must be less than the reference value specified by
Operand D for the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
value of the automatic SNA must be less than or equal to the reference value
specified by Operand D for the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MAX&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the greatest of all such SNAs, for
the entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MIN&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the least of all such SNAs, for the
entity to be counted.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
value of the automatic SNA must be unequal to the reference value specified by
Operand E for the entity to be counted.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;D and E are
required if O is a conditional operator.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;When evaluated, C
must be greater than or equal to B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;The number of
tested entities must be less than 32768.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a COUNT Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Logicswitches
Window - Online view of Logicswitch Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="DEPART">DEPART</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A DEPART Block registers statistics which indicate a reduction in the content
of a Queue Entity.</p>
    <p ALIGN="CENTER">DEPART A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Queue
  Entity name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Number of units by which to decrease
  content of the Queue Entity. Default value is 1. Optional. The operand must be
  <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>String</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">DEPART WaitingLine</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example the content of the Queue Entity named
WaitingLine is reduced by one and the associated statistics accumulators are
updated.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a DEPART Block, Operand A is
evaluated, truncated, and used to find the Queue Entity with that number. The
Queue Entity is created if necessary. If a Queue Entity is created, the attempt
to decrement the content of the Queue Entity will cause an Error Stop. Manual
Simulation can be used to alter the Queue Entity content interactively.</p>
<p ALIGN="left">Operand B specifies the value to be used to decrease the
content of the Queue Entity. If B was specified, Operand B is evaluated
numerically, truncated, and used as the result. If B was not specified, the
value of 1 is used.</p>
<p ALIGN="left">Finally, the statistics accumulated on behalf of the Queue
Entity are updated. If Qtable Entities have been defined for this same Queue
Entity, they are also updated.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A and B must be
positive, if specified.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If the content of
the Queue Entity is about to become negative, an Error Stop occurs.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a DEPART Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Q<i>Entnum</i>&nbsp;-&nbsp;Current
content of queue entity. The current count value of Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QA<i>Entnum</i>&nbsp;-&nbsp;Average
queue content. The time weighted average count for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QC<i>Entnum</i>&nbsp;-&nbsp;Total
queue entries. The sum of all queue entry counts for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QM<i>Entnum</i>&nbsp;-&nbsp;Maximum
queue content. The maximum count (high water mark) of Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QT<i>Entnum</i>&nbsp;-&nbsp;Average
queue residence time. The time weighted average of the count for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QX<i>Entnum</i>&nbsp;-&nbsp;Average
queue residence time excluding zero entries. The time weighted average of the
count for Queue Entity <i>Entnum</i> not counting entries with a zero residence
time.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QZ<i>Entnum</i>&nbsp;-&nbsp;Queue
zero entry count. The number of entries of Queue Entity <i>Entnum</i> with a
zero residence time.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Queues Window -
Online view of Queue Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="DISPLACE">DISPLACE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A DISPLACE Block moves any Transaction.</p>
    <p ALIGN="CENTER">DISPLACE A,B,C,D</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transaction
  number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Displaced Transaction destination. Block
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Parameter number. Parameter of displaced
  Transaction to receive residual time if preempted Transaction is removed from
  FEC. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Alternate destination for the Active
  Transaction. Block name or number. Optional. The operand must be <i>Null, Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font></b><font FACE="Arial" SIZE="2">
<b>
<p ALIGN="CENTER">DISPLACE X$Culprit,Compensate,Residual,NotCaught</p>
</b>
<p ALIGN="left">In this example, the DISPLACE Block moves the Transaction
whose number is kept in the Savevalue named Culprit. If the target Transaction
exists, it is sent to the Block labeled Compensate as its Next Sequential Block.
If it was residing on the Future Events Chain, any time left until its reentry
into the simulation is calculated and stored in the Parameter named Residual of
the displaced Transaction. If the Transaction was on the FEC and no such
Parameter exists, it is created. If the target Transaction does not exist, the
Active Transaction moves to the alternate destination Block labeled NotCaught,
after entering the DISPLACE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A DISPLACE Block moves any Transaction in the simulation to
any Block. The displaced Transaction is removed from Transaction chains, as
discussed below, and is scheduled to enter the destination Block.</p>
<p ALIGN="left">When a Transaction enters a DISPLACE Block, Operand A is
evaluated numerically, truncated, and used to find the Transaction to be
displaced. If that Transaction does not exist, processing ceases, and the Active
Transaction is sent to the Alternate Destination specified by Operand D, if any.</p>
<p ALIGN="left">If the Transaction exists, it is given the new Block
destination specified by Operand B.</p>
<p ALIGN="left">If the displaced Transaction is on the FEC, it is removed
from it and the residual time duration is calculated as the time which the
Transaction is scheduled to come off the FEC minus the current time. If the C
Operand is used, the residual time is saved in a Transaction Parameter. If no
such Parameter exists and Operand C is used, a new Parameter is created.</p>
<p ALIGN="left">When a Transaction is displaced, it is given a new Block
destination and is dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;PENDING
(INTERRUPT-MODE PREEMPT) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;DELAY (MAJOR
PRIORITY) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;USER CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;RETRY CHAINS</p>
</blockquote>
<p ALIGN="left">and not dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;INTERRUPT
(PREEMPTED) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GROUP CHAINS</p>
</blockquote>
<p ALIGN="left">When a Transaction is displaced, preemptions at Facilities
are not cleared.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a DISPLACE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;XN1&nbsp;-&nbsp;Transaction
number of the Active Transaction.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Library Procedures</p>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QueryXNExist -
determine the existence of a Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QueryXNParameter -
retrieve the value of a Transaction Parameter.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QueryXNAssemblySet
- retrieve the Assembly Set of a Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QueryXNPriority -
retrieve the priority of a Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QueryXNM1 -
retrieve the Mark Time of a Transaction.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="ENTER">ENTER</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">When a Transaction attempts to enter an ENTER Block, it either takes or waits
for a specified number of storage units.</p>
    <p ALIGN="CENTER">ENTER A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Storage
  Entity name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Number of units by which to decrease the
  available storage capacity. Default value is 1. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">ENTER Toolkit,2</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example the Active Transaction demands 2 storage
units from the storage units available at the Storage Entity named Toolkit. If
there are not enough storage units remaining in the Storage Entity, the
Transaction comes to rest on the Delay Chain of the Storage Entity.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters an ENTER Block, Operand A is
evaluated and used to find the Storage Entity with that number. If the Storage
Entity does not exist, an Error Stop occurs. Storage entities must be defined by
a STORAGE Command.</p>
<p ALIGN="left">If the Storage Entity exists, Operand B is used to determine
the storage demand. If B was specified, Operand B is evaluated, truncated, and
used as the result. If B was not specified, the value of 1 is used.</p>
<p ALIGN="left">If the Storage Entity is in the available state, and if there
are enough storage units to satisfy the demand, the Transaction is allowed to
enter the ENTER Block and the demand is granted by reducing the current storage
units by the amount of the demand. Otherwise, the Transaction comes to rest on
the Delay Chain of the Storage Entity in priority order.</p>
<p ALIGN="left">When storage units are freed by a LEAVE Block, a
&quot;first-fit-with-skip&quot; discipline is used to choose the next
Transaction(s) to be allowed entry into the ENTER Block. Any such entry is
permitted before the Active Transaction leaves the LEAVE Block. This prevents
&quot;line-bucking&quot;.</p>
<p ALIGN="left">When a Transaction enters an ENTER or LEAVE Block, the
statistics accumulated on behalf of the Storage Entity are updated.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B must be
nonnegative.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A request for more
storage than exists will result in an Error Stop. (e.g. a B Operand that is
larger than the defined size of the STORAGE named in Operand A.)</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;The Active
Transaction is refused entry to the ENTER Block if its storage demand cannot be
met.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;The Active
Transaction is refused entry to the ENTER Block if the Storage Entity is in the
unavailable state.</p>
</blockquote>
<p ALIGN="left">When a Transaction is refused entry, its Delay Indicator is
set and remains so until the Transaction enters a &quot;Simultaneous&quot; Mode
TRANSFER Block. Simultaneous Mode TRANSFER Blocks are rarely used. A BOOLEAN
VARIABLE can more efficiently control the coordination of the state of a number
of resources when used in a TEST Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Storage Entity must be defined in a STORAGE Command before
it can be updated by an ENTER Block. The STORAGE Command must exist in the
model, or must be sent to the Simulation Object interactively, before a
Transaction can enter the ENTER Block. Any attempt to do so before the Storage
Entity is defined, cases an Error Stop.</p>
<p ALIGN="left">A Storage Entity can be redefined by an interactive STORAGE
Command.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;R<i>Entnum</i>&nbsp;-&nbsp;Unused
storage capacity. The storage content (or &quot;token&quot; spaces) available
for use by entering Transactions at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;S<i>Entnum</i>&nbsp;-&nbsp;Storage
in use. S<i>Entnum</i> returns the amount of storage content (or
&quot;token&quot; spaces) currently in use by entering Transactions at Storage
Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SA<i>Entnum</i>&nbsp;-&nbsp;Average
storage in use. SA<i>Entnum</i> returns the time weighted average of storage
capacity (or &quot;token&quot; spaces) in use at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SC<i>Entnum</i>&nbsp;-&nbsp;Storage
use count. Total number of storage units that have been entered in (or
&quot;token&quot; spaces that have been used at) Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE<i>Entnum</i>&nbsp;-&nbsp;Storage
empty. SE<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
unused, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF<i>Entnum</i>&nbsp;-&nbsp;Storage
full. SFentnum returns 1 if Storage Entity <i>Entnum</i> is completely used, 0
otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SR<i>Entnum</i>&nbsp;-&nbsp;Storage
utilization. The fraction of total usage represented by the average storage in
use at Storage Entity <i>Entnum</i>. SR<i>Entnum</i> is expressed in
parts-per-thousand and therefore returns an real value 0-1000, inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SM<i>Entnum</i>&nbsp;-&nbsp;Maximum
storage in use at Storage Entity <i>Entnum</i>. The &quot;high water mark&quot;.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ST<i>Entnum</i>&nbsp;-&nbsp;Average
holding time per unit at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV<i>Entnum</i>&nbsp;-&nbsp;Storage
in available state. SV<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is
in the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="EXAMINE">EXAMINE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An EXAMINE Block may be used to test for membership in a Numeric Group or a
Transaction Group.</p>
    <p ALIGN="CENTER">EXAMINE A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Group
  number. Group whose members will be examined. Required. The operand must be <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Numeric Mode only. The value to be tested
  for membership in the Numeric Group. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>,
  or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Block number. Alternate destination for
  Active Transaction if no membership is found. Required. The operand must be <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">EXAMINE ValidColors,P$Color,NotCorrectColor</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this simple example, if the Numeric Group named
ValidColors does not include the value contained in the Transaction Parameter
named Color, the Active Transaction proceeds to the Block location
NotCorrectColor. If the value is a Numeric Group member, the Active Transaction
proceeds to the Next Sequential Block (NSB).</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">EXAMINE ValidXNs,,NotValidXN</p>
</b>
<p ALIGN="left">In this example, if the Active Transaction is not a member of
the Transaction Group named ValidXNs, the Active Transaction proceeds to the
Block location NotValidXN. If the Transaction is a Transaction Group member, it
proceeds to the Next Sequential Block (NSB).</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An EXAMINE Block operates in either &quot;Numeric Mode&quot;
or &quot;Transaction Mode&quot;. If the B Operand is used, the EXAMINE Block
operates in Numeric Mode. In this case the value of Operand B is tested for
membership in the Numeric Group. If the B Operand is not used, the EXAMINE
operates in Transaction Mode. Then, It is the Active Transaction which is tested
for membership in a Transaction Group.</p>
<p ALIGN="left">When a Transaction enters an EXAMINE Block, Operand A is
evaluated and the appropriate Group entity is found. If there is no such Group,
one is created.</p>
<p ALIGN="left">If the B Operand is used, it is evaluated numerically and the
result is tested for membership in the Numeric Group. If Operand B is not used,
the Active Transaction is tested for membership in the Transaction Group
specified by the A Operand.</p>
<p ALIGN="left">There is some loss of efficiency when non-integers are used
in Numeric Groups.</p>
<p ALIGN="left">If the membership test fails, Operand C is evaluated,
truncated, and used as the destination Block number for the Active Transaction.
If the membership test is successful, the Active Transaction proceeds to the
Next Sequential Block (NSB).</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A and C must be
positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;C must be a Block
location in the simulation.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an EXAMINE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Transactions and numbers are added to Groups by JOIN Blocks.
Transactions in Transaction Groups can be referenced by ALTER, EXAMINE, REMOVE,
and SCAN Blocks. Numbers in Numeric Groups can be referenced by EXAMINE and
REMOVE Blocks.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GN<i>Entnum</i>&nbsp;-&nbsp;Numeric
Group Count. GN<i>Entnum</i> returns the membership count of Numeric Group <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GT<i>Entnum</i>&nbsp;-&nbsp;Transaction
Group Count. GT<i>Entnum</i> returns the membership count of Transaction Group <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Numeric Groups
Snapshot - Picture of the state of the Numeric Groups in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction Groups
Snapshot - Picture of the state of the Transaction Groups in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="EXECUTE">EXECUTE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">The EXECUTE Block can cause any Block routine in the simulation to be done on
behalf of the Active Transaction.</p>
    <p ALIGN="CENTER">EXECUTE A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Block
  number. The name or number of the Block to be &quot;performed&quot;. required.
  The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">EXECUTE P$ActiveBlock</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This EXECUTE Block will cause the Block, whose number is in
the Parameter named ActiveBlock, to be executed with respect to the Active
Transaction.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters an EXECUTE Block, the A Operand is
evaluated and is used to find the Block with that number or name. Then the Block
routine associated with the target Block is done on behalf of the Active
Transaction.</p>
<p ALIGN="left">If the Active Transaction is refused entry to the target
Block, it remains in the EXECUTE Block.</p>
<p ALIGN="left">After the target Block routine is performed, the Active
Transaction is normally scheduled for the Block following the EXECUTE Block.
However, if the target Block schedules an alternate destination for the Active
Transaction, that Block, and not the EXECUTE Block’s next sequential Block, is
scheduled.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be a Block
location in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;An EXECUTE Block
cannot act on another EXECUTE Block.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An EXECUTE Block never refuses entry to a Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="FAVAIL">FAVAIL</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A FAVAIL Block ensures that a Facility Entity is in the available state.</p>
    <p ALIGN="CENTER">FAVAIL A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">FAVAIL Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This Block, when entered by an Active Transaction, will
ensure that the Facility Entity named Teller1 is in the available state.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A FAVAIL Block ensures that a Facility Entity is in the
available state. If the Facility Entity was previously idle, the FAVAIL Block
tries to give ownership to a waiting Transaction. This is discussed in more
detail in Chapter 9.</p>
<p ALIGN="left">If the Facility Entity was previously available, FAVAIL has
no effect.</p>
<p ALIGN="left">FAVAIL cancels the affects of FUNAVAIL on the Facility
Entity, but does not affect displaced Transactions.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a FAVAIL Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Block</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FUNAVAIL&nbsp;-&nbsp;Place
Facility Entity in the unavailable state.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The SNAs associated with Facilities are:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility Entity <i>Entnum</i> is currently busy, F<i>Entnum</i> returns
1. Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>&nbsp;-&nbsp;Facility
capture count. The number of times Facility Entity <i>Entnum</i> has become
owned by a Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum&nbsp;</i>-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility Entity <i>Entnum</i> is currently
preempted, FI<i>Entnum</i> returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility Entity <i>Entnum</i> has been busy.
FR<i>Entnum</i> is expressed in parts-per-thousand and therefore returns an real
value 0-1000, inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>&nbsp;-&nbsp;Average
Facility holding time. The average time Facility Entity <i>Entnum</i> is owned
by a capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility Entity <i>Entnum</i>
is in the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="FUNAVAIL">FUNAVAIL</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">FUNAVAIL Blocks are used to make a Facility Entity unavailable for ownership
by Transactions.</p>
    <p ALIGN="CENTER">FUNAVAIL A,B,C,D,E,F,G,H</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;- REmove or COntinue Mode for owning
  Transaction. Optional. The operand must be RE, CO, or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Block number. New Block for Transaction
  owning the Facility Entity. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Parameter number. Parameter to receive
  residual time if owning Transaction is removed from FEC. Optional. The operand
  must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;REmove or COntinue Mode for preempted
  Transactions. Optional. The operand must be RE, CO or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Block number. New Block for Transactions
  preempted at the Facility Entity. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">G</b>&nbsp;-&nbsp;REmove or COntinue Mode for Transactions
  pending or delayed at the Facility Entity. Optional. The operand must be RE,
  CO or <i>Null</i>.</p>
  <p ALIGN="left">&nbsp;</p>
  <b>
  <p ALIGN="left">H</b>&nbsp;-&nbsp;Block number. New Block for Transactions
  pending or delayed at the Facility Entity. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">FUNAVAIL Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the FUNAVAIL Block. The
Facility Entity named Teller1 is &quot;frozen&quot; during the unavailable
period. Several types of Transactions other than the Active Transaction are
affected. If an owning Transaction is in an ADVANCE Block, it will be
rescheduled on the FEC automatically when the Facility again becomes available.
The time remaining in the ADVANCE Block (i.e. the &quot;residual time&quot;) is
calculated and saved automatically when the Transaction is removed from the FEC.
The residual time becomes the time increment when the Transaction is rescheduled
on the FEC. Other Transactions delayed or pending at TELLER1 will not be able to
move during the unavailable period.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">FUNAVAIL TELLER,RE,TLR2,300,RE,MGR,CO</p>
</b>
<p ALIGN="left">In this example, the Facility Entity TELLER is made
unavailable. This means that newly arriving Transactions will be delayed. The
Transactions at or preempted at the Facility TELLER are dealt with according to
operands B-H. If the Transaction which owns Facility TELLER is on the FEC, it is
dequeued and the residual time is saved in its Parameter number 300. The owning
Transaction is displaced and sent to the Block named TLR2. Transactions
currently preempted at Facility TELLER are removed from contention and sent to
Block named MGR. Since Operand G is CO, Transactions currently delayed at
Facility TELLER are allowed to own the Facility, even though it’s in the
unavailable state.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The complexity of the FUNAVAIL Block is due to the three
classes of Transactions which must be dealt with:</p>
<p ALIGN="left">1. the owning Transaction (operands B-D),</p>
<p ALIGN="left">2. preempted Transactions on the Interrupt Chain (operands
E-F), and</p>
<p ALIGN="left">3. delayed Transactions on the Delay Chain or Pending Chain
(operands G-H).</p>
<p ALIGN="left">A FUNAVAIL Block allows you to put a Facility &quot;out of
action&quot; and to control the fate of Transactions waiting for, using, or
preempted at the Facility Entity. Transactions arriving during the unavailable
period will be delayed and not be granted ownership. A FUNAVAIL Block has no
effect if the Facility is already unavailable.</p>
<p ALIGN="left">When the REmove option is used, the Transactions are removed
from contention for the Facility If the REmove option is used for pending and
delayed Transactions, i. e. if G is RE, then H must be used to redirect the
Transactions.</p>
<p ALIGN="left">When the COntinue option is used, the Transactions on the
specific Facility chain may continue to own the Facility, even during the
unavailable period. In this case, Facility utilization statistics are adjusted
to include this time.</p>
<p ALIGN="left">When an alternate destination Block is used, the Transactions
are displaced from their current context and redirected to the new Block.
Delayed and pending Transactions, which are controlled by operands G and H,
cannot be redirected without also using the REmove option. The owning
Transaction, controlled by operands B through D, and preempted Transactions,
controlled by operands E and F, can remain in contention for the Facility and
yet be displaced to a new destination. This is done by specifying an alternate
destination without using the corresponding RE option.</p>
<p ALIGN="left">When RE is not used in Operand B, any owning Transaction
becomes preempted at this Facility. Such Transactions cannot leave ASSEMBLE,
GATHER, or MATCH Blocks or enter (nonzero) ADVANCE Blocks until all preemptions
are cleared.</p>
<p ALIGN="left">When a Transaction is displaced by using the C, F, or H
Operand, it is given a new Block destination and is dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;PENDING (waiting
to preempt) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;DELAY (waiting to
seize) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;USER CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;RETRY CHAINS</p>
</blockquote>
<p ALIGN="left">and not dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;INTERRUPT
(preempted) CHAINS of other Facilities</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GROUP CHAINS</p>
</blockquote>
<p ALIGN="left">When a Transaction is displaced from its present context
anywhere in the model, by using an alternate destination, it is removed from any
Blocking conditions but preemptions are not cleared. Such a displaced
Transaction is scheduled to enter the Block specified in Operand C of the
FUNAVAIL Block. When an owning Transaction RELEASEs or RETURNs a Facility, the
next owner is chosen from the head of the Pending Chain, the Interrupt Chain, or
the Delay Chain, in that order.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">TheOwning Transaction</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Operands B-D are used to control the owning Transaction.</p>
<p ALIGN="left">If B is CO, the owning Transaction is not removed from
ownership. It may, however, be given a new destination with the C Operand.</p>
<p ALIGN="left">If B is RE, the owning Transaction is removed from contention
for the Facility. This means that the Transaction may continue to circulate in
the simulation without restrictions due to a preemption at this Facility (there
may be outstanding preemptions at other Facilities, however). It also means that
the owning Transaction must not attempt to RETURN or RELEASE the Facility. The C
Operand must be used to redirect the course of such a Transaction.</p>
<p ALIGN="left">If B is<i> Null</i>, the owning Transaction is preempted and
placed on the Interrupt Chain of the Facility. If it was taken from the FEC and
the C Operand is not used, it will be automatically restored to the FEC using
the automatically saved residual time when the Facility again becomes available.</p>
<p ALIGN="left">The C Operand may be used regardless of Operand B. It causes
the owning Transaction to be displaced, and gives it a new destination Block. If
you choose to return the Transaction to the FEC, having used the C Operand, you
must explicitly route the Transaction to an ADVANCE Block. The D Operand causes
the residual time to be saved in a Parameter of the owning Transaction. The
residual time value is then available for explicit rescheduling when you use the
Parameter value as Operand A of an ADVANCE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Preempted Transactions</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Operands E and F are provided to control the fates of
Transactions currently preempted at this Facility.</p>
<p ALIGN="left">If E is CO, preempted Transactions are not removed from
contention for the Facility, and may own the Facility during any unavailable
period. Preempted Transactions may be given a new destination with the F
Operand.</p>
<p ALIGN="left">If E is RE, preempted Transactions are removed from
contention for the Facility. This means that the Transaction may continue to
circulate in the simulation without restrictions due to a preemption at this
Facility (there may be outstanding preemptions at other Facilities, however). It
also means that preempted Transactions must not attempt to RETURN or RELEASE the
Facility. Optionally, the F Operand is available to redirect the course of such
a Transaction.</p>
<p ALIGN="left">If E is <i>Null</i>, preempted Transactions are left on the
Interrupt Chain of the Facility, and cannot be granted ownership of the Facility
during the unavailable period.</p>
<p ALIGN="left">The F Operand may be used regardless of Operand E. It causes
preempted Transactions to be displaced, and gives them a new destination Block.
Preempted Transactions may not exist on the FEC, so no residual time options are
relevant. If E is <i>Null</i>, the preemption is not cleared for displaced
Transactions.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Pending Interrupt Mode Transactions</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Operands G and H are provided to control the fates of
Transactions on the Pending Chain (i.e. pending Interrupt Mode PREEMPTs) or the
Delay Chain.</p>
<p ALIGN="left">If G is CO, delayed Transactions are not removed from
contention for the Facility, and may own the Facility during any unavailable
period.</p>
<p ALIGN="left">If G is RE, delayed Transactions are removed from contention
for the Facility and allowed to circulate in the simulation. These Transactions
must not attempt to RETURN or RELEASE the Facility. The H Operand must be used
to redirect the course of such Transactions.</p>
<p ALIGN="left">If G is <i>Null</i>, delayed Transactions are left on the
Delay Chain or the Pending Chain of the Facility, and cannot be granted
ownership of the Facility during the unavailable period. The use of Operand H is
invalid when G is <i>Null</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If B is RE, C must
be used.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If H is used, G
must be RE.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If G is RE, H must
be used.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a FUNAVAIL Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Block</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FAVAIL&nbsp;-&nbsp;Place
Facility in the available state.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility <i>Entnum</i> is currently busy, F<i>Entnum</i> returns 1.
Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>
&nbsp;-&nbsp;Facility capture count. The number of times Facility <i>Entnum</i>
has become owned by a Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum</i>&nbsp;-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility <i>Entnum</i> is currently preempted, FI<i>Entnum</i>
returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility <i>Entnum</i> has been busy. FR<i>Entnum</i>
is expressed in parts-per-thousand and therefore returns an real value 0-1000,
inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>&nbsp;-&nbsp;Average
Facility holding time. The average time Facility <i>Entnum</i> is owned by a
capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility <i>Entnum</i> is in
the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="GATE">GATE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A GATE Block alters Transaction flow based on the state of an entity.</p>
    <p ALIGN="CENTER">GATE O A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator. Condition required of entity to be tested for successful test.
  Required. The operator must be FNV, FV, I, LS, LR, M, NI, NM, NU, SE, SF, SNE,
  SNF, SNV, SV, or U.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Entity name or number to be tested. The
  entity type is implied by the conditional operator. Required. The operand must
  be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Destination Block number when test is
  unsuccessful. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">GATE SNF MotorPool</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example of a &quot;Refuse Mode&quot; GATE Block, the
Active Transaction enters the GATE Block if the Storage Entity named MotorPool
is not full (i. e. if at least 1 unit of storage is available). If the Storage
is full, the Active Transaction is blocked until 1 or more storage units become
available.</p>
<b>
<p ALIGN="CENTER">GATE SNE MotorPool,CupboardIsBare</p>
</b>
<p ALIGN="left">In this example of an &quot;Alternate Exit Mode&quot; GATE
Block, the Active Transaction always enters the GATE Block. If the Storage
Entity named MotorPool is not empty (i. e. if at least 1 unit of storage is in
use) the Transaction proceeds to the NSB. If the Storage is empty (unsuccessful
test), the Active Transaction is scheduled to enter the Block at the location
named CupboardIsBare.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A GATE Block operates in either &quot;Refuse Mode&quot; or
&quot;Alternate Exit Mode&quot;.</p>
<p ALIGN="left">If Operand B is not used, the GATE Block operates in Refuse
Mode. When a Transaction attempts to enter a Refuse Mode GATE Block, and the
test is unsuccessful, the Transaction is blocked until the test is repeated and
is successful. If the test is successful, the Active Transaction enters the GATE
Block and then proceeds to the Next Sequential Block.</p>
<p ALIGN="left">Blocked Transactions are placed on the Retry Chain of the
tested entity. When the state of any of the entity changes, the blocked
Transaction is reactivated, the test specified by the GATE block is retried, and
if successful, the Transaction is permitted to enter the GATE Block. However,
the integration of User Variables does not cause blocked Transactions to be
reactivated. You should use the thresholds in an INTEGRATE Command if you need
to be notified about the level of one or more continuous variables. This is
discussed further in Chapter 1, in the Section entitled <u>Continuous Variables</u>.</p>
<p ALIGN="left">If Operand B is used, the GATE Block operates in Alternate
Exit Mode. When a Transaction attempts to enter such a GATE Block, and the test
is unsuccessful, the Transaction enters the GATE Block, is scheduled for the
alternate destination Block specified by the B Operand, and is placed on the
Current Events Chain in front of its priority peers. If the test is successful,
the Active Transaction enters the GATE Block and then proceeds to the Next
Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The conditional operator is required. It may be FNV, FV, I,
LS, LR, M, NI, NM, NU, SE , SF, SNE, SNF, SNV, SV, or U. When the condition is
true, the Transaction enters the GATE Block and proceeds to the Next Sequential
Block. The conditions are defined as follows:</p>
<blockquote>
  <p ALIGN="left">· FNV&nbsp;-&nbsp;The Facility specified implicitly by
  Operand A must be unavailable for a successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV&nbsp;-&nbsp;The
Facility specified implicitly by Operand A must be available for a successful
test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;I&nbsp;-&nbsp;The
Facility specified implicitly by Operand A must be currently interrupted for a
successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LS&nbsp;-&nbsp;The
Logicswitch entity specified implicitly by Operand A must be in the
&quot;set&quot; state for a successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LR&nbsp;-&nbsp;The
Logicswitch entity specified implicitly by Operand A must be in the
&quot;reset&quot; state for a successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;M&nbsp;-&nbsp;The
Match Block specified implicitly by Operand A must have a related (to the Active
Transaction) Transaction waiting for a Match Condition.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NI&nbsp;-&nbsp;The
Facility specified implicitly by Operand A must be not interrupted for a
successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NM&nbsp;-&nbsp;The
Match Block specified implicitly by Operand A must not have a related (to the
Active Transaction) Transaction waiting for a Match Condition.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NU&nbsp;-&nbsp;The
Facility specified implicitly by Operand A must not be in use for a successful
test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be empty for a successful
test. All storage units must not be in use.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be full for a successful
test. All storage units must be being used.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNE&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be not empty for a
successful test. At least one storage unit must be in use.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNF&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be not full for a
successful test. There must be at least one storage unit that can be used.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNV&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be in the
&quot;unavailable&quot; state for a successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV&nbsp;-&nbsp;The
Storage Entity specified implicitly by Operand A must be in the
&quot;available&quot; state for a successful test.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;U&nbsp;-&nbsp;The
Facility specified implicitly by Operand A must be in use for a successful test.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B, if specified,
must be the location of a Block in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GATE Blocks are
extremely powerful, but they can cause a lot of computer time to be used in
unsuccessful tests. You may need to arrange your simulation to reduce the
frequency of unsuccessful tests. This can be done by placing Transactions with
no chance of a successful test on a User Chain using LINK and UNLINK Blocks.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;The MB class of
SNA should not be used alone to specify a blocking condition in a GATE Block.
You should use MATCH Blocks instead.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A GATE Block operating in Refuse Mode will refuse entry to a
Transaction when the test fails. The refused Transaction will be blocked until
the test is successful.</p>
<p ALIGN="left">When a Transaction is refused entry, its delay indicator is
set and remains so until the Transaction enters a &quot;Simultaneous&quot; Mode
TRANSFER Block. However, since the advent of the Boolean Variable in the GPSS
language, it is more efficient to use a TEST Block and a Boolean Variable when
it is necessary to coordinate the state of multiple entities.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Logicswitches
Window - Online view of Logicswitch Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="GATHER">GATHER</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">Wait for related Transactions.</p>
    <p ALIGN="CENTER">GATHER A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transaction
  count. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">GATHER 2</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the GATHER Block. The first
Transaction of an Assembly Set (see Section 9.3) is caused to wait when it
enters an GATHER Block. When another Transaction in the same Assembly Set enters
the Block, both related Transactions are released and put on the Current Events
Chain.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a GATHER Block, the Match Chain of
the Block is searched for a waiting Transaction of the same Assembly Set. If
there are no other members of the same Assembly Set present, the A Operand is
evaluated, truncated. decremented by one, and saved in a storage location in the
Active Transaction. If this number is less than or equal to zero, the
Transaction immediately attempts to enter the Next Sequential Block. Otherwise,
the Transaction is placed on a special chain in the ASSEMBLY Block, called the
Match Chain, to await the arrival of other members of its Assembly Set.</p>
<p ALIGN="left">If the Active Transaction arrives to find other members of
its Assembly Set already on the Match Chain, the Active Transaction is also
placed on the chain and the Transaction count saved in the first chained
Transaction is reduced by one. When this count becomes 0, all related
Transactions are removed from the Match Chain. All Transactions which have not
been preempted at any Facility are then placed on the CEC behind their priority
peers.</p>
<p ALIGN="left">Preempted Transactions which have completed an assembly at a
GATHER Block are not permitted to leave the Block until all preemptions have
been cleared. More discussion of the preemption mechanism can be found in
Section 9.4. Preempted Transactions which have been removed from the Match Chain
do not participate in later gatherings even though they remain in the GATHER
Block.</p>
<p ALIGN="left">GATHER Blocks differ from ASSEMBLE Blocks in that
Transactions after the first are destroyed at an ASSEMBLE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transactions which
are currently preempted are not permitted to leave GATHER Blocks.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a GATHER Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ADOPT&nbsp;-&nbsp;Set
the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ASSEMBLE&nbsp;-&nbsp;Wait
for and destroy Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MATCH - Wait for
Assembly Set member.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SPLIT - Create
Transactions in the same Assembly Set.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A1&nbsp;-&nbsp;Assembly
Set. Return the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MB<i>Entnum</i>&nbsp;-&nbsp;Match
at Block. MB<i>Entnum</i> returns a 1 if there is a Transaction at Block <i>Entnum</i>
which is in the same Assembly Set as the Active Transaction. MB<i>Entnum</i>
returns a 0, otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="GENERATE">GENERATE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A GENERATE Block creates Transactions for future entry into the simulation.</p>
	<p ALIGN="CENTER">GENERATE A,B,C,D,E</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Mean
  inter generation time. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression</i>, or <i>DirectSNA</i>.
  You may not use Transaction Parameters.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Inter generation time half-range or
  Function Modifier. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>Number,
  String, ParenthesizedExpression</i>, or <i>DirectSNA</i>. You may not use
  Transaction Parameters.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Start delay time. Time increment for the
  first Transaction. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>Number</i>,
  <i>String</i>, <i>ParenthesizedExpression</i>, or <i>DirectSNA</i>. You may
  not use Transaction Parameters.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Creation limit. The default is no limit.
  Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>String</i>,
  <i>ParenthesizedExpression</i>, or <i>DirectSNA</i>. You may not use
  Transaction Parameters.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;Priority level. Optional. Zero is the
  default. The operand must be <i>Null</i>, <i>Name</i>, <i>integer</i>, <i>String</i>,
  <i>ParenthesizedExpression</i>, or <i>DirectSNA</i>. You may not use
  Transaction Parameters.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">GENERATE 0.1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the GENERATE Block. This
Block causes a priority zero Transaction to enter the simulation every tenth of
a time unit.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a simulation is begun, or an interactive Command is
performed, any GENERATE Block which has not been &quot;primed&quot; is called
upon to schedule its first Transaction. Such Transactions are scheduled to enter
the GENERATE Block and placed on the Future Events Chain if they have a positive
time increment. Operand C can be used to specify a positive time increment for
the first Transaction. Otherwise, the first time increment is calculated from
operands A and B.</p>
<p ALIGN="left">You cannot use Parameters in GENERATE Block operands. Newly
GENERATEd Transactions do not have Parameters, and their entry into such a
GENERATE Block would cause an Error Stop.</p>
<p ALIGN="left">Before the new Transaction is created, Operand D is evaluated
numerically to see if all the Transactions desired have been created. If the
creation limit has not been exceeded, processing continues. The GENERATE Block
then creates the new Transaction assigning it the next Transaction number, the
priority from the E Operand, and the Transaction Mark Time is assigned the value
in the absolute system clock. The new Transaction represents a new Assembly Set
with one member.</p>
<p ALIGN="left">The inter arrival time for the new Transaction is calculated
from the A, B, and C operands. If only the A Operand is specified, it is
evaluated numerically and used as the time increment. If the A and B operands
are present, and B does not specify a function, both A and B are evaluated
numerically and a random number between A-B and A+B, inclusively, is used as the
time increment. You can select which random number generator number is to be
used as the source of the random number. This is set in the &quot;Random&quot;
page of the Model Settings Notebook.</p>
<p ALIGN="center">CHOOSE </font><b><font FACE="Arial">Edit / Settings</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">then select the </font><b><font FACE="Arial" SIZE="3">Random</font></b><font FACE="Arial" SIZE="2">
page. Then fill in the desired random number stream entity number in the entry
box marked &quot;GENERATE&quot;. The installation default is to use random
number stream number 1.</p>
<p ALIGN="left">When Operand B is an FN class SNA, it is a special case
called a &quot;function modifier&quot;. In this case, the time increment is
calculated by multiplying the result of the function by the evaluated A Operand.</p>
<p ALIGN="left">If the C Operand is specified, it is evaluated numerically
and used as the time increment for the first Transaction. If you wish to cause
the first transaction(s) to arrive at time 0, you must use a separate GENERATE
block with a creation limit in Operand D and null values for Operands A and B.
If Operand A and / or B is used and C=0, C will be interpreted as null. The
following example will create three transactions at time 0.</p>
<b>
<p ALIGN="CENTER">GENERATE ,,0,3</p>
</b>
<p ALIGN="left">If the time increment is strictly positive (nonzero), the
Transaction is placed on the FEC, if it is zero the Transaction goes to the CEC
behind its priority peers, if it is negative an Error Stop occurs.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Time values must
not be negative.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Either Operand A
or Operand D must be used.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GENERATE is the
only Block which cannot be used in Manual Simulation Mode. Use a SPLIT Block to
create Transactions interactively.</p>
<p ALIGN="left">&nbsp;</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a GENERATE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="INDEX">INDEX</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An INDEX Block updates a Parameter of the Active Transaction.</p>
	<p ALIGN="CENTER">INDEX A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Parameter
  number. Parameter with source value. Required. The operand must be <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Numeric value. Number to be added to
  contents of Parameter. The result goes into Parameter 1. Required. The operand
  must be <i>Name</i>, <i>Number</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">INDEX 2,11.7</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction enters the INDEX Block
its Parameter number 1 is given the sum of 11.7 and the value of Parameter 2 of
the Active Transaction.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The INDEX Block adds the numeric equivalent of Operand B to
the numeric equivalent of the value of any Transaction Parameter and puts the
result into Parameter 1.</p>
<p ALIGN="left">If the source Parameter does not exist, an Error Stop occurs.
Otherwise, if Parameter number 1 does not exist for the Active Transaction, it
is created.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an INDEX Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;P<i>Parameter</i>
or *<i>Parameter</i> - Parameter value. Returns the value of Parameter <i>Parameter</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="INTEGRATION">INTEGRATION</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An INTEGRATION Block disables or enables the integration of a User Variable.</p>
	<p ALIGN="CENTER">INTEGRATION A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;User
  Variable. Required. The operand must be <i>Name</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Integration state. Must be <i>Null,</i>
  ON, or OFF.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">INTEGRATION Population</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the INTEGRATION Block. When a
Transaction enters this INTEGRATION Block, the integration of the User Variable,
Population, is set to the enabled state. This causes the User Variable to be
integrated automatically with respect to simulated time. The default of Operand
B is ON.</p>
<b>
<p ALIGN="CENTER">INTEGRATION Population,OFF</p>
</b>
<p ALIGN="left">In this example, the entry of the Active Transaction into the
INTEGRATION Block assures that the integration of the User Variable Population
is disabled. The automatic update of Population will cease until the integration
is again enabled.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A INTEGRATION Block sets the state of an integration to
either ON, or OFF, that is, enabled or disabled.</p>
<p ALIGN="left">The default of Operand B is ON, and need not be specified
when the integration is to be activated.</p>
<p ALIGN="left">Integrations are defined by INTEGRATE Commands, and are
automatically begun in the active state. For integrations that are never
interrupted, there is no need for INTEGRATION Blocks in the simulation.</p>
<p ALIGN="left">Each INTEGRATE Command can also define one or two threshold
expressions. When the value of an integrated variable crosses from one side of a
threshold to the other, a new Transaction is created and sent to a destination
Block specified in the INTEGRATE Command. In this manner, Continuously
integrated variables can be closely incorporated into the discrete side of your
simulation. You can use them to perform important duties related to the state of
the integrated variable, or simply to move the thresholds.</p>
<p ALIGN="left">User Variables can be assigned new values discretely, as well
as through integration. You can do so using an EQU Command, or a PLUS Assignment
Statement. If you want such assignments to occur within the running of the
simulation, you must define a PLUS Procedure that makes the assignment. For
example, if you defined a PLUS Procedure as follows:</p>
</font><b><font FACE="Arial">
<p ALIGN="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
PROCEDURE Setpop(Pop_Level) BEGIN<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Population = Pop_Level ;<br>
&nbsp;&nbsp;&nbsp;
</font></b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<b><font FACE="Arial">
END ;</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">you could reinitialize the Population User Variable by
entering a PLUS Block, such as</p>
</font><b><font FACE="Arial">
<p ALIGN="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
PLUS (Setpop(200))</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">or by using a parenthesized expression that invokes setpop( )
in some other Block.</p>
<p ALIGN="left">See Chapter 4 for a detailed description of Continuous
Simulation.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an INTEGRATION Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;INTEGRATE&nbsp;-&nbsp;Define
the derivative of a user variable for integration, and activate the integration.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Expressions Window
- Online view of values of expressions.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Plot Window -
Online view of a plot of up to 8 expressions.</p>
<p ALIGN="left">&nbsp;</p>
<p ALIGN="left">&nbsp;</p>
</font><b>
</blockquote>
<font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="JOIN">JOIN</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A JOIN Block adds the Active Transaction to a Transaction Group, or adds a
number to a Numeric Group.</p>
	<p ALIGN="CENTER">JOIN A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Group
  entity number. Group to which a member will be added. Required. The operand
  must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>,
  or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Numeric value. Number to be added to
  numeric Group. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>Number</i>,
  <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">JOIN Solditems</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the JOIN Block. The
Transaction entering the JOIN Block becomes a member of the Transaction Group
SoldItems.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">JOIN Blocks operate in &quot;Numeric Mode&quot; when a number
is specified by the B Operand, and otherwise in &quot;Transaction Mode&quot;.</p>
<p ALIGN="left">In Numeric Mode, operands A and B are evaluated numerically,
and the number specified by B is included in the Numeric Group specified by A.
If this number is already a member of the Numeric Group, no operation is
performed. There is some loss of efficiency when non-integers are used in
Numeric Groups.</p>
<p ALIGN="left">In Transaction Mode, the entering Transaction is included in
the Transaction Group specified by the A Operand. If the Transaction is already
a member of the Transaction Group, no operation is performed.</p>
<p ALIGN="left">Numeric Groups are distinct from Transaction Groups even if
they have the same Group number.</p>
<p ALIGN="left">Transactions are in no way restricted because of their
membership in a Transaction Group. After membership is achieved, the entering
Transaction proceeds to the Next Sequential Block. The only way that a
Transaction can be removed from a Group is to be terminated in a TERMINATE or
ASSEMBLE Block, or to be chosen for removal in a REMOVE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a JOIN Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Transactions in Transaction Groups can be referenced by
ALTER, EXAMINE, REMOVE, and SCAN Blocks. Numbers in numeric Groups can be
referenced by EXAMINE and REMOVE Blocks.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GN<i>Entnum</i> -
Numeric Group count. GN<i>Entnum</i> returns the membership count of Numeric
Group <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GT<i>Entnum</i> -
Transaction Group count. GT<i>Entnum</i> returns the membership count of
Transaction Group<i> Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Numeric Groups
Snapshot - Picture of the state of the Numeric Groups in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction Groups
Snapshot - Picture of the state of the Transaction Groups in the simulation.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="LEAVE">LEAVE</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A LEAVE Block increases the accessible storage units at a Storage Entity.</p>
    <p ALIGN="CENTER">LEAVE A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Storage
  Entity name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Number of storage units. The default is
  1. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">LEAVE RepairMen,10</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction enters the LEAVE Block,
the available storage units at the Storage Entity named RepairMen is increased
by 10.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a LEAVE Block, Operand A is
evaluated and truncated, and the corresponding Storage Entity is found. If no
such entity exists, an Error Stop occurs. Storage entities must be defined in
STORAGE Commands.</p>
<p ALIGN="left">The number of storage units to be freed is found by
evaluating and truncating Operand B. If B was not used, then it is assumed to be
1.</p>
<p ALIGN="left">Then the available storage at the Storage Entity is increased
by the value of the B Operand. If the result exceeds the original storage
capacity of the Storage Entity, an Error Stop occurs.</p>
<p ALIGN="left">If no error occurs, the Transaction is scheduled for the Next
Sequential Block and is placed on the Current Events Chain ahead of its priority
peers.</p>
<p ALIGN="left">When storage becomes available, the Delay Chain of the
Storage Entity is examined in decreasing priority for Transactions whose demands
can now be met. A &quot;first-fit-with-skip&quot; discipline is used. Successful
Transactions are allowed to enter the ENTER Block which refused them and then
are placed on the CEC behind their priority peers. This is done before the
current Active Transaction in the LEAVE Block proceeds in the simulation. In
this way, no other Transaction can buck the line of Transactions waiting on the
Delay Chain of the Storage Entity. You can see this in the Blocks Window. You
will see the Transaction enter the ENTER Block and come to rest. The current
Active Transaction in the LEAVE Block will then resume its movement.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must refer to a
previously defined Storage Entity defined by a STORAGE Statement.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B must be
nonnegative.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;An attempt to free
more storage than was defined will cause an Error Stop.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a LEAVE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Storage Entity must be defined in a STORAGE Command before
it can be updated by an LEAVE Block. The STORAGE Command must exist in the
model, or must be sent to the Simulation Object interactively, before a
Transaction can enter the LEAVE Block. Any attempt to do so before the Storage
Entity is defined, cases an Error Stop.</p>
<p ALIGN="left">A Storage Entity can be redefined by an interactive STORAGE
Command.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;R<i>Entnum</i>&nbsp;-&nbsp;Unused
storage capacity. The storage content (or &quot;token&quot; spaces) available
for use by entering Transactions at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;S<i>Entnum</i>&nbsp;-&nbsp;Storage
in use. S<i>Entnum</i> returns the amount of storage content (or
&quot;token&quot; spaces) currently in use by entering Transactions at Storage
Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SA<i>Entnum</i>&nbsp;-&nbsp;Average
storage in use. SA<i>Entnum</i> returns the time weighted average of storage
capacity (or &quot;token&quot; spaces) in use at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SC<i>Entnum</i>&nbsp;-&nbsp;Storage
use count. Total number of storage units that have been entered in (or
&quot;token&quot; spaces that have been used at) Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE<i>Entnum</i>&nbsp;-&nbsp;Storage
empty. SE<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
unused, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF<i>Entnum</i>&nbsp;-&nbsp;Storage
full. SF<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
used, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SR<i>Entnum</i>&nbsp;-&nbsp;Storage
utilization. The fraction of total usage represented by the average storage in
use at Storage Entity <i>Entnum</i>. SR<i>Entnum</i> is expressed in
parts-per-thousand and therefore returns an real value 0-1000, inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SM<i>Entnum</i>&nbsp;-&nbsp;Maximum
storage in use at Storage Entity <i>Entnum</i>. The &quot;high water mark&quot;.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ST<i>Entnum</i>&nbsp;-&nbsp;Average
holding time per unit at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV<i>Entnum</i>
&nbsp;-&nbsp;Storage in available state. SV<i>Entnum</i> returns 1 if Storage
Entity <i>Entnum</i> is in the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="LINK">LINK</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A LINK Block controls the placement of the Active Transaction on the User
Chain of a Userchain Entity.</p>
	<p ALIGN="CENTER">LINK A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Userchain
  number. The Userchain Entity which may receive the entering Transaction.
  Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Chain ordering. The placement of new
  Transactions on the Userchain. Required. The operand must be LIFO, FIFO, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Next Block location. The destination
  Block for Transactions which find the Link Indicator of the Userchain in the
  off state (reset). Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">LINK OnHold,FIFO</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the Active Transaction is placed at the end
of the User Chain Entity named OnHold. It is removed from all chains except
Transaction Groups and Interrupt Chains. In other words, preemptions are not
cleared. The Transaction remains on the User Chain until some other Transaction
enters an UNLINK Block and specifically removes it. In the present example, the
Transaction is placed at the end of the User Chain named OnHold.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The simplest operation of a LINK Block occurs when the C
Operand is not used. In this case, the entering Transaction is always placed on
the User Chain specified by Operand A. It is removed from all other chains
except transaction groups and interrupt chains.</p>
<p ALIGN="left">The placement of the Transaction in the User Chain is
controlled by Operand B. If FIFO (First-In-First-Out) is used for Operand B,
newly arriving Transactions are placed at the tail of the User Chain. If LIFO
(Last-In-First-Out) is used for Operand B, newly arriving Transactions are
placed at the head of the User Chain. Any other item used in Operand B is
evaluated for the Active Transaction and again for each Transaction on the User
Chain, beginning at the front, until the value for the Active Transaction is
greater. When a Transaction whose value is less than that of the Active
Transaction is found, the Active Transaction is placed on the User Chain
immediately in front of it. If the value for the Active Transaction never
exceeds the value for an occupant of the User Chain, the Active Transaction is
placed at the end of the chain. This leads to a descending order. P class SNAs
are an exception. They are queued in ascending order of Parameter value.</p>
<p ALIGN="left">If you do not use LIFO or FIFO in Operand B, you will
normally use a Transaction oriented SNA such as PR, M1 or a class P SNA.
However, indirect addressing may also be useful. If PR is used, the Transactions
are placed in priority order. And finally, if a Parameter number is specified,
the Transaction is inserted into the chain immediately behind those Transactions
whose Parameter value is less than that of the entering Transaction.</p>
<p ALIGN="left">The situation is more complicated when the C Operand is used.</p>
<p ALIGN="left">A flag called a &quot;Link Indicator&quot; is part of each
Userchain Entity. The Link Indicator is useful for using a User Chain to control
the queuing of Transactions on a resource. It is on (set) when the hypothetical
resource is &quot;busy&quot; and off (reset) when the hypothetical resource is
&quot;not busy&quot;. When the Link Indicator of a Userchain Entity is off, if
the C Operand is used, the LINK Block will not place the Transaction on the User
Chain. The Link Indicator is useful for letting the first of several
Transactions avoid the User Chain and for causing following Transactions to be
placed on the User Chain.</p>
<p ALIGN="left">If the C Operand is used, the entering Transaction will NOT
be placed on the User Chain if the Link Indicator is off. Instead, the
Transaction will proceed to the Block specified by C, and then the Link
Indicator will be set. Following Transactions entering the LINK Block will go
onto the User Chain.</p>
<p ALIGN="left">The Link Indicator is manipulated by both LINK and UNLINK
Blocks. It is turned off (reset) when an UNLINK Block finds the User Chain
empty. It may be useful to think of the Link Indicator as representing the
&quot;busy condition&quot; of a hypothetical resource. When the Link Indicator
is set, the resource is &quot;busy&quot;. When a Transaction finds the resource
idle it should not have to wait (on the User Chain). The Transaction would
proceed to the Block specified by Operand C and the LINK Block then sets the
Link Indicator of the Userchain Entity.</p>
<p ALIGN="left">Consider two Transactions arriving at a LINK Block, one after
the other. If, for example, the first Transaction does not enter an UNLINK Block
before the second Transaction arrives, the second Transaction would find the
Link Indicator on (set), and would be placed on the User Chain. In this example,
when the first Transaction enters an UNLINK Block, the second Transaction is
removed from the User Chain. At this time, the Link Indicator remains on (set).
Then, when the second Transaction enters an UNLINK Block, and no waiting
Transactions are found on the User Chain, the Link Indicator is finally turned
off (reset).</p>
<p ALIGN="left">User Chains allow you manipulate the queuing mechanisms of
Transactions to a much more detailed level than do Facilities or Storages. It is
possible to implement very complicated scheduling algorithms using LINK and
UNLINK Blocks.</p>
<p ALIGN="left">User Chains can be used to reduce the amount of computer time
wasted on unsuccessful tests associated with GATE, TEST, TRANSFER BOTH, and
TRANSFER ALL Blocks. You can create faster simulations by placing blocked
Transactions on User Chains when there is no possibility of a successful
condition test. Then, you must introduce each Transaction back into its test
Block when an event occurs which might unblock the Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A, B, and C, if
specified, must be positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;C, if specified,
must be a Block location in the simulation.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a LINK Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CA<i>Entnum</i>
&nbsp;-&nbsp;Average Userchain content. The time weighted average number of
chained Transactions for Userchain <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CC<i>Entnum</i>&nbsp;-&nbsp;Total
Userchain entries. The cumulative count of all Transactions chained to Userchain
<i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CH<i>Entnum</i>&nbsp;-&nbsp;Current
Userchain content. The current number of Transactions chained to Userchain <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CM<i>Entnum</i>&nbsp;-&nbsp;Maximum
Userchain content. The maximum number of Transactions chained to Userchain <i>Entnum</i>.
The &quot;high water mark&quot;.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CT<i>Entnum</i>&nbsp;-&nbsp;Average
Userchain residence time. The average duration of s Transaction at Userchain <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Userchains
Snapshot - Picture of the state of the Userchain Entities in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="LOGIC">LOGIC</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A LOGIC Block changes the state of a Logicswitch entity.</p>
	<p ALIGN="CENTER">LOGIC O A</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Logic
  operator. Required. The operator must be S, R, or I.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Logicswitch Entity number. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">LOGIC S PowerSwitch</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the Logicswitch Entity named PowerSwitch is
left in the true or &quot;set&quot; state.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A LOGIC Block is used to set, reset, or invert the state of a
Logicswitch Entity. A Logicswitch Entity has two states, on (set, or 1) and off
(reset, or 0). If the logic operator is S or R, the Logicswitch Entity specified
by the A Operand is left in the set or reset state, respectively.</p>
<p ALIGN="left">If the logic operator is I, the state of the Logicswitch
Entity specified by the A Operand is inverted. This means that if it is found to
be set, it will be reset. If it is found to be reset, it will be set.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Logical Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A logical operator is required. It may be S, R, or I with the
following effect:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;S&nbsp;-&nbsp;The
logic switch is left in the &quot;set&quot; or on state.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;R&nbsp;-&nbsp;The
logic switch is left in the &quot;reset&quot; or off state.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;I&nbsp;-&nbsp;The
logic switch is inverted.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a LOGIC Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LS<i>Entnum</i>&nbsp;-&nbsp;Logic
switch set. LS<i>Entnum</i> returns 1 if Logic Switch Entity <i>Entnum</i> is in
the &quot;set&quot; state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Logicswitches
Window - Online view of Logicswitch Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="LOOP">LOOP</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A LOOP Block modifies a Parameter and controls the destination of the Active
Transaction based on the result.</p>
	<p ALIGN="CENTER">LOOP A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Parameter
  containing count. required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Block number. Next Block if count nonzero
  after decrement. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">LOOP Customer_Count,Start_Over</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Let us assume in this example that the Start_Over Block
precedes the LOOP Block in the simulation. In this example, when a Transaction
enters the LOOP Block its Parameter named Customer_Count is decremented by 1. If
the result is nonzero, the Transaction proceeds to Block location Start_Over.
This causes the Transaction to continue to loop until the value of the Parameter
named Customer_Count is 0. The Transaction then proceeds to the Next Sequential
Block.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a LOOP Block, Operand A is
evaluated, truncated, and used to find the Transaction Parameter with that
number. If there is no such Parameter, an Error Stop occurs. Otherwise the value
of the Parameter is decreased by 1.</p>
<p ALIGN="left">If the new value of the Parameter is greater than zero and
the B Operand is specified, the Transaction is scheduled for the location
specified in the B Operand. Otherwise, the Transaction proceeds to the Next
Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a LOOP Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">P<i>Parameter</i> or *<i>Parameter</i> &nbsp;-&nbsp;Parameter
value. P<i>Parameter</i> returns the value of Parameter <i>Parameter</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="MARK">MARK</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A MARK Block places an absolute clock time stamp into the Active Transaction
or into its Parameter.</p>
	<p ALIGN="CENTER">MARK A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Parameter
  number. Parameter to receive value of system clock. Optional. The operand must
  be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">MARK Beginning</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction enters the MARK Block,
its Transaction Parameter named Beginning is given a value equal to the value of the
absolute system clock, AC1.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">MARK</p>
</b>
<p ALIGN="left">In this example, when a Transaction enters the MARK Block,
its Mark Time is set equal to the value of the absolute system clock.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a MARK Block and Operand A was not
specified, its Mark Time is set equal to the absolute system clock.</p>
<p ALIGN="left">If Operand A was specified, it is evaluated numerically, and
truncated. The Parameter of the Active Transaction with that number is found and
given a value equal to the value of the absolute system clock. If the Parameter
does not exist, it is created.</p>
<p ALIGN="left">The Active Transaction then proceeds to the Next Sequential
Block (NSB).</p>
<p ALIGN="left">The time stamps set up by a MARK Block can be retrieved by M1
and MP class SNAs. M1 returns the &quot;transit time&quot;, which is the
absolute system clock minus the Transaction’s Mark Time. SNAs in the class MP
return a value equal to the absolute system clock minus the value of a
Transaction Parameter.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A, if specified,
must be positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MP<i>Entnum</i>&nbsp;-&nbsp;Transit
time, Parameter. Current absolute system clock value minus value in Parameter <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;M1&nbsp;-&nbsp;Transit
time. M1 returns the absolute clock minus the &quot;mark&quot; time of the
Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a MARK Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="MATCH">MATCH</a><!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A pair of MATCH Blocks cause Transactions to wait for each other.</p>
	<p ALIGN="CENTER">MATCH A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Block
  name or number. Conjugate MATCH Block to be tested for a matching (same
  Assembly Set) Transaction. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">A_Is_Done MATCH B_Is_Done</p>
<p ALIGN="CENTER">B_Is_Done MATCH A_Is_Done</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This example shows two conjugate MATCH Blocks. They would
normally be placed apart in the simulation, and one would eventually receive a
Transaction in the same Assembly Set. If each MATCH Block were placed after a
set of Blocks representing some process, the pair of related Transactions would
proceed past the MATCH Blocks only when both Transactions had completed their
respective processes.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a MATCH Block, Operand A is
evaluated numerically, truncated, and the conjugate MATCH Block is found. If
there is no such Block, an Error Stop occurs.</p>
<p ALIGN="left">If the conjugate MATCH Block contains a Transaction (on its
Match Chain) of the same Assembly Set as the Active Transaction, the related
Transaction is removed from the Match Chain. If it is not currently preempted at
any Facility Entity, it is placed on the Current Events Chain behind its
priority peers. Similarly, if the Active Transaction is not currently preempted
at any Facility it is placed on the CEC, but ahead of its peers.</p>
<p ALIGN="left">If either matching Transaction is currently preempted at a
Facility, it is not permitted to leave its MATCH Block until all preemptions
have been cleared on its behalf.</p>
<p ALIGN="left">If, when the Active Transaction enters the MATCH Block, no
matching Transaction is found, it comes to rest on the Match Chain of the MATCH
Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Operand A must be
the location of a MATCH Block in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transactions which
are currently preempted are not permitted to leave MATCH Blocks.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a MATCH Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ADOPT&nbsp;-&nbsp;Set
the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ASSEMBLE&nbsp;-&nbsp;Wait
for and destroy Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GATHER&nbsp;-&nbsp;Wait
for Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SPLIT - Create
Transactions in the same Assembly Set.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A1&nbsp;-&nbsp;Assembly
Set. Return the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MB<i>Entnum</i>&nbsp;-&nbsp;Match
at Block. MB<i>Entnum</i> returns a 1 if there is a Transaction at Block <i>Entnum</i>
which is in the same Assembly Set as the Active Transaction. MB<i>Entnum</i>
returns a 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b>
</blockquote>
</blockquote>
</blockquote>
<font FACE="Arial" SIZE="4">
<p align="left">&nbsp;</p>
<blockquote>
  <blockquote>
    <h1 align="left"><!--mstheme--><font color="#336666"><a name="MSAVEVALUE">MSAVEVALUE</a> <!--mstheme--></font></h1>
  </blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An MSAVEVALUE Block updates an element of a Matrix Entity.</p>
	<p ALIGN="CENTER">MSAVEVALUE A,B,C,D</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Matrix
  Entity name or number, with optional + or -. Required. the operand must be<i>
  Name</i>,<i> PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>,
  followed by +, -, or <i>Null</i>.</p>
  <p ALIGN="left">&nbsp;<b>B</b>&nbsp;-&nbsp;Row number. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Column number. Required. The operand must
  be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Value to be stored, added, or subtracted.
  Required. The operand must be <i>Name</i>, <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">MSAVEVALUE Sales+,Part23,Cust77,6.234</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters the MSAVEVALUE Block in this
example, the element, of the Matrix Entity named Sales, with row equal to the
value of Part23 and the column equal to the value of Cust77 is increased by
6.234. Normally, the row and column names would have appeared earlier in EQU
Statements.</p>
<b>
<p ALIGN="CENTER">MSAVEVALUE Parts,Part23,Description,&quot;Zippo lighter&quot;</p>
</b>
<p ALIGN="left">In this example, a string is assigned to a Matrix element.
The Matrix Entity must be defined elsewhere in the Model, or interactively, by a
MATRIX Command that defines the Parts Matrix Entity.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a MSAVEVALUE Block, Operand A is
evaluated numerically and the Matrix Entity with that number or name is found.
If no such Matrix Entity is found, an Error Stop occurs. Matrix Entities must be
defined in MATRIX Commands.</p>
<p ALIGN="left">Operands B and C are evaluated numerically to find the proper
element in the Matrix Entity. If such an element does not exist, an Error Stop
occurs.</p>
<p ALIGN="left">Operand D is evaluated and used in the update operation. If
Operand A has a + suffix, the operation will be addition to the numerical
equivalent of Operand D; if -, it will be subtraction. If Operand A has no
suffix, the matrix entity element will be assigned a new value equal to D.</p>
<p ALIGN="left">A matrix is defined in a MATRIX Command. It can have up to 6
dimensions. However, only the first two dimensions can be accessed in an
MSAVEVALUE Block. In this case, all missing coordinates are presumed to be equal
to 1.</p>
<p ALIGN="left">PLUS Procedures can access all elements of any matrix. If you
need to use matrices of more than 2 dimensions, you will have to create one or
more PLUS Procedures to access them. Matrices defined in a MATRIX Command have
global scope and are known to all PLUS Procedures. In addition, temporary
matrices with local scope can be created for the duration of a PLUS Procedure
invocation. This is discussed further in Chapter 8.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an MSAVEVALUE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MSAVEVALUE Blocks
can only access the first cross section of a higher dimensional matrix. Indices
of the third and higher dimensions are given the value 1. PLUS assignment
statements can be used to access and modify all elements.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MX<i>Entnum</i>(<i>m,n</i>)&nbsp;-&nbsp;Matrix
element value. The value in row <i>m</i>, column <i>n</i> of matrix <i>Entnum</i>
is returned. The row and column values can only be <i>Name</i>, <i>PosInteger</i>,
or <i>P class SNA</p>
</blockquote>
</i></font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Expressions Window
- Online view of values of expressions.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Matrix Window -
Online view of the dynamics of a Matrix cross-section.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Plot Window -
Online view of a plot of up to 8 expressions.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="OPEN">OPEN</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An OPEN Block initializes a Data Stream.</p>
	<p ALIGN="CENTER">OPEN A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Data
  Stream descriptor. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>String</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Data Stream number. Optional. The operand
  must be <i>Null, Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>
  or <i>SNA*Parameter</i>. Default is 1.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Alternate Destination Block name or
  number. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">OPEN (&quot;MYFILE.TXT&quot;),2,Error_Block</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the OPEN Block creates type of Data Stream
known as an I/O Stream, and gives it number 2 for identification. If an error
occurs during the OPEN, an error code is stored internally and the Active
Transaction proceeds to the Block labeled Error_Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An OPEN Block causes a Data Stream to be created, and sets
the Current Line Position to 1.</p>
<p ALIGN="left">A Data Stream is a sequence of text lines used by a GPSS
World simulation. Each Data Stream is identified by a unique number. There are 3
types of Data Stream:</p>
<p ALIGN="left">1. Input/Output (I/O) Streams,</p>
<p ALIGN="left">2. In-Memory Streams, and</p>
<p ALIGN="left">3. Pipe Streams.</p>
<p ALIGN="left">Operand A is evaluated as a string. If it is a null string,
an In-Memory Stream is created. If it is a pipe name, such as &quot;\pipe\mypipe&quot;,
a Pipe Stream is created. Otherwise an I/O Stream is created, and Operand A is
presumed to be a file specification. If a path is not included in the file
specification, it is assumed that the Project’s Report directory is to be
used. Projects are discussed in Chapter 1 of this manual.</p>
<p ALIGN="left">If Operand B is used, it is evaluated numerically and used as
the Data Stream number, for later reference by READ, WRITE, and CLOSE Blocks.
The default is 1.</p>
<p ALIGN="left">If Operand C is used, any error occurring during the OPEN
causes the Active Transaction to proceed to the Block with that number.</p>
<p ALIGN="left">In any case, if an error is detected, the error code is
stored internally. A CLOSE Block can be used to retrieve the Error Code.</p>
<p ALIGN="left">Chapter 4 (4.16) contains a full discussion of Data Streams,
including the Error Code descriptions..</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Blocking Condition</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The simulation is blocked while the Data Stream is
initialized.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a CLOSE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CLOSE&nbsp;-&nbsp;Shut
down a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;READ&nbsp;-&nbsp;Retrieve
a text line from a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;WRITE&nbsp;-&nbsp;Send
a text line to a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SEEK&nbsp;-&nbsp;Set
the Current Line Position of a Data Stream.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="PLUS">PLUS</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A PLUS Block evaluates an expression and, optionally, places the result into
a Parameter.</p>
	<p ALIGN="CENTER">PLUS A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Expression.
  Required. The operand must be <i>Name</i>, <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Parameter number. Parameter to receive
  result. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">PLUS (normal(2,100,2)+100.26),Result_Parm</p>
</font><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a PLUS Block, Operand A is
evaluated normally.</p>
<p ALIGN="left">If Operand B is specified, it is evaluated numerically,
truncated, and used to identify a Parameter of the Active Transaction. If no
such Parameter exists, it is created. Then, the result from the evaluation of
Operand A is placed into it.</p>
<p ALIGN="left">PLUS Procedures without an explicit return value return
integer 0.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a PLUS Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Expressions Window
- Online view of values of expressions.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Plot Window -
Online view of a plot of up to 8 expressions.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="PREEMPT">PREEMPT</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A PREEMPT Block displaces a Transaction from ownership of a Facility Entity.</p>
	<p ALIGN="CENTER">PREEMPT A,B,C,D,E</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Priority Mode. PR, for Priority Mode, or
  Interrupt Mode, if omitted. Optional. The operand must be PR or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Block name or number. New destination for
  Transaction presently owning the Facility. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Parameter number. Parameter of preempted
  Transaction to receive residual time if preempted Transaction is removed from
  FEC. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;REmove Mode. Removes preempted
  Transaction from contention for the Facility. Optional. The operand must be
  RE, or <i>Null</i>. If RE, you must specify a destination in Operand C.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">PREEMPT Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the PREEMPT Block. When a
Transaction enters this PREEMPT Block, it is given ownership of the Facility
Entity unless it (the Facility) is currently preempted. If a Transaction must be
displaced from ownership of the Facility, it is not permitted to reside on the
FEC and its movement in the simulation is restricted.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">PREEMPT Teller1,,Teller2,101,RE</p>
</b>
<p ALIGN="left">In this example, the PREEMPT Block operates in Interrupt Mode
because the B Operand is omitted. This means that a Transaction can enter the
Block and own the Facility if the Facility is not already owned by a preempting
Transaction. Transaction priorities are ignored. When a Transaction is
preempted, any remaining time in an ADVANCE Block is recorded in Parameter 101
of the preempted Transaction. The preempted Transaction is removed from
contention for the Facility and sent to the Block labeled Teller2. An error will
result if such a Transaction later tries to RELEASE or RETURN the Facility named
Teller1, without owning it again.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">PREEMPT Teller1,PR,Teller2</p>
</b>
<p ALIGN="left">In this example, the PREEMPT operates in Priority Mode. This
means that a Transaction can enter the Block and own the Facility Entity if the
Facility is not already owned by a Transaction of equal or higher priority. Any
preempted Transaction is not removed from contention for the Facility. This
means that such a Transaction can no longer exist on the FEC or leave ASSEMBLE,
GATHER, or MATCH Blocks. Under these restrictions, preempted Transactions may
continue to circulate in the simulation, and in this case are sent to the Block
location Teller2. Such Transactions remain in contention for the Facility named
Teller1, and normally will regain ownership of it. A preempted Transaction may
RETURN or RELEASE a Facility even if it does not own it. This removes the
Transaction from contention for the Facility by removing it from the Interrupt
Chain of the Facility.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A PREEMPT Block behaves like a SEIZE Block when the Facility
is idle. Otherwise, the PREEMPT Block operates in either Priority Mode or
Interrupt Mode. This is determined by Operand B.</p>
<p ALIGN="left">In Priority Mode, only a higher priority Transaction can
displace the Transaction which owns the Facility. If a would-be preemptor is of
insufficient priority, it is placed on the Delay Chain of the Facility in
priority order.</p>
<p ALIGN="left">In Interrupt Mode, if the Facility is already preempted, the
Active Transaction is placed on the Pending Chain. Transactions on the Pending
Chain are given ownership of the Facility in preference to preempted
Transactions or to Transactions on the Delay Chain.</p>
<p ALIGN="left">Operands C to E are concerned with what to do with the
current owner of the Facility which is about to become preempted. Preempted
Transactions are not permitted to exist on the FEC. Preempted Transactions which
have unfinished time in an ADVANCE Block may be replaced on the FEC
automatically by omitting the C and E operands. Alternately, if you choose to
replace the Transaction on the FEC yourself, to resume the unfinished time, you
must use Operand D and eventually send the preempted Transaction to an ADVANCE
Block.</p>
<p ALIGN="left">A preempted Transaction may be removed from contention for
the Facility (i.e. removed from all chains of the Facility) by using the RE
option in the E Operand. The RE option removes the restrictions placed on
preempted Transactions due to preemption at this Facility, and makes any
subsequent attempt to RELEASE or RETURN the Facility an Error Stop condition.</p>
<p ALIGN="left">A preempted Transaction cannot exist on the FEC. A more
detailed discussion of preemption is in Section 9.4. Any newly preempted
Transaction in an ADVANCE Block which is on the FEC is removed from the FEC and
the residual time duration is saved. If the D Operand is used, the residual time
is also saved in a Transaction Parameter. If no such Parameter exists, one is
created. The residual time is used to reschedule the Transaction on the FEC when
it regains ownership of all Facilities for which it contends. Alternately, you
may give a preempted Transaction a new Block to attempt to enter by using the C
Operand.</p>
<p ALIGN="left">A preempted Transaction remains in contention for a Facility
even if it was displaced by the C Operand, unless RE is used in Operand E. If a
preempted Transaction, which is still in contention for a Facility, attempts to
enter a TERMINATE Block an Error Stop occurs. Such Transactions must enter a
RELEASE or RETURN Block before they are permitted to TERMINATE. Alternately, if
you intend to TERMINATE the preempted Transaction you could use the RE option to
make sure it doesn’t inadvertently regain ownership before termination. such a
Transaction could not RELEASE or RETURN the Facility.</p>
<p ALIGN="left">When a Transaction is displaced by using the C Operand, it is
given a new Block destination and is dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;PENDING
(INTERRUPT-MODE PREEMPT) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;DELAY (MAJOR
PRIORITY) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;USER CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;RETRY CHAINS</p>
</blockquote>
<p ALIGN="left">and not dequeued from:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;INTERRUPT
(PREEMPTED) CHAINS</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GROUP CHAINS</p>
</blockquote>
<p ALIGN="left">When a Transaction is displaced from its present context, by
using an alternate destination, it is removed from blocking conditions, but
preemptions at other Facilities are not cleared.</p>
<p ALIGN="left">When the C Operand is not used, a preempted Transaction taken
off the FEC will be returned to it automatically. Preempted Transactions which
have not been displaced using the C Operand are expected eventually to enter a
RETURN or RELEASE Block in order to give up ownership of the Facility. If such a
Transaction arrives at the RETURN or RELEASE before regaining ownership of the
Facility, the Transaction is removed from contention for the Facility. No error
condition occurs.</p>
<p ALIGN="left">A Transaction can be preempted from any number of Facilities
and continue to circulate in the simulation. However, it is subject to two
restrictions:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;It will be refused
entry to ADVANCE Blocks with positive time arguments.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;It will not be
allowed to leave an ASSEMBLE, GATHER, or MATCH Block until all its preemptions
have been cleared.</p>
</blockquote>
<p ALIGN="left">A Facility can be preempted any number of times. However,
once a Transaction has been preempted, it cannot attempt to seize the Facility
from which it has been preempted. A Transaction can be preempted from any number
of Facilities.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If E is RE, C must
be used.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A Transaction may
not preempt itself.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is refused entry to a PREEMPT Block if, in
Interrupt Mode, the Facility is currently preempted. Such Transactions are
placed at the end of the Facility’s Pending Chain.</p>
<p ALIGN="left">A Transaction is refused entry to a PREEMPT Block if, in
Priority Mode, the Facility is currently owned by a Transaction of priority
equal to or greater than that of the Active Transaction. The Active Transaction
is placed in priority order on the Facility’s Delay Chain.</p>
<p ALIGN="left">A Transaction is refused entry to a PREEMPT Block if the
Facility is in the unavailable state. Such Transactions are placed on the
Facility’s Delay Chain, in priority order, FIFO within priority.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;DISPLACE - Move
any Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FAVAIL - Place
Facility in the available state.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FUNAVAIL - Place
Facility in the unavailable state.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;RELEASE - Give up
ownership and remove contention for a Facility.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;RETURN - Give up
ownership and remove contention for a Facility.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SEIZE - Acquire or
wait for ownership of a Facility.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility <i>Entnum</i> is currently busy, F<i>Entnum</i> returns 1.
Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>&nbsp;-&nbsp;Facility
capture count. The number of times Facility <i>Entnum</i> has become owned by a
Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum</i>&nbsp;-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility <i>Entnum</i> is currently preempted, FI<i>Entnum</i>
returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility <i>Entnum</i> has been busy. FR<i>Entnum</i>
is expressed in parts-per-thousand and therefore returns an real value 0-1000,
inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>
&nbsp;-&nbsp;Average Facility holding time. The average time Facility <i>Entnum</i>
is owned by a capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility <i>Entnum</i> is in
the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="PRIORITY">PRIORITY</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A PRIORITY Block sets the priority of the Active Transaction.</p>
	<p ALIGN="CENTER">PRIORITY A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;New
  priority value. Required. The operand must be <i>Name</i>, <i>integer</i>, <i>String</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Buffer option. Places Active Transaction
  behind priority peers on CEC. Optional. The operand must be BU or <i>Null</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">PRIORITY 10</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example any entering Transaction is made to have a
priority of 10.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a PRIORITY Block, Operand A is
evaluated numerically, truncated, and assigned to the priority of the Active
Transaction.</p>
<p ALIGN="left">The Transaction is scheduled for the Next Sequential Block
and is placed on the CEC according to its new priority. If the BU option was
used in Operand B, the Transaction is placed behind its priority peers on the
CEC. Otherwise, it is placed in front of its priority peers.</p>
<p ALIGN="left">Transaction priorities are integers. When a Transaction is
created without an explicit priority, it is given a priority of 0, by default.
GPSS World is most efficient when priorities used in the simulation are
contiguous. For example, use 0, 1, 2, instead of -200, 0, 23.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a PRIORITY Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;PR - Transaction
priority. The value of the priority of the Active Transaction.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="QUEUE">QUEUE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A QUEUE Block updates Queue Entity statistics to reflect an increase in
content.</p>
	<p ALIGN="CENTER">QUEUE A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Queue
  Entity name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Number of units by which to increase the
  content of the Queue Entity. Default value is 1. Optional. The operand must be
  <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>,
  or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">QUEUE WaitingLine</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example the content of the Queue Entity named
WaitingLine is increased by one and the associated statistics accumulators are
updated.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a QUEUE Block, Operand A is
evaluated, truncated, and used to find the Queue Entity with that number. The
Queue Entity is created if necessary.</p>
<p ALIGN="left">Operand B specifies the value to be used to increase the
content of the Queue Entity. If B was specified, Operand B is evaluated,
truncated, and used as the increment. If B was not specified, the value of 1 is
used.</p>
<p ALIGN="left">Finally, the statistics accumulated on behalf of the Queue
Entity are updated.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B, if specified,
must be positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a QUEUE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Q<i>Entnum</i>&nbsp;-&nbsp;Current
queue content. The current count value of Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QA<i>Entnum</i>&nbsp;-&nbsp;Average
queue content. The time weighted average count for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QC<i>Entnum</i>&nbsp;-&nbsp;Total
queue entries. The sum of all queue entry counts for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QM<i>Entnum</i>&nbsp;-&nbsp;Maximum
queue content. The maximum count (high water mark) of Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QT<i>Entnum</i>&nbsp;-&nbsp;Average
queue residence time. The time weighted average of the count for Queue Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QX<i>Entnum</i>&nbsp;-&nbsp;Average
queue residence time excluding zero entries. The time weighted average of the
count for Queue Entity <i>Entnum</i> not counting entries with a zero residence
time.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;QZ<i>Entnum</i>&nbsp;-&nbsp;Queue
zero entry count. The number of entries of Queue Entity <i>Entnum</i> with a
zero residence time.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Queues Window -
Online view of Queue Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="READ">READ</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A READ Block retrieves a text line from a Data Stream.</p>
	<p ALIGN="CENTER">READ A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transaction
  Parameter. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Data Stream number. Optional. The operand
  must be <i>Null, Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>
  or <i>SNA*Parameter</i>. Default is 1.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Alternate Destination Block name or
  number. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">READ Text_Parm,1,Done</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the READ Block retrieves a text line from
Data Stream number 1 and places a copy in the Transaction Parameter Text_Parm.
If no such Parameter exists, it is created. If an error occurs the Active
Transaction proceeds to the Block labeled Done, otherwise it proceeds to the
Next Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a READ Block, Operand A is
evaluated numerically, truncated, and used to identify the Transaction Parameter
which will receive the text line. If a text line is received successfully and no
Parameter exists for the Active Transaction, one is created.</p>
<p ALIGN="left">If Operand B is used, it is evaluated numerically, truncated,
and used as the Data Stream Entity number. This must be a positive integer. If
Operand B is not used, Data Stream number 1 is assumed.</p>
<p ALIGN="left">If Operand C is used, any error occurring during the READ
causes the Active Transaction to proceed to the Block with that number.</p>
<p ALIGN="left">In any case, if an error is detected, the error code is
stored internally. A CLOSE Block can be used to retrieve the Error. Chapter 4
(4.16) contains a full discussion of Data Streams, including the Error Code
descriptions.</p>
<p ALIGN="left">If the Data Stream is a Pipe Stream, the text line is read
from the named pipe and returned to the Transaction Parameter. The simulation is
blocked while this occurs.</p>
<p ALIGN="left">If the Data Stream is not a Pipe Stream, the text line is
determined by the Current Line Position, a 1-relative line index associated with
the Data Stream. In this case, the line indicated by the Current Line Position,
even if the line is a null string, is returned to the Transaction Parameter as a
result of the READ. Then, the Current Line Position is incremented, i.e. move to
the next line number. If there is no line to be read, no data is returned and
the Active Transaction is sent to the Alternate Destination Block without any
error code being stored.</p>
<p ALIGN="left">Reads can be computationally expensive. You can speed
processing by using a large amount of data on a small number of text lines.</p>
<blockquote>
</font><b><font FACE="Arial">
<p align="left">Further Discussion</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Chapter 4 (4.16) contains a full discussion of Data Streams
under the Section entitled, <u>Data Streams</u>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a READ Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Blocking Condition</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The simulation is blocked while READ retrieves the text line.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;OPEN&nbsp;-&nbsp;Create
a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CLOSE&nbsp;-&nbsp;Shut
down a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;WRITE&nbsp;-&nbsp;Send
a text line to a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SEEK&nbsp;-&nbsp;Set
the Current Line Position of a Data Stream.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="RELEASE">RELEASE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A RELEASE Block releases ownership of a Facility, or removes a preempted
Transaction from contention for a Facility.</p>
	<p ALIGN="CENTER">RELEASE A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">RELEASE Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction which owns the Facility
Entity named Teller1 enters the RELEASE Block, it gives up ownership to the
Facility.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a RELEASE Block it removes itself
from contention for the Facility. This can happen in two ways.</p>
<p ALIGN="left">If the Active Transaction owns the Facility, it gives up
ownership and proceeds to the Next Sequential Block.</p>
<p ALIGN="left">If the Active Transaction has been preempted from ownership
of the Facility, it is removed from the Interrupt Chain of the Facility.
Ownership is not affected, because some other Transaction is the owner. If the
Active Transaction is presently clear of all preemptions, it may now move
normally in the simulation.</p>
<p ALIGN="left">In any case, the Active Transaction is removed from ownership
of or contention for the Facility and attempts to enter the Next Sequential
Block. If it neither owns, nor is preempted at the Facility, an Error Stop
occurs.</p>
<p ALIGN="left">If the Active Transaction gives up ownership of the Facility,
the next owner is taken from the Pending Chain, the Interrupt Chain, and finally
the Delay Chain. If there are now Interrupt Mode PREEMPTs pending at this
Facility, the first is given ownership of the Facility. Otherwise, ownership is
returned to the most recently preempted Transaction. If both the Pending Chain
(waiting Interrupt Mode PREEMPTs) and the Interrupt Chain (preempted
Transactions) are empty, the highest priority Transaction on the normal Delay
Chain is given ownership. If there are no Transactions waiting, the Facility
becomes idle.</p>
<p ALIGN="left">When a new owner is chosen from the Delay Chain or the
Pending Chain, it enters the SEIZE or PREEMPT Block immediately, and then is
scheduled by placing it on the CEC behind its priority peers. After this entry,
the current Active Transaction in the RELEASE Block continues its movement.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;An entering
Transaction must own, or currently be preempted at, the Facility. Otherwise an
Error Stop occurs.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A RELEASE Block never refuses entry to a Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility <i>Entnum</i> is currently busy, F<i>Entnum</i> returns 1.
Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>&nbsp;-&nbsp;Facility
capture count. The number of times Facility <i>Entnum</i> has become owned by a
Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum</i>&nbsp;-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility <i>Entnum</i> is currently preempted, FI<i>Entnum</i>
returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility <i>Entnum</i> has been busy. FR<i>Entnum</i>
is expressed in parts-per-thousand and therefore returns an real value 0-1000,
inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>&nbsp;-&nbsp;Average
Facility holding time. The average time Facility <i>Entnum</i> is owned by a
capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility <i>Entnum</i> is in
the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="REMOVE">REMOVE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A REMOVE Block removes members from a Numeric Group or a Transaction Group.</p>
	<p ALIGN="CENTER">REMOVE O A,B,C,D,E,F</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator. Relationship of D to E for removal to occur. These choices are
  explained below. Optional. The operator must be <i>Null</i>, E, G, GE, L, LE,
  MAX, MIN, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Group number. Group from which a member
  or members will be removed. Required. The operand must be<i> Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Removal limit. The maximum number of
  Transactions to be removed. Optional. The operand must be ALL, <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Numeric value. Numeric value to be
  removed from a Numeric Group. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Test value. PR or Parameter number. The
  member attribute which determines whether each Group member Transaction should
  be removed, or PR to use the Transaction priority for the determination. It is
  evaluated with respect to the Transaction Group member. Optional. The operand
  must be PR or <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;Reference value. The value against which
  the D Operand is compared. The reference value is evaluated with respect to
  the Active Transaction. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Block number. The alternate destination
  for the entering Transaction. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">REMOVE Inventory</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the REMOVE Block. The
Transaction entering the REMOVE Block is tested for membership in the
Transaction Group named Inventory. If the Transaction is a member it is removed
from the Group.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">REMOVE G 3,10,,300,11.6,Jump_Block</p>
</b>
<p ALIGN="left">In this example, Transaction Group 3 is scanned for
Transactions which have a value in their Parameter 300 which is greater than
11.6. The first 10 Transactions which meet the test are removed from the
Transaction Group. If 10 Transactions cannot be found which pass the test, the
entering Transaction attempts to enter the Block labeled Jump_Block. Otherwise,
it proceeds to the Next Sequential Block.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A REMOVE Block excludes numeric values from membership in a
Numeric Group, or Transactions from membership in a Transaction Group.
Transactions are not displaced from their context. However, there is one
exception. The Transaction entering the REMOVE Block may be redirected according
to the F Operand.</p>
<p ALIGN="left">A REMOVE Block operates in Numeric Mode if Operand C is used.
In Numeric Mode, operands A and C are evaluated numerically and the number
specified by C is tested for membership in the numeric Group specified by A,
which is truncated. If the result from Operand C is a member of the Numeric
Group, it is removed from the Group. If the numeric value was not a member of
the numeric Group and the F Operand is used, the entering Transaction proceeds
to the Block specified by F. Otherwise, the entering Transaction proceeds to the
next sequential Block. Only operands A, C, and F can be used in Numeric Mode.
There is some loss of efficiency when non-integers are used in Numeric Groups.</p>
<p ALIGN="left">A REMOVE Block operates in Transaction Mode if Operand C is
not used. In Transaction Mode, there are several options available to select the
Transaction(s) to be removed from the Transaction Group. If you do not specify
operands B, D, or E, then only the Transaction entering the REMOVE Block is
removed. This mode of operation is called self removal. Otherwise, a &quot;group
scan&quot; is performed.</p>
<p ALIGN="left">In a group scan, you may test each Transaction for removal by
using the conditional operator and/or operands D and E. Also you may limit the
number of Transactions to be removed by the B Operand.</p>
<p ALIGN="left">Operand D always refers to the Transaction Group member under
test. Notice that any SNA may be used in Operand D. Any SNA which requires a
Transaction for its evaluation uses the current Transaction Group member under
test. The result returned by any SNA other than PR is used as a Parameter number
whose value is returned as the final result.</p>
<p ALIGN="left">In a group scan you may use a conditional operator to specify
the relationship between the Transaction attribute (Operand D) and the reference
value (Operand E) which will initiate a removal of the Transaction. Both are
evaluated numerically. The default for the conditional operator is E for
equality. If you use no conditional operator, but you use Operand D and Operand
E, the values must be equal for the Transaction to be removed from the
Transaction Group. If MIN or MAX is used as the conditional operator, all
Transactions with the greatest or least attribute (Operand D) are removed, up to
the limit count (Operand B).</p>
<p ALIGN="left">The B Operand cuts off the group scan when it equals the
number of Transactions that have been removed. The default is ALL. If there is
no attribute test, that is, if D is not specified, Transactions are removed
until the removal count equals B or until the Group is empty.</p>
<p ALIGN="left">The F Operand is used in both Numeric Mode and Transaction
Mode. It indicates an alternate destination to be taken by the entering
Transaction when an exception condition occurs. The F Operand is used for the
destination Block under the following conditions:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In Numeric Mode,
if the numeric value (C Operand) was not a member of the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In Self Removal
Mode, if the Transaction entering the REMOVE Block was not a member of the
Transaction Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In Group Scan
Mode, if no Transaction is removed.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In Group Scan
Mode, if the removal count specified by B cannot be reached.</p>
</blockquote>
<p ALIGN="left">If the F Operand is not used, the entering Transaction always
goes to the Next Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The conditional operator may be E, G, GE, L, LE, MAX, MIN, or
NE. If no conditional operator is used, E (equality) is assumed. When the
condition is true, the Transaction being tested is removed from the Group. The
conditions are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be equal to the reference
value specified by Operand E for the Transaction to be removed from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be greater than the reference
value specified by Operand E for the Transaction to be removed from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;- The
Transaction attribute specified by Operand D must be greater than or equal to
the reference value specified by Operand E for the Transaction to be removed
from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be less than the reference
value specified by Operand E for the Transaction to be removed from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be less than or equal to the
reference value specified by Operand E for the Transaction to be removed from
the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MAX&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be equal to the largest such
attribute of all Transactions in the Group for the Transaction to be removed
from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MIN&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be equal to the smallest such
attribute of all Transactions in the Group for the Transaction to be removed
from the Group.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be unequal to the reference
value specified by Operand E for the Transaction to be removed from the Group.</p>
</blockquote>
<p ALIGN="left">If no conditional operator is used in Group Scan Mode, E is
assumed.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If a Numeric Group
is referenced, you must not use a conditional operator.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If a Numeric Group
is referenced, you must not use Operand B, D, or E.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand D is
used, then you must use Operand E or else you must use the conditional operator
MIN or MAX.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand E is
used, you must use Operand D.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If MIN or MAX is
used for the conditional operator, Operand D must be used and Operand E must not
be used.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a REMOVE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Transactions and numbers are added to Groups by JOIN Blocks.
Transactions in Groups can be referenced by ALTER, EXAMINE, REMOVE, and SCAN
Blocks. Numbers in Numeric Groups can be referenced by EXAMINE Blocks.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GN<i>Entnum</i>&nbsp;-&nbsp;Numeric
Group count. GN<i>Entnum</i> returns the membership count of Numeric Group <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GT<i>Entnum</i>&nbsp;-&nbsp;Transaction
Group count. GT<i>Entnum</i> returns the membership count of Transaction Group <i>Entnum</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Numeric Groups
Snapshot - Picture of the state of the Numeric Groups in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction Groups
Snapshot - Picture of the state of the Transaction Groups in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="RETURN">RETURN</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A RETURN Block releases ownership of a Facility, or removes a preempted
Transaction from contention for a Facility.</p>
	<p ALIGN="CENTER">RETURN A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">RETURN Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction which owns the Facility
named Teller1 enters the RETURN Block, it gives up ownership of the Facility.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a RETURN Block it removes itself
from contention for the Facility. This can happen in two ways.</p>
<p ALIGN="left">If the Active Transaction owns the Facility Entity, it gives
up ownership and proceeds to the Next Sequential Block.</p>
<p ALIGN="left">If the Active Transaction has been preempted from ownership
of the Facility, it is removed from the Interrupt Chain of the Facility.
Ownership is not affected, because some other Transaction is the owner. If the
Active Transaction is presently clear of all preemptions, it may now move
normally in the simulation.</p>
<p ALIGN="left">In any case, the Active Transaction is removed from ownership
of or contention for the Facility and attempts to enter the Next Sequential
Block. If it neither owns, nor is preempted at the Facility, an Error Stop
occurs.</p>
<p ALIGN="left">If the Active Transaction gives up ownership of the Facility,
the next owner is taken from the Pending Chain, the Interrupt Chain, and finally
the Delay Chain. If there are now Interrupt Mode PREEMPTs pending at this
Facility, the first is given ownership of the Facility. Otherwise, ownership is
returned to the most recently preempted Transaction. If both the Pending Chain
(waiting Interrupt Mode PREEMPTs) and the Interrupt Chain (preempted
Transactions) are empty, the highest priority Transaction on the normal Delay
Chain is given ownership. If there are no Transactions waiting, the Facility
becomes idle.</p>
<p ALIGN="left">When a new owner is chosen from the Delay Chain or the
Pending Chain, it enters the SEIZE or PREEMPT Block immediately, and then is
scheduled by placing it on the CEC behind its priority peers. After this entry,
the current Active Transaction in the RETURN Block continues its movement.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;An entering
Transaction must own, or currently be preempted at, the Facility. Otherwise an
Error Stop occurs.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A RETURN Block never refuses entry to a Transaction.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility <i>Entnum</i> is currently busy, F<i>Entnum</i> returns 1.
Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>&nbsp;-&nbsp;Facility
capture count. The number of times Facility <i>Entnum</i> has become owned by a
Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum</i>&nbsp;-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility <i>Entnum</i> is currently preempted, FI<i>Entnum</i>
returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility <i>Entnum</i> has been busy. FR<i>Entnum</i>
is expressed in parts-per-thousand and therefore returns an real value 0-1000,
inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>
&nbsp;-&nbsp;Average Facility holding time. The average time Facility <i>Entnum</i>
is owned by a capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility <i>Entnum</i> is in
the available state<i>, 0 ot</i>herwise<i>.</p>
</blockquote>
</i></font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SAVAIL">SAVAIL</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SAVAIL Block ensures that a Storage Entity is in the available state.</p>
	 <p ALIGN="CENTER">SAVAIL A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Storage
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SAVAIL MotorPool</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction enters the SAVAIL Block,
the Storage Entity MotorPool is assured to be in the available state.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An SAVAIL Block ensures that a Storage Entity is in the
available state. If any Transactions are waiting on the Delay Chain of the
Storage, they are given a chance to have their storage requests satisfied by the
Storage Entity according to the first-fit-with-skip discipline. Those
Transactions whose storage requests cannot be satisfied remain on the Delay
Chain of the Storage Entity.</p>
<p ALIGN="left">If the Storage Entity is already in the available state, the
SAVAIL Block has no effect.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SAVAIL Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Storage Entity must be defined in a STORAGE Command before
it can be updated by an SAVAIL Block. The STORAGE Command must exist in the
model, or must be sent to the Simulation Object interactively, before a
Transaction can enter the SAVAIL Block. Any attempt to do so before the Storage
Entity is defined, cases an Error Stop.</p>
<p ALIGN="left">A Storage Entity can be redefined by an interactive STORAGE
Command.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;R<i>Entnum</i>&nbsp;-&nbsp;Unused
storage capacity. The storage content (or &quot;token&quot; spaces) available
for use by entering Transactions at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;S<i>Entnum</i>&nbsp;-&nbsp;Storage
in use. S<i>Entnum</i> returns the amount of storage content (or
&quot;token&quot; spaces) currently in use by entering Transactions at Storage
Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SA<i>Entnum</i>&nbsp;-&nbsp;Average
storage in use. SA<i>Entnum</i> returns the time weighted average of storage
capacity (or &quot;token&quot; spaces) in use at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SC<i>Entnum</i>&nbsp;-&nbsp;Storage
use count. Total number of storage units that have been entered in (or
&quot;token&quot; spaces that have been used at) Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE<i>Entnum</i>&nbsp;-&nbsp;Storage
empty. SE<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
unused, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF<i>Entnum</i>&nbsp;-&nbsp;Storage
full. SF<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
used, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SR<i>Entnum</i>&nbsp;-&nbsp;Storage
utilization. The fraction of total usage represented by the average storage in
use at Storage Entity <i>Entnum</i>. SR<i>Entnum</i> is expressed in
parts-per-thousand and therefore returns an real value 0-1000, inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SM<i>Entnum&nbsp;-&nbsp;</i>Maximum
storage in use at Storage Entity<i> Entnum. The &quot;high water mark&quot;.</p>
</i></font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ST<i>Entnum</i>&nbsp;-&nbsp;Average
holding time per unit at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV<i>Entnum</i>&nbsp;-&nbsp;Storage
in available state. SV<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is
in the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SAVEVALUE">SAVEVALUE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SAVEVALUE Block changes the value of a Savevalue Entity.</p>
	<p ALIGN="CENTER">SAVEVALUE A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Savevalue
  Entity number. Required. May be followed by + or - to indicate addition or
  subtraction to existing value. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>, followed by +,
  -, or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;The value to be stored, added, or
  subtracted. Required. The operand must be <i>Name,</i> <i>Number</i>, <i>String</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SAVEVALUE Account,99.95</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the Savevalue Entity named Account takes on
the value 99.95.</p>
<b>
<p ALIGN="CENTER">SAVEVALUE The_Bard,&quot;A rose by any other name ...&quot;</p>
</b>
<p ALIGN="left">In this example, the Savevalue Entity named The_Bard is
assigned a string. If the Savevalue Entity does not exist, it is created.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An SAVEVALUE Block is used to assign, increment, or decrement
the value of a Savevalue Entity.</p>
<p ALIGN="left">The A Operand is evaluated numerically, truncated, and used
as the Savevalue Entity number.</p>
<p ALIGN="left">Operand B is evaluated and used to determine the new value
for the Savevalue Entity. If Operand A is followed by +, then the numeric
equivalent of Operand B is added to the numeric equivalent of the old value. If
Operand A is followed by -, then the numeric equivalent of Operand B is
subtracted from the numeric equivalent of the old value. If Operand A is not
followed by a sign, the old value of the SAVEVALUE is replaced by Operand B.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SAVEVALUE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;X<i>Entnum</i>&nbsp;-&nbsp;Savevalue.
The value of Savevalue <i>Entnum</i> is returned.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Expressions Window
- Online view of values of expressions.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Plot Window -
Online view of a plot of up to 8 expressions.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Savevalues Window
- Online view of Savevalue Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SCAN">SCAN</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SCAN Block passes information from a Transaction Group member to the Active
Transaction.</p>
	<p ALIGN="CENTER">SCAN O A,B,C,D,E,F</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator. Relationship of B to C for the Transaction Group member to be
  chosen. These choices are explained below. Optional. The operator must be <i>Null</i>,
  E, G, GE, L, LE, MAX, MIN, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Transaction Group number. Group whose
  members will be scanned. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or<i> SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Test value. PR or Parameter number. The
  member attribute which determines whether the Group member Transaction should
  be selected. It is evaluated with respect to the Transaction Group member.
  Optional. The operand must be PR or <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Reference value. The value against which
  the B Operand is compared. The default is 0. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>,
  or<i> SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Retrieved value. PR or Parameter number.
  The member attribute which is to be assigned to a Parameter of the Active
  Transaction. It is evaluated with respect to the Transaction Group member.
  Required. The operand must be PR, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or<i> SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;Receiving Parameter number. The Parameter
  number of the entering Transaction which will receive the value retrieved from
  Operand D. Required. The operand must be <i>Name</i>, <i>PosInteger,</i> <i>ParenthesizedExpression,
  SNA</i>, or<i> SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Alternate Block number. The alternate
  destination for the entering Transaction. Optional. The operand must be <i>Null,
  Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or<i> SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SCAN MAX Inventory,P$Price,,P$PartNumber,100</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, all Transactions in the Transaction Group
Inventory are examined in order to find the Parameter named Price with the
greatest value. The first Transaction with a maximal Price Parameter value is
then selected for evaluation of the D Operand. The value of the PartNumber
Parameter of the selected Transaction Group member is assigned to Parameter
number 100 of the Active Transaction. If the Transaction Group is empty, no
action occurs.</p>
<p ALIGN="left">&nbsp;</p>
<b>
<p ALIGN="CENTER">SCAN E Lot11,PartNum,127,Price,Price,Phone</p>
</b>
<p ALIGN="left">In this example, when a Transaction enters the SCAN Block,
the Transaction Group named Lot11 is scanned for the first Transaction which has
a value of 127 in its Parameter named PartNum If such a Transaction is found,
the value in its Parameter named Price is transferred to the corresponding
Parameter of the Transaction entering the SCAN Block. The entering Transaction
then proceeds to the Next Sequential Block. If no such Transaction Group member
is found, the entering Transaction proceeds to the Block labeled Phone. Operands
D and E need not specify the same Transaction Parameter.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A SCAN Block finds the first Transaction in a Group which
passes all tests, and stores one of its attributes in a Parameter of the Active
Transaction. If no such Parameter exists for the Active Transaction, one is
created. If an appropriate Transaction Group member cannot be found, no value is
stored.</p>
<p ALIGN="left">The Transaction Group member may be chosen on the basis of a
test of one of its attributes. This is done by using operands B, C, and/or a
conditional operator. If no such test is used, the first Transaction in the
Group, if any, is selected.</p>
<p ALIGN="left">When a Transaction Group member is found to satisfy a test,
its attribute, which is specified by Operand D, is copied into the Parameter of
the Active Transaction, specified by the E Operand. In this case, the Active
Transaction always proceeds to the Next Sequential Block.</p>
<p ALIGN="left">If no Transaction is found to satisfy the requirements, the
Active Transaction may optionally be directed to the Block specified by the F
Operand. Otherwise, it proceeds to the Next Sequential Block.</p>
<p ALIGN="left">If you use operands B, C, or a conditional operator, the
first Transaction Group member to pass the test is selected. Operand B specifies
which attribute of the member Transactions is to be tested. It may be compared
to the minimum or the maximum of all such Group member attributes by using MIN
or MAX as the conditional operator. The first Transaction in the Transaction
Group which has the maximum or minimum attribute is selected. If you use MIN or
MAX, you must not use Operand C.</p>
<p ALIGN="left">You may compare the Group member attribute to Operand C, with
or without a conditional operator. In this case, the conditional operator must
not be MIN or MAX. The default for Operand C is 0.</p>
<p ALIGN="left">Operands B and D always refer to the Transaction Group member
under test. Notice that any SNA may be used. Any SNA which requires a
Transaction for its evaluation uses the current Transaction Group member under
test. The result returned by any SNA, other than PR, is used as a Parameter
number, whose value is returned as the final result.</p>
<p ALIGN="left">The default for the conditional operator is E for equality.
If you use no conditional operator, but you use Operand B and Operand C, the
values must be equal for the member Transaction attribute to be selected.</p>
<p ALIGN="left">The F Operand indicates an alternate destination Block to be
taken by the entering Transaction when no Transaction is found which satisfies
the conditions specified. If F is not used, the entering Transaction always
proceeds to the Next Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The conditional operator may be E, G, GE, L, LE, MAX, MIN, or
NE. If no conditional operator is used, E (equality) is assumed. When the
condition is true, the Transaction being tested is selected. The conditions are
defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be equal to the
reference value specified by Operand C for the member Transaction to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be greater than the
reference value specified by Operand C for the member Transaction to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be greater than or
equal to the reference value specified by Operand C for the member Transaction
to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be less than the
reference value specified by Operand C for the member Transaction to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be less than or equal
to the reference value specified by Operand C for the member Transaction to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MAX&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be equal to the
greatest such attribute of all Transactions in the Group for the member
Transaction to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MIN&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be equal to the
smallest such attribute of all Transactions in the Group for the member
Transaction to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
member Transaction attribute specified by Operand B must be unequal to the
reference value specified by Operand C for the member Transaction to be
selected.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand C is
used, you must use Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If MIN or MAX is
used for the conditional operator, Operand C must not be used.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SCAN Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Transactions and numbers are added to Groups by JOIN Blocks.
Transactions in Groups can be referenced by ALTER, EXAMINE, REMOVE, and SCAN
Blocks.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GT<i>Entnum</i>&nbsp;-&nbsp;Transaction
Group count. GT<i>Entnum</i> returns the membership count of Transaction Group <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction Groups
Snapshot - Picture of the state of the Transaction Groups in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SEEK">SEEK</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SEEK Block sets the Current Line Position of a Data Stream.</p>
	<p ALIGN="CENTER">SEEK A,B</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;New
  Current Line Position. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Data Stream Entity. Optional. The operand
  must be <i>Null, Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>
  or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SEEK 20,Data_Base</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the SEEK Block changes the Current Line
Pointer of the Data Stream Data_Base to 20.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Data Stream is a sequence of text lines used by a GPSS
World simulation. Each Data Stream is identified by a unique number. Chapter 4
(4.16) contains a full discussion of Data Streams, including the error code
descriptions under the Section entitled <u>Data Streams</u>.</p>
<p ALIGN="left">Each Data Stream has a <i>Current Line Position</i>. This is
a 1-relative index to the next line position to be read or written. When a
Transaction enters a SEEK Block, Operand A is evaluated numerically and used as
next Current Line Position.</p>
<p ALIGN="left">If Operand B is used, it is evaluated numerically and used as
the Data Stream Entity number. It must be a positive integer. If Operand B is
not specified, the SEEK is applied to Data Stream number 1.</p>
<p ALIGN="left">If an error is detected, the error code is stored internally.
A CLOSE Block can be used later to retrieve the Error Code.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SEEK Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;OPEN&nbsp;-&nbsp;Create
a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CLOSE&nbsp;-&nbsp;Shut
down a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;READ&nbsp;-&nbsp;Retrieve
a text line from a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;WRITE&nbsp;-&nbsp;Send
a text line to a Data Stream.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SEIZE">SEIZE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">When the Active Transaction attempts to enter a SEIZE Block, it waits for or
acquires ownership of a Facility Entity.</p>
	<p ALIGN="CENTER">SEIZE A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Facility
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SEIZE Teller1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction attempts to enter the
SEIZE Block, the state of the Facility named Teller1 is tested. If it is idle,
ownership is given to the Active Transaction, which is allowed to enter the
SEIZE Block and proceed to the Next Sequential Block (NSB). If the Facility is
busy (owned), the Active Transaction comes to rest on the Delay Chain of the
Facility.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A SEIZE Block enables a Transaction to acquire ownership of a
Facility. If the Facility is idle (not owned), the Transaction immediately
acquires ownership of it, enters the SEIZE Block, and attempts to enter the next
Block. If the Facility is already owned, the Transaction comes to rest, last
within its priority, on the Delay Chain of the Facility and does not enter the
SEIZE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is refused entry to a SEIZE Block if it cannot
immediately receive ownership of the Facility Entity.</p>
<p ALIGN="left">The Active Transaction is refused entry to the SEIZE Block if
the Facility entity is in the unavailable state.</p>
<p ALIGN="left">When a Transaction is refused entry, its Delay Indicator is
set and remains so until the Transaction enters a &quot;Simultaneous&quot; Mode
TRANSFER Block. Simultaneous Mode TRANSFER Blocks are rarely used because a
BOOLEAN VARIABLE can more efficiently control the coordination of the state of a
number of resources when used in a TEST Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;F<i>Entnum</i>&nbsp;-&nbsp;Facility
busy. If Facility <i>Entnum</i> is currently busy, F<i>Entnum</i> returns 1.
Otherwise F<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FC<i>Entnum</i>&nbsp;-&nbsp;Facility
capture count. The number of times Facility <i>Entnum</i> has become owned by a
Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FI<i>Entnum&nbsp;</i>-&nbsp;Facility
<i>Entnum</i> interrupted. If Facility <i>Entnum</i> is currently preempted, FI<i>Entnum</i>
returns 1. Otherwise FI<i>Entnum</i> returns 0.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FR<i>Entnum</i>&nbsp;-&nbsp;Facility
utilization. The fraction of time Facility <i>Entnum</i> has been busy. FR<i>Entnum</i>
is expressed in parts-per-thousand and therefore returns an real value 0-1000,
inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FT<i>Entnum</i>&nbsp;-&nbsp;Average
Facility holding time. The average time Facility <i>Entnum</i> is owned by a
capturing Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV<i>Entnum</i>&nbsp;-&nbsp;Facility
in available state. FV <i>Entnum</i> returns 1 if Facility <i>Entnum</i> is in
the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SELECT">SELECT</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SELECT Block chooses an entity and places its entity number in a Parameter
of the Active Transaction.</p>
	<p ALIGN="CENTER">SELECT O A,B,C,D,E,F</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Conditional
  operator or logical operator. These choices are explained below. Required. The
  operator must be FNV, FV, I, LS, LR, NI, NU, SE, SF, SNE, SNF, SNV, SV, U, E,
  G, GE, L, LE, MIN, MAX, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Parameter name or number to receive the
  number of the selected entity. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.&nbsp;</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Lower entity number. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Upper entity number. Required. The
  operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Reference value for E Operand when in
  Conditional Mode. Optional. The operand must be <i>Name</i>, <i>Number</i>, <i>String</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>. Not used with
  MAX or MIN.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;SNA class name. Entity attribute
  specifier for Conditional Mode tests. Required only for Conditional Mode. The
  type of SNA implies the entity type. You do not specify the entity number in
  Operand E. This is done automatically as the entity number range is searched.
  You may use any entity SNA class. Optional. The operand must be <i>Null</i> or
  <i>entitySNAclass</i>.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Alternate Block number. The destination
  Block if no entity is selected. Optional. The operand must be <i>Null, Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SELECT SNF Not_Full,Bin1,Bin3</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the entity number of the first Storage
Entity that has room whose entity numbers fall between Bin1 and Bin3 will be
stored in the Transaction Parameter named Not_Full. If the Parameter does not
exist, it will be created. It is always wise to test prior to entry into a
SELECT Block that a successful selection is possible. If it is not possible, a 0
would be put in the Parameter and in this case, entry into an ENTER Block would
cause an Error Stop since no entity can have an entity number of 0. You can also
use an alternate exit if no entity is found to meet the desired criteria.</p>
<p ALIGN="left">&nbsp;</p>
<p ALIGN="left">If the range of entities to be searched have been defined
with alphanumeric names as above, you must first use EQU Statements to assign
contiguous numbers to the range of names. The EQU Statements must occur prior to
the original entity definitions.</p>
</font><font FACE="Arial">
<p ALIGN="left">&nbsp;</p>
<p ALIGN="left"></font><b><font FACE="Arial" SIZE="3">&nbsp;10&nbsp;Bin1 EQU
1</p>
<p ALIGN="left">&nbsp;20&nbsp;Bin2 EQU 2</p>
<p ALIGN="left">&nbsp;30&nbsp;Bin3 EQU 3</p>
<p ALIGN="left">&nbsp;40&nbsp;Bin1 STORAGE 11</p>
<p ALIGN="left">&nbsp;50&nbsp;Bin2 STORAGE 1000</p>
<p ALIGN="left">&nbsp;60&nbsp;Bin3 STORAGE 150</p>
<p ALIGN="left">.</p>
<p ALIGN="left">.</p>
<p ALIGN="left">100&nbsp;SELECT SNF 3,Bin1,Bin3,,,No_Room</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">&nbsp;</p>
<p ALIGN="left">Here, we have taken the example above and given an alternate
destination to Transactions that find all Storage Entities to be full. If you do
not test first for a successful selection using a TEST Block and a BOOLEAN
VARIABLE, you should have an alternate destination should the selection be
unsuccessful.</p>
<b>
<p ALIGN="CENTER">SELECT E Empty1,Queue1,Queue9,0,Q</p>
</b>
<p ALIGN="left">In this example, the SELECT Block operates in Conditional
Mode. Each Queue Entity with entity number between those of Queue1 and Queue9,
inclusively, is tested. The first Queue Entity whose current content is 0 is
selected. EMPTY1 is the name of the Parameter of the entering Transaction to
receive the entity number of the first &quot;empty&quot; Queue Entity in the
specified range.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the SELECT Block is entered, the entity specified by
Operand B is tested. If the entity does not exist and does not require a
separate Command for its definition, a new entity is created. Thereafter, each
entity in the range indicated by operands B and C is tested. An SNA is built
automatically for each entity. The SNA class used to build the SNA is taken from
Operand E or is specified by the logical operator.</p>
<p ALIGN="left">A SELECT Block operates in either Logical Mode or in
Conditional Mode, depending on whether a logical operator or a conditional
operator is used.</p>
<p ALIGN="left">When a logical operator is used (defined below), operands A,
B, and C are used. The condition specified by the logical operator is tested for
the entities whose numbers fall between B and C. The entity number of the first
entity found in that condition is placed in the Parameter of the entering
Transaction whose number is given by Operand A. The entity type is implied by
the logical operator. If no entity is found, 0 is placed in the Parameter of the
Active Transaction. If the Parameter does not exist, it is created.</p>
<p ALIGN="left">When a conditional operator is used, operands A, B, C, E, and
usually D are used. Operands A, B, C, are used to specify the target Parameter,
and the range of entity numbers, as above. But now the conditional operator
specifies the relationship between operands D and E that must hold for the
entity to be selected. Both are evaluated numerically.</p>
<p ALIGN="left">In Conditional Mode, the SNA class is combined with the
entity specifier in order to build an SNA. The entity type implied by each SNA
class is given in Section 3.4. The complete SNA is built from this class and the
number of the entity being tested. Each such SNA is evaluated for each entity
and compared to the reference value in Operand D. Operand D is evaluated with
respect to the entering Transaction and is the reference value for comparison to
Operand E, which specifies the class of SNA (and therefore the entity type) to
be evaluated. The conditional operator specifies the relation that Operand E,
evaluated at each entity, must bear to Operand D, evaluated on behalf of the
entering Transaction, in order for the entity to be selected. If MIN or MAX is
used as the conditional operator, Operand D is ignored.</p>
<p ALIGN="left">In either mode, the F Operand may be used to direct the
entering Transaction to a new Block in the event that no entity can be selected.
If F is not used, the entering Transaction will always proceed to the next
sequential Block. If F is used, and no entity is selected, the Active
Transaction proceeds to the Block specified by F, with its Parameter, specified
by Operand A, unchanged.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Logical Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Either a conditional operator or a logical operator is
required. The logical operator may be FNV, FV, I, LS, LR, NI, NU, SE, SF, SNE,
SNF, SNV, SV, or U. When the logical operator is true, the entity being tested
is selected. The conditions are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FNV&nbsp;-&nbsp;The
Facility Entity must be unavailable in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FV&nbsp;-&nbsp;The
Facility Entity must be available in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;I&nbsp;-&nbsp;The
Facility Entity must be currently interrupted (preempted) in order to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LS&nbsp;-&nbsp;The
Logicswitch Entity must be set in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LR&nbsp;-&nbsp;The
Logicswitch Entity must be reset in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NI&nbsp;-&nbsp;The
Facility Entity must NOT be currently interrupted (preempted) in order to be
selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NU&nbsp;-&nbsp;The
Facility Entity must not be in use in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE&nbsp;-&nbsp;The
Storage Entity must be empty in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SF&nbsp;-&nbsp;The
Storage Entity must be full in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNE&nbsp;-&nbsp;The
Storage Entity must NOT be empty in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNF&nbsp;-&nbsp;The
Storage Entity must NOT be full in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SNV&nbsp;-&nbsp;The
Storage Entity must NOT be available in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV&nbsp;-&nbsp;The
Storage Entity must be available in order to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;U&nbsp;-&nbsp;The
Facility Entity must be in use in order to be selected.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Conditional Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Either a conditional operator or a logical operator is
required. The conditional operator may be E, G, GE, L, LE, MAX, MIN, or NE. The
conditions are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the reference value specified by
Operand D for the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
value of the automatic SNA must be greater than the reference value specified by
Operand D for the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
value of the automatic SNA must be greater than or equal to the reference value
specified by Operand D for the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
value of the automatic SNA must be less than the reference value specified by
Operand D for the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
value of the automatic SNA must be less than or equal to the reference value
specified by Operand D for the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MAX&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the greatest of all such SNAs, for
the entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MIN&nbsp;-&nbsp;The
value of the automatic SNA must be equal to the least of all such SNAs, for the
entity to be selected.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
value of the automatic SNA must be unequal to the reference value specified by
Operand E for the entity to be selected.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Either a
conditional operator or a logical operator is required.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Evaluated entity
numbers must be positive integers.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;D and E are
required if O is a conditional operator. Other than MIN or MAX.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;When evaluated, C
must be greater than or equal to B.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SELECT Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Facilities Window
- Online view of Facility Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Logicswitches
Window - Online view of Logicswitch Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SPLIT">SPLIT</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SPLIT Block creates Transactions in the same Assembly Set as the Active
Transaction.</p>
	<p ALIGN="CENTER">SPLIT A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Count.
  Number of related Transactions to be created. Required. The operand must be <i>Name,
  PosInteger, ParenthesizedExpression, SNA, or SNA*Parameter.</p>
  </i><b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Block number. Destination for new
  Transactions. Optional. The operand must be <i>Null</i>,<i> Name, PosInteger,
  ParenthesizedExpression, SNA, or SNA*Parameter.</p>
  </i><b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Parameter number. Parameter to receive
  serial number. Optional. The operand must be <i>Null</i>,<i> Name, PosInteger,
  ParenthesizedExpression, SNA, or SNA*Parameter.</p>
  </i>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Examples</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SPLIT 1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the SPLIT Block. A new copy
of the parent Transaction is created which will follow the parent Transaction to
the next Block. The new Transaction has the same priority, Parameter values, and
Mark Time as the parent.</p>
<b>
<p ALIGN="CENTER">SPLIT 3,P20,20</p>
</b>
<p ALIGN="left">In this example, each time the SPLIT Block is entered, 3 new
Transactions are created. Each Transaction has the same priority, Mark Time, and
Parameter values as the parent Transaction, with the exception of Parameter
number 20.</p>
<p ALIGN="left">Each offspring Transaction will have a serial number in its
Parameter number 20 based on the value in Parameter number 20 of the parent
Transaction. The parent’s Parameter value 20 is first incremented by 1 (in
case it is 0), and then the serial number of each offspring is calculated
following that value sequentially.</p>
<p ALIGN="left">The destination Block found in Operand B is evaluated with
respect to each newly created Transaction. If Parameter 20 of the parent
Transaction contains a Block number, say, n, then the first offspring will go to
Block n+2, the second to n+3 and the third to n+4.</p>
<p ALIGN="left">The parent Transaction will proceed to the Next Sequential
Block following the SPLIT Block.</p>
<p ALIGN="left">The above example is unique because Parameter 20 is used in
both the B and C operands. Therefore, the serial number is used to determine the
destination Block location.</p>
<p ALIGN="left">The B and C operands can be used for separate purposes, B
containing a single destination of the offspring Transactions and C, a serial
number which might be used to direct the individual Transactions at some
location further on in the simulation.</p>
<b>
<p ALIGN="CENTER">SPLIT 3,Pro,17</p>
</b>
<p ALIGN="left">In this example, each time the split Block is entered, 3 new
Transactions are created. The parent Transaction goes to the Next Sequential
Block, the offspring to a Block labeled Pro. Parameter 17 will receive the
serialization. If the parent Transaction’s Parameter is not predefined, it
will be created and initialized to 0. In this example, the parent Transaction
with a value of 0 in the Parameter 17, (the Parameter to be used for
serialization) will, after passing through the SPLIT Block, have a 1 in
Parameter 17 and the offspring will have 2, 3, and 4 in Parameter 17.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A SPLIT Block creates new Transactions which share the
attributes of their parent. Each offspring Transaction has the same priority and
Mark Time of the parent, and is in the same Assembly Set. If the Trace Indicator
is set in the parent Transaction, it is turned on in the offspring Transaction.</p>
<p ALIGN="left">The new Transactions may be sent to an alternate destination,
by using a Block number for Operand B. The new Block number is evaluated for
each new Transaction.</p>
<p ALIGN="left">The optional C Operand specifies the Parameter number of the
newly created Transactions to receive a serial number. The numbering starts at
the value of the corresponding Parameter in the parent Transaction, plus 1. For
example, if 3 copies are to be created with a serial number in Parameter 120,
and the entering Transaction has 15 in its Parameter 120, then the new
Transactions will have 16, 17, and 18, respectively, in their Parameters
numbered 120. If the parent Transaction has no such Parameter, it is created and
the numbering starts at 1.</p>
<p ALIGN="left">By using both B and C operands it is possible to send each
new Transaction to a different destination as shown in the second example above.</p>
<p ALIGN="left">The parent Transaction and all the offspring Transactions all
belong to the same set of Transactions called an Assembly Set. All Transactions
belong to exactly one Assembly Set, which can be changed by entry into an ADOPT
Block. Members of the same Assembly Set are said to be &quot;related&quot;. The
relationships of Transactions may be tested and used in ASSEMBLE, GATHER, MATCH,
and GATE Blocks for synchronization and other purposes.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A, B, and C, if
specified, must be positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SPLIT Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ADOPT&nbsp;-&nbsp;Set
the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ASSEMBLE&nbsp;-&nbsp;Wait
for and destroy Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GATHER&nbsp;-&nbsp;Wait
for Assembly Set members.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MATCH - Wait for
Assembly Set member.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A1&nbsp;-&nbsp;Assembly
Set. Return the Assembly Set of the Active Transaction.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;MB<i>Entnum</i>&nbsp;-&nbsp;Match
at Block. MB<i>Entnum</i> returns a 1 if there is a Transaction at Block <i>Entnum</i>
which is in the same Assembly Set as the Active Transaction. MB<i>Entnum</i>
returns a 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="SUNAVAIL">SUNAVAIL</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A SUNAVAIL Block ensures that a Storage Entity is in the unavailable state.</p>
	<p ALIGN="CENTER">SUNAVAIL A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Storage
  name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">SUNAVAIL MotorPool</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this simple example, the Storage Entity named MotorPool is
made unavailable when a Transaction enters this Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An SUNAVAIL Block ensures that a Storage Entity is
unavailable. This means that all Transactions requesting storage will be placed
on the Delay Chain of the Storage Entity. No Transaction is permitted to enter
any ENTER Block if the Storage Entity is in the unavailable state.</p>
<p ALIGN="left">If the Storage Entity is already in the unavailable state,
the SUNAVAIL Block has no effect.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Operand A must be
the name or number of a predefined Storage Entity.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a SUNAVAIL Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Storage Entity must be defined in a STORAGE Command before
it can be updated by an SUNAVAIL Block. The STORAGE Command must exist in the
model, or must be sent to the Simulation Object interactively, before a
Transaction can enter the SUNAVAIL Block. Any attempt to do so before the
Storage Entity is defined, cases an Error Stop.</p>
<p ALIGN="left">A Storage Entity can be redefined by an interactive STORAGE
Command.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;R<i>Entnum</i>
&nbsp;-&nbsp;Unused storage capacity. The storage content (or &quot;token&quot;
spaces) available for use by entering Transactions at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;S<i>Entnum</i>&nbsp;-&nbsp;Storage
in use. S<i>Entnum</i> returns the amount of storage content (or
&quot;token&quot; spaces) currently in use by entering Transactions at Storage
Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SA<i>Entnum</i>&nbsp;-&nbsp;Average
storage in use. SA<i>Entnum</i> returns the time weighted average of storage
capacity (or &quot;token&quot; spaces) in use at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SC<i>Entnum</i>&nbsp;-&nbsp;Storage
use count. Total number of storage units that have been entered in (or
&quot;token&quot; spaces that have been used at) Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SE<i>Entnum</i>&nbsp;-&nbsp;Storage
empty. SE<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is completely
unused, 0 otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SFentnum&nbsp;-&nbsp;Storage
full. SFentnum returns 1 if Storage Entity <i>Entnum</i> is completely used, 0
otherwise.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SR<i>Entnum</i>&nbsp;-&nbsp;Storage
utilization. The fraction of total usage represented by the average storage in
use at Storage Entity <i>Entnum</i>. SR<i>Entnum</i> is expressed in
parts-per-thousand and therefore returns an real value 0-1000, inclusively.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SM<i>Entnum</i>&nbsp;-&nbsp;Maximum
storage in use at Storage Entity <i>Entnum</i>. The &quot;high water mark&quot;.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;ST<i>Entnum</i>&nbsp;-&nbsp;Average
holding time per unit at Storage Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SV<i>Entnum</i>&nbsp;-&nbsp;Storage
in available state. SV<i>Entnum</i> returns 1 if Storage Entity <i>Entnum</i> is
in the available state, 0 otherwise.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Storages Window -
Online view of Storage Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 ALIGN="left"><!--mstheme--><font color="#336666"><a name="TABULATE">TABULATE</a> <!--mstheme--></font></h1>
    <p align="left">A TABULATE Block triggers the collection of a data item in a Table
    Entity.</p>
<p ALIGN="CENTER">TABULATE A,B</p>
<p align="left">Operands</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Table
Entity name or number. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
<i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
<b>
<p ALIGN="left">B</b>&nbsp;-&nbsp;Weighting factor. Optional. The operand
must be <i>Null, Name</i>, <i>Number,</i> <i>ParenthesizedExpression, SNA</i>,
or <i>SNA*Parameter</i>.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">TABULATE Sales</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters this TABULATE Block, the Table
Entity named Sales is found. Sales must have been defined in a TABLE Command.
Then the statistics associated with the table are updated with no weighting.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a TABULATE Block, Operand A is
evaluated and used to find a Table Entity. If there is no such entity an Error
Stop occurs.</p>
<p ALIGN="left">The Table Entity is then updated according to the operands in
the TABLE Statement. If the B Operand is used, it is evaluated and used as a
weighting factor. Otherwise the factor is taken to be 1.</p>
<p ALIGN="left">A further discussion of the statistics gathered by table
entities may be found in Section 4.10 and Chapter12.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be
positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B, if specified,
must be positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A must be the name
or number of a predefined TABLE entity.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a TABULATE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Command</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Table Entity must be defined in a TABLE Command before it
can be updated by a TABULATE Block. The TABLE Command must exist in the model,
or must be sent to the Simulation Object interactively, before a Transaction can
enter the TABULATE Block. Any attempt to do so before the Table Entity is
defined, cases an Error Stop.</p>
<p ALIGN="left">A Table Entity can be redefined by an interactive TABLE
Command.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;TB<i>Entnum</i>&nbsp;-&nbsp;Non
weighted average of entries in Table Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;TC<i>Entnum</i>&nbsp;-&nbsp;Count
of non weighted table entries in Table Entity <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;TD<i>Entnum</i>&nbsp;-&nbsp;Standard
deviation of non weighted table entries in Table Entity <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Table Window -
Online view of Table Entity dynamics.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="TERMINATE">TERMINATE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A TERMINATE Block removes the Active Transaction from the simulation and
optionally reduces the Termination Count.</p>
    <p ALIGN="CENTER">TERMINATE A</p>
    <p align="left">Operand</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Termination
  Count decrement. Default is 0. Optional. The operand must be <i>Null, Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">TERMINATE 1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, when a Transaction enters the TERMINATE
Block it is removed from the simulation. Also, the Termination Count of the
simulation, which is set by a START Command is decremented by 1.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a TERMINATE Block, Operand A is
evaluated, truncated, and used to decrement the Termination Count of the
simulation. If Operand A was not specified, the Termination Count is not
changed.</p>
<p ALIGN="left">The Active Transaction is then removed from the simulation,
and a new Active Transaction is chosen.</p>
<p ALIGN="left">The Termination Count of the simulation is set by a prior
START Command. When the termination count reaches 0, the simulation ends, and
unless suppressed by Operand B of the START Command, the optional standard
report is written.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restriction</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A, if specified,
must be positive.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a TERMINATE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNA</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;TG1&nbsp;-&nbsp;Termination
Count of the simulation. This value is initialized by a START Command and
indicates completion of the simulation when it becomes less than or equal to 0.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="TEST">TEST</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A TEST Block compares values, normally SNAs, and controls the destination of
the Active Transaction based on the result of the comparison.</p>
	<p ALIGN="CENTER">TEST O A,B,C</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Relational
  operator. Relationship of Operand A to Operand B for a successful test.
  Required. The operator must be E, G, GE, L, LE, or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;Test value. Required. The operand must be</font><i><font FACE="Arial">
  </font><font FACE="Arial" SIZE="2">Name</font></i><font FACE="Arial" SIZE="2">,<i>
  Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Reference value. Required. The operand
  must be <i>Name</i>, <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Destination Block number. Optional. The
  operand must be </font><i><font FACE="Arial">Null, </font><font FACE="Arial" SIZE="2">Name</font></i><font FACE="Arial" SIZE="2">,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A TEST Block operates in either &quot;Refuse Mode&quot; or
&quot;Alternate Exit Mode&quot;. In either case, operands A and B are evaluated
numerically, and compared.</p>
<p ALIGN="left">If Operand C is not used, the TEST Block operates in Refuse
Mode. When a Transaction attempts to enter a Refuse Mode TEST Block, and the
test is unsuccessful, the Transaction is blocked, i.e. not allowed to enter the
TEST Block, until the test is repeated and is successful. When the test is
successful, the Active Transaction enters the TEST Block and then proceeds to
the Next Sequential Block.</p>
<p ALIGN="left">Blocked Transactions are placed on the Retry Chains of all
entities involved in the comparison. When the state of any of these entities
changes, the blocked Transaction is reactivated, the test specified by the TEST
block is retried, and if successful, the Transaction is permitted to enter the
TEST Block. However, the integration of User Variables does not cause blocked
Transactions to be reactivated. You should use the thresholds in an INTEGRATE
Command if you need to be notified about the level of one or more continuous
variables. This is discussed further in Chapter 1, in the Section entitled <u>Continuous
Variables</u>.</p>
<p ALIGN="left">If Operand C is used, the TEST Block operates in Alternate
Exit Mode. When a Transaction attempts to enter such a TEST Block, and the test
is unsuccessful, the Transaction enters the TEST Block, is scheduled for the
alternate destination Block specified by the C Operand, and is placed on the
Current Events Chain in front of its priority peers. If the test is successful,
the Active Transaction enters the TEST Block and then proceeds to the Next
Sequential Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">TEST G C1,70000</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example of a &quot;Refuse Mode&quot; TEST Block, the
Active Transaction enters the TEST Block if the relative system clock value is
greater than 70000. Otherwise, the Transaction is blocked until the test is
true.</p>
<p ALIGN="center">&nbsp;</p>
<b>
<p ALIGN="CENTER">TEST G Q$Teller1_Line,Q$Teller2_Line,Teller1</p>
</b>
<p ALIGN="left">In this example of an &quot;Alternate Exit Mode&quot; TEST
Block, the Active Transaction always enters the TEST Block. If the content of
the queue entity named Teller1_Line is greater than the content of the queue
entity named Teller2_Line the Transaction proceeds to the NSB. Otherwise, the
Active Transaction is scheduled to enter the Block at the location named
TELLER1.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Relational Operator</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The relational operator is required. It may be E, G, GE, L,
LE, or NE.</p>
<p ALIGN="left">The successful tests are defined as follows:</p>
<blockquote>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
value of Operand A must be equal to the value of Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
value of Operand A must be greater than the value of Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
value of Operand A must be greater than or equal to the value of Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L - The value of
Operand A must be less than the value of Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
value of Operand A must be less than or equal to the value of Operand B.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
value of Operand A must be unequal to the value of Operand B.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;C must be the
location of a Block in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;TEST Blocks are
extremely powerful, however, unsuccessful testing can cause large amounts of
computer time to be used. You may need to arrange your simulation to reduce the
frequency of unsuccessful tests. This can be done by placing Transactions with
no chance of a successful test on a User Chain using LINK and UNLINK Blocks.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A TEST Block operating in Refuse Mode will refuse entry to a
Transaction when the test fails. The refused Transaction will be blocked until
the test is successful.</p>
<p ALIGN="left">When a Transaction is refused entry, its Delay Indicator is
set and remains so until the Transaction enters a &quot;Simultaneous&quot; Mode
TRANSFER Block. Simultaneous Mode TRANSFER Blocks are rarely used because a
BOOLEAN VARIABLE can more efficiently control the coordination of the state of a
number of resources when used in a TEST Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="TRACE">TRACE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A TRACE Block turns on the Trace Indicator of the Active Transaction.</p>
	<p ALIGN="CENTER">TRACE</p>
    <p align="left">Operands</p>
  </font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">None.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">TRACE</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the Trace Indicator of the Active
Transaction will be set and stay on until an UNTRACE Block is entered.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a TRACE Block, its Trace Indicator
is turned on. This causes a trace message to be sent to all Journal Windows
every time the Transaction enters a new Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a TRACE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">· Journal Window - Record session events.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="TRANSFER">TRANSFER</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A TRANSFER Block causes the Active Transaction to jump to a new Block
location.</p>
	<p ALIGN="CENTER">TRANSFER A,B,C,D</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Transfer
  Block mode. Described below. Optional. The operand must be BOTH, ALL, PICK,
  FN, P, SBR, SIM, <i>fraction</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, <i>SNA*Parameter</i>, or <i>Null</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Block number or location. Parameter name
  or number when in P Mode. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Block number or location. Increment value
  in FN or P Mode. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Block number increment for ALL Mode.
  Default is 1. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A TRANSFER Block may operate in one of 9 &quot;modes&quot;,
each with different properties. When a Transaction enters a TRANSFER Block,
Operand A is used to determine the mode of operation of the Block. The meaning
of operands B and C depend on the mode. When you do not specify an operand which
corresponds to a Block location, the next sequential Block after the TRANSFER
Block is used.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Unconditional Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is omitted, the TRANSFER Block operates in
&quot;Unconditional Mode&quot;. In Unconditional Mode, the Active Transaction
always jumps to the location specified by the B Operand.</p>
<b>
<p ALIGN="CENTER">TRANSFER ,New_Place</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, it is
immediately scheduled for the Block at location New_Place.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Fractional Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is not a keyword, the TRANSFER Block
operates in &quot;Fractional Mode&quot;. In Fractional Mode, the Active
Transaction jumps to the location specified by the C Operand with a probability
given by Operand A. If Operand A is a nonnegative integer, it is interpreted as
parts-per-thousand and converted to a fractional probability. The alternate
destination is specified in Operand B, or the NSB if Operand B is omitted.</p>
<b>
<p ALIGN="CENTER">TRANSFER .75,,New_Place</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, it is proceeds
to the location named NEW_PLACE with a probability of .75. The remaining times
it proceeds to the Next Sequential Block. You can select which random number
generator number is to be used as the source of the random number. This is set
in the &quot;Random&quot; page of the Model Settings Notebook.</p>
<p ALIGN="center">CHOOSE </font><b><font FACE="Arial">Edit / Settings</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">then select the </font><b><font FACE="Arial" SIZE="3">Random</font></b><font FACE="Arial" SIZE="2">
page. Then fill in the desired random number stream entity number in the entry
box marked &quot;TRANSFER&quot;. The installation default is to use random
number stream number 1.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Both Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is BOTH, the TRANSFER Block operates in
&quot;Both Mode&quot;. In Both Mode, the Block specified by Operand B is tested.
If it refuses to admit the Active Transaction, the Block specified in Operand C
is tested. The first Block to admit the Transaction will be the new destination.
If neither Block admits the Transaction, it stays in the TRANSFER Block until it
can enter one or the other.</p>
<b>
<p ALIGN="CENTER">TRANSFER BOTH,First_Place,Second_Place</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, the Block at
location First_Place is tested. If the Transaction can enter, it does so. If
not, the Block at location Second_Place is tested. The Transaction enters if it
can. Otherwise, it remains in the TRANSFER Block until it can leave.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">All Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is ALL, the TRANSFER Block operates in
&quot;All Mode&quot;. In &quot;All&quot; Mode, the Block specified by Operand B
is tested. If this Block refuses to admit the Active Transaction, Blocks are
tested in succession until the Block specified by Operand C is passed, unless
one of the Blocks tested admits the Transaction prior to reaching the Block
specified in Operand C. The location of each succeeding test Block is calculated
by adding Operand D to the previous test Block location. If Operand D is not
used, every Block between those specified by B and C, inclusive, are tested. If
Operand C is not used, only one Block is tested. No Block with a location higher
than Operand C is tested. The first Block to admit the Transaction will be the
new destination. If no Block admits the Transaction, it stays in the TRANSFER
Block until it can enter one.</p>
<b>
<p ALIGN="CENTER">TRANSFER ALL,First_Place,Last_Place,2</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, the Block at
location First_Place is tested. If the Transaction can enter, it does so. If
not, the Blocks at every second higher location are tested. The Transaction
enters if it can. If all tested Blocks refuse, the testing ends with the Block
at location Last_Place, or with the Block just before it, depending on the
separation of First_Place and Last_Place. If no Block accepts, the Transaction
remains in the TRANSFER Block until it can leave.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Pick Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is PICK, the TRANSFER Block operates in
&quot;Pick&quot; Mode. In Pick Mode, a destination is chosen randomly.</p>
<b>
<p ALIGN="CENTER">TRANSFER PICK,First_Place,Last_Place</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, a location is
chosen randomly which is numerically between First_Place and Last_Place,
inclusively. The chosen location is the next destination for the Active
Transaction. You can select which random number generator number is to be used
as the source of the random number. This is set in the &quot;Random&quot; page
of the Model Settings Notebook.</p>
<p ALIGN="center">CHOOSE </font><b><font FACE="Arial">Edit / Settings</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Then select the </font><b><font FACE="Arial" SIZE="3">Random</font></b><font FACE="Arial" SIZE="2">
page. Then fill in the desired random number stream entity number in the entry
box marked &quot;TRANSFER&quot;. The installation default is to use random
number stream number 1.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Function Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is FN, the TRANSFER Block operates in
&quot;Function Mode&quot;. In Function Mode, the destination is chosen by
evaluating a function entity, specified in B, and adding an optional increment
specified in C.</p>
<b>
<p ALIGN="CENTER">TRANSFER FN,Func1,5</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, the function
entity named FUNC1 is evaluated, and added to 5, to determine the location of
the destination.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Parameter Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is P, the TRANSFER Block operates in
&quot;Parameter Mode&quot;. In Parameter Mode, the Active Transaction jumps to a
location calculated from the sum of a Parameter value and Operand C. If C is not
specified, the Parameter value is the location of the new destination.</p>
<b>
<p ALIGN="CENTER">TRANSFER P,Placemarker,1</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, it is
immediately scheduled for the Block immediately after the location specified in
the Transaction Parameter named Placemarker.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Subroutine Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is SBR, the TRANSFER Block operates in
&quot;Subroutine Mode&quot;. In Subroutine Mode, the Active Transaction always
jumps to the location specified by the B Operand. The location of the transfer
Block is placed in the Parameter specified in Operand C.</p>
<b>
<p ALIGN="CENTER">TRANSFER SBR,New_Place,Placemarker</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, it is
immediately scheduled for the Block at location New_Place. The location of the
TRANSFER Block is placed in the Parameter named Placemarker. If there is no such
Parameter, it is created.</p>
<p ALIGN="left">To return from the subroutine, use a TRANSFER Block in
Parameter Mode as shown above.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Simultaneous Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When the A Operand is SIM, the TRANSFER Block operates in
&quot;Simultaneous Mode&quot;. In Simultaneous Mode, the Active Transaction
jumps to one of two locations depending on the Delay Indicator of the
Transaction. If the Delay Indicator is set, the Transaction jumps to the
location specified by the C Operand and the Delay Indicator is reset (turned
off). If the Delay Indicator is reset (off), the Transaction jumps to the
location specified by the B Operand.</p>
<p ALIGN="left">The Delay Indicator of a Transaction is set when the
Transaction is refused by a Block. The Delay Indicator remains set until the
Transaction enters a Simultaneous Mode TRANSFER Block.</p>
<b>
<p ALIGN="CENTER">TRANSFER SIM,Nodelay_Place,Delay_Place</p>
</b>
<p ALIGN="left">When a Transaction enters this TRANSFER Block, it is
immediately scheduled for the Block at location DELAY_PLACE if its Delay
Indicator is set, or NODELAY_PLACE if it is reset. After the transfer, the Delay
Indicator is always reset.</p>
<p ALIGN="left">&nbsp;</p>
<p ALIGN="left">TRANSFER SIM is rarely used. It is much more efficient to us
a BOOLEAN VARIABLE in a Refuse Mode TEST Block when you wish to coordinate the
state of a number of entities. TRANSFER SIM was originally developed before
BOOLEAN VARIABLES had been added to the GPSS language.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In All Mode,
Operand C must be greater than Operand B., and if D is used (C-B) must be an
even multiple of D.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;All calculated
Transaction destinations must be valid Block locations.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;In Both Mode or
All Mode it is possible to waste a lot of computer time on unsuccessful testing.
You may want to place Transactions on a User Chain until the test is likely to
be successful. This can be done by using LINK and UNLINK Blocks.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry by a TRANSFER Block. If
a Transaction becomes blocked by refusal of destination Blocks, it remains in
the TRANSFER Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Blocks Window -
Online view of Block dynamics.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="UNLINK">UNLINK</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An UNLINK Block removes Transactions from the User Chain of a Userchain
Entity.</p>
	<p ALIGN="CENTER">UNLINK O A,B,C,D,E,F</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">O</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Relational
  operator. Relationship of D to E for removal to occur. These choices are
  explained below. Optional. The operator must be <i>Null</i>, E, G, GE, L, LE
  or NE.</p>
  <b>
  <p ALIGN="left">A</b>&nbsp;-&nbsp;User Chain number. User Chain from which
  one or more Transactions will be removed. Required. The operand must be <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Block number. The destination Block for
  removed Transactions. Required. The operand must be <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Removal limit. The maximum number of
  Transactions to be removed. If not specified, ALL is used. Optional. The
  operand must be ALL, <i>Null</i>, <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression,
  SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Test value. The member Transaction
  Parameter name or number to be tested, a Boolean variable to be tested, or
  BACK to remove from the tail of the chain. Optional. The operand must be <i>Null</i>,
  <i>Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, <i>SNA*Parameter</i>
  or BACK.</p>
  <b>
  <p ALIGN="left">E</b>&nbsp;-&nbsp;Reference value. The value against which
  the D Operand is compared. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>Number</i>, <i>String</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.
  Operand E is not used if Operand D is a Boolean Variable.</p>
  <b>
  <p ALIGN="left">F</b>&nbsp;-&nbsp;Block number. The alternate destination
  for the entering Transaction. Optional. The operand must be <i>Null</i>, <i>Name</i>,
  <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">UNLINK OnHold,Reentry,1</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the simplest way to use the UNLINK Block. The first
Transaction at the head of the Userchain Entity named OnHold, if any, is taken
off the chain and is directed to the Block labeled Reentry. It is put on the CEC
behind Transactions of the same priority. The Transaction entering the UNLINK
Block proceeds to the Next Sequential Block.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">An UNLINK Block removes Transactions from a User Chain and
directs them to a new Block. Transactions can be selected for removal, and a
limit can be imposed on the number of Transactions removed. If there are no
Transactions on the chain when the UNLINK Block is entered, the Link Indicator
of the User Chain is reset. Also, the Transaction entering the UNLINK Block may
be redirected according to the optional F Operand.</p>
<p ALIGN="left">You may limit the number of Transactions to be removed from
the User Chain by specifying the C Operand. If Operand C is omitted, ALL is
assumed.</p>
<p ALIGN="left">You may test each Transaction for removal by using the
relational operator and/or operands D and E, both of which are evaluated
numerically.</p>
<p ALIGN="left">Operands D and E and the conditional operator are optional.
When they are omitted, all Transactions are removed from the front of the chain,
until the chain is exhausted or the limit count (Operand C) is reached.</p>
<p ALIGN="left">You can use one of 3 options for Operand D. Operand D can be
a Boolean variable, a Parameter number, or the word BACK. If Operand D is a
Boolean variable, it is evaluated with respect to the chained Transaction, and
if the result is nonzero, the chained Transaction is removed. If Operand D is
BACK, Transactions are removed from the rear of the User Chain until the limit
count is reached. Otherwise, the operand is evaluated with respect to the User
Chain member Transaction and used as a Parameter number, whose value is returned
from the User Chain member as the final result. This final value is compared to
the result of evaluating Operand E.</p>
<p ALIGN="left">If D specifies a Parameter and E is not used, a Parameter of
the User Chain Transaction is compared to the same Parameter of the Active
Transaction. If they are equal, the chained Transaction is removed from the
chain.</p>
<p ALIGN="left">Operand E is used if and only if the relational operator is
used. In this case, Operand D is required as well. The User Chain is scanned
from the front. Each Transaction, up to the limit count (Operand C), is removed
if Operand D bears the same relationship to Operand E as is specified by the
relational operator. If Operand E is a Transaction related SNA, it is evaluated
with respect to the Active Transaction.</p>
<p ALIGN="left">You may use the relational operator to specify the
relationship between the Transaction attribute (Operand D) and the reference
value (Operand E) which will initiate a removal of the Transaction. The default
for the relational operator is E for equality. If you use no relational
operator, but you use Operand D and Operand E, the values must be equal for the
Transaction to be removed from the chain.</p>
<p ALIGN="left">The F Operand is used to specify an alternate destination to
be taken by the entering Transaction when the limit count (Operand C) cannot be
reached, or when no Transactions can be removed from the User Chain. If the F
Operand is not used, the entering Transaction always goes to the Next Sequential
Block.</p>
<p ALIGN="left">Userchain Entities have a self-contained gate called a Link
Indicator. When it is off (reset), LINK Blocks which have a C Operand will not
place an entering Transaction on the User Chain. The &quot;gate&quot; to the
User Chain is &quot;closed&quot; when the Link Indicator is off (reset).</p>
<p ALIGN="left">The Link Indicator is manipulated by both LINK and UNLINK
Blocks. It is turned off when an UNLINK Block finds the User Chain empty. This
condition may represent a case where the next Transaction to arrive should not
wait (on the User Chain).</p>
<p ALIGN="left">The Link Indicator represents the busy condition of a
hypothetical resource. You can use LINK and UNLINK Blocks to handle the queuing
on such a resource. A further discussion of the Link Indicator may be found in
the description of LINK Blocks in this chapter.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Relational Operators</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">The relational operator may be E, G, GE, L, LE, or NE. If no
relational operator is used, E (equality) is assumed. When the relationship is
true and the limit condition has not been reached, the Transaction being tested
is removed from the User Chain. The relationships are defined as follows:</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;E&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be equal to the reference
value specified by Operand E for the Transaction to be removed from the chain.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;G&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be greater than the reference
value specified by Operand E for the Transaction to be removed from the chain.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;GE&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be greater than or equal to
the reference value specified by Operand E for the Transaction to be removed
from the chain.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;L&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be less than the reference
value specified by Operand E for the Transaction to be removed from the chain.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;LE&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be less than or equal to the
reference value specified by Operand E for the Transaction to be removed from
the chain.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;NE&nbsp;-&nbsp;The
Transaction attribute specified by Operand D must be unequal to the reference
value specified by Operand E for the Transaction to be removed from the chain.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Special Restrictions</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;A, B, C, and F, if
specified, must be positive.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;B and F, if
specified, must be Block locations in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand D is
used but is neither a BV class SNA or BACK, then you must use Operand E.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If Operand D is
BACK or a Boolean variable, then you must use neither Operand E or a relational
operator.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If you use a
relational operator, you must use operands D and E. D must be used, but must not
be a Boolean variable.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;If you use Operand
E you must use Operand D.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Operand D cannot
be the literal constant 0.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an UNLINK Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related SNAs</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CA<i>Entnum</i>&nbsp;-&nbsp;Average
Userchain content. The time weighted average number of chained Transactions for
Userchain <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CC<i>Entnum</i>&nbsp;-&nbsp;Total
Userchain entries. The count of all Transactions chained to Userchain <i>Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CH<i>Entnum</i>
&nbsp;-&nbsp;Current Userchain content. The current number of Transactions
chained to Userchain<i> Entnum</i>.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CM<i>Entnum</i>&nbsp;-&nbsp;Maximum
Userchain content. The maximum number of Transactions chained to Userchain <i>Entnum</i>.
The &quot;high water mark&quot;.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CT<i>Entnum</i>&nbsp;-&nbsp;Average
Userchain residence time. The average duration of Transactions at Userchain <i>Entnum</i>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Window</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Userchains
Snapshot - Picture of the state of the Userchains in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="UNTRACE">UNTRACE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">An UNTRACE Block turns off the Trace Indicator of the Active Transaction.</p>
	<p ALIGN="CENTER">UNTRACE</p>
    <p align="left">Operands</p>
  </font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">None</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">UNTRACE</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, all Transactions passing through an UNTRACE
Block will have their Trace Indicators unset. These Transactions will no longer
produce trace messages as they move from Block to Block.</p>
<p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a UNTRACE Block its Trace Indicator
is turned off. Thereafter, no Block entry traces will be recorded on behalf of
the Transaction unless it enters a TRACE Block.</p>
<p ALIGN="left">Trace messages are sent to all open Journal Windows.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to an UNTRACE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Windows</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Journal Window -
Record session events.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;Transaction
Snapshot - Picture of the state of a Transaction in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CEC Snapshot -
Picture of the state of the Current Events Chain in the simulation.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;FEC Snapshot -
Picture of the state of the Future Events Chain in the simulation.</p>
</font><b><font FACE="Arial" SIZE="5">
<p align="left">&nbsp;</p>
</blockquote>
</font><font FACE="Arial" SIZE="4">
<h1 align="left"><!--mstheme--><font color="#336666"><a name="WRITE">WRITE</a> <!--mstheme--></font></h1>
</blockquote>
</blockquote>
<blockquote>
  <blockquote>
    <p align="left">A WRITE Block passes a text line to a Data Stream.</p>
	<p ALIGN="CENTER">WRITE A,B,C,D</p>
    <p align="left">Operands</p>
  </font><font FACE="Arial" SIZE="2">
  <p ALIGN="left">A</font></b><font FACE="Arial" SIZE="2">&nbsp;-&nbsp;Text
  Line. Required. Evaluated as a string. The operand must be <i>Name</i>, <i>Number</i>,
  <i>String</i>, <i>ParenthesizedExpression, SNA</i> or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">B</b>&nbsp;-&nbsp;Data Stream number. Optional. The operand
  must be <i>Null, Name</i>, <i>PosInteger</i>, <i>ParenthesizedExpression, SNA</i>
  or <i>SNA*Parameter</i>. Default is 1.</p>
  <b>
  <p ALIGN="left">C</b>&nbsp;-&nbsp;Alternate Destination Block name or
  number. Optional. The operand must be <i>Null</i>, <i>Name</i>, <i>PosInteger</i>,
  <i>ParenthesizedExpression, SNA</i>, or <i>SNA*Parameter</i>.</p>
  <b>
  <p ALIGN="left">D</b>&nbsp;-&nbsp;Insert Mode. Optional. The operand must
  be <i>Null</i>, ON or OFF. The default is ON.</p>
  <p ALIGN="left">&nbsp;</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Example</p>
</font><font FACE="Arial" SIZE="2">
<p ALIGN="CENTER">WRITE &quot;New Line 20&quot;,1,Done</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">In this example, the WRITE Block send a text line to Data
Stream number 1. If an error occurs, the Active Transaction proceeds to the
Block labeled Done. Otherwise it moves to the Next Sequential Block. In this
case, if the Data Stream is an I/O Stream or an In-Memory Stream, the WRITE is
processed in Insert Mode.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Action</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">When a Transaction enters a WRITE Block, Operand A is
evaluated as a string. Numeric values are converted to an ASCII string
equivalent. Then the identity of the Data Stream is determined from Operand B.</p>
<p ALIGN="left">If Operand B is used, it is evaluated numerically, truncated,
and used as the Data Stream Entity number. This must be a positive integer. If
Operand B is not used, Data Stream number 1 is assumed.</p>
<p ALIGN="left">If Operand C is used, any error occurring during the WRITE
causes the Active Transaction to proceed to the Block with that number.</p>
<p ALIGN="left">Operand D sets the write mode, as discussed below.</p>
<p ALIGN="left">In any case, if an error is detected, the error code is
stored internally. A CLOSE Block can be used to retrieve the error. Chapter 4
(4.16) contains a full discussion of Data Streams, including the error code
descriptions.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Write Modes</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A WRITE to a Data Stream is operated in either <i>Insert Mode</i>
or <i>Replace Mode</i>. The Current Line Position is used slightly differently
in these two modes. The write mode is set by Operand D. If it is not used, or is
ON, the WRITE is processed in Insert Mode. If it is OFF, the WRITE is processed
in Replace Mode.</p>
<blockquote>
</font><b><font FACE="Arial">
<p align="left">Insert Mode</p>
</blockquote>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">This is the default mode for WRITE Blocks.</p>
</font><font FACE="Arial">
<p ALIGN="left">Action:</p>
</font><font FACE="Arial" SIZE="2">
<p align="left">1. Move all text lines at, or after, the Current Line Position down one
position.</p>
<p align="left">2. If the Current Line Position is after the last text line, set it to just
after the last text line in the Data Stream.</p>
<p align="left">3. Place a copy of the new text line at the Current Line Position.</p>
<p align="left">4. Increment the Current Line Position.</p>
<blockquote>
</font><b><font FACE="Arial">
<p align="left">Replace Mode</p>
</blockquote>
</font></b><font FACE="Arial">
<p ALIGN="left">Action:</p>
</font><font FACE="Arial" SIZE="2">
<p align="left">1. If the Current Line Position is after the last text line, fill any
intervening line positions with null text lines.</p>
<p align="left">2. Delete any text line at the Current Line Position.</p>
<p align="left">3. Place a copy of the new text line at the Current Line Position.</p>
<p align="left">4. Increment the Current Line Position.</p>
<blockquote>
</font><b><font FACE="Arial">
<p align="left">Further Discussion</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">Chapter 4 (4.16) contains a full discussion of Data Streams
under the Section entitled, <u>Data Streams</u>.</p>
</blockquote>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Refuse Mode</p>
</font></b><font FACE="Arial" SIZE="2">
<p ALIGN="left">A Transaction is never refused entry to a WRITE Block.</p>
</font><b><font FACE="Arial" SIZE="4">
<p align="left">Related Blocks</p>
<blockquote>
</font></b><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;OPEN&nbsp;-&nbsp;Create
a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;CLOSE&nbsp;-&nbsp;Shut
down a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;READ&nbsp;-&nbsp;Retrieve
a text line from a Data Stream.</p>
</font><font FACE="Symbol" SIZE="2">
<p ALIGN="left">·</font><font FACE="Arial" SIZE="2">&nbsp;SEEK&nbsp;-&nbsp;Set
the Current Line Position of a Data Stream.
</font></p>
<p ALIGN="left">&nbsp;</p>
<p ALIGN="center">
  <font FACE="Arial" SIZE="2"> &nbsp;
  <a href="reference_manual.htm">[Table of Contents]</a>
</font>
</p>
</blockquote>
</blockquote>
</blockquote>

<!--mstheme--></font></body>

</html>
