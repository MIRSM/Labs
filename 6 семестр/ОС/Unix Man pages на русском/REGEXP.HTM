<html>
<head>
<title>REGEXP(5)</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/header0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="_pic_/logo.gif" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>

<h3 align=center>REGEXP(5)</h3>
<p><b>НАЗВАНИЕ</b><br>
regexp - функции для компиляции и  сопоставления  регу        лярных выражений
<p><b>СИНТАКСИС</b>
<pre>
        #define INIT      описания
        #define GETC( )   реализация_GETC
        #define PEEKC( )  реализация_PEEKC
        #define UNGETC(c) реализация_UNGETC
        #define RETURN(p) реализация_RETURN
        #define ERROR(v)  реализация_ERROR

        #include &lt;regexp.h&gt;

        char *compile (instring, expbuf, endbuf, eof)
        char *instring, *expbuf, *endbuf;
        int eof;

        int step (string, expbuf)
        char *string, *expbuf;

        extern char *loc1, *loc2, *locs;

        extern int circf, sed, nbra;
</pre>
<p align=justify><b>ОПИСАНИЕ</b><br>
В данной статье описываются универсальные  функции  сопоставления регулярных выражений в форме <a href=ED.htm>ed(1)</a>, определенные во включаемом файле  &lt;regexp.h&gt;.  Этот  исходный
файл  используется  такими  программами,   как   <a href=ED.htm>ed(1)</a>,
<a href=SED.htm>sed(1)</a>, <a href=GREP.htm>grep(1)</a>, <a href=BS.htm>bs(1)</a> и <a href=EXPR.htm>expr(1)</a>, которые выполняют сопоставление регулярных выражений. Тем самым обеспечивается согласованная трактовка регулярных выражений.
<p align=justify>
У этого файла неприятный интерфейс. Программы,  которые
включают  данный  файл,   перед   оператором   #include
&lt;regexp.h&gt; должны содержать определение пяти  макросов,
перечисленных  ниже.  Макросы   используются   функцией
compile.
<dl>
<dt>GETC( )
<dd>Возвращает значение  следующего  символа  в
регулярном  выражении. Последовательные вызовы GETC будут возвращать последовательные
символы регулярного выражения.
<dt>PEEKC( )
<dd>Возвращает следующий  символ  в  регулярном
выражении.  Последовательные  вызовы  PEEKC
возвращают один и  тот  же  символ  (данный
символ  будет возвращен и при следующем вызове GETC).
<dt>UNGETC(c)
<dd>Обеспечивает, чтобы символ c был выдан  при
следующем вызове GETC (и PEEKC). Оговаривается,  что не делается попыток вернуть подряд более одного символа, и этот символ является последним, прочитанным GETC.  Значение макроса UNGETC игнорируется.
<dt>RETURN(p)
<dd>Данный макрос используется  при  нормальном
завершении функции compile. Значение  аргумента p - указатель на символ, следующий за
последним символом скомпилированного  регулярного выражения. Это  полезно  для  программ, которые должны заниматься распределением памяти.
<dt>ERROR(v)
<dd>Аварийное завершение функции compile. Аргумент v - это код ошибки. Возврата из данного макроса быть не должно. Коды ошибок:
<table>
<tr><th>Код<th>Толкование</tr>
<tr><td>11<td>Верхняя граница диапазона слишком велика.</tr>
<tr><td>16<td>Некорректное число.</tr>
<tr><td>25<td>"\цифра" вне диапазона.</tr>
<tr><td>36<td>Некорректный или отсутствующий разделитель.</tr>
<tr><td>41<td>Нет запомненной цепочки символов для поиска.</tr>
<tr><td>42<td>Не сбалансированы скобки \( и \).</tr>
<tr><td>43<td>Слишком много открывающих скобок \(.</tr>
<tr><td>44<td>В скобках \{ \} указано больше двух чисел.</tr>
<tr><td>45<td>Фигурная скобка } ожидалась после \.</tr>
<tr><td>46<td>В скобках \{ \} первое число больше второго.</tr>
<tr><td>49<td>Не сбалансированы скобки [ и ].</tr>
<tr><td>50<td>Переполнение регулярного выражения.</tr>
</table>
</dl>
Обращение к функции compile выглядит так:
<pre>
 compile (instring, expbuf, endbuf, eof)
</pre><p align=justify>
Первый аргумент instring никогда не используется  функцией compile явно, но бывает удобен для программ, которые передают различные указатели  на  входные  символы.
Иногда он используется в  описаниях  INIT  (см.  ниже).
Программы, которые получают символы посредством вызовов
функций или хранят их во внешнем массиве, могут передавать в качестве этого аргумента значение ((char *) 0).
<p align=justify>
Аргумент expbuf - указатель на  символ.  Он  определяет
позицию, начиная с которой должно быть размещено  скомпилированное регулярное выражение.
<p align=justify>
Аргумент endbuf на единицу превосходит максимальную позицию, в которой может быть размещено регулярное  выражение. Если скомпилированное выражение не  умещается  в
(endbuf-expbuf) байт, выполняется вызов ERROR (50).
<p align=justify>
Аргумент eof - это символ, который отмечает конец регулярного выражения.  Например,  в  <a href=ED.htm>ed(1)</a>  этим  символом
обычно является /.
<p align=justify>
В каждой программе, которая включает  файл  &lt;regexp.h&gt;,
должен быть оператор #define для имени INIT. Заданные в
нем  описания  будут  размещены  в самом начале функции
compile. Чаще всего макрос INIT служит для того,  чтобы
установить регистровую переменную на начало регулярного
выражения  с  целью  последующего использования в GETC,
PEEKC и UNGETC. Кроме того, в INIT можно описать  внешние  переменные,  используемые  макросами GETC, PEEKC и
UNGETC. См. ниже пример описаний, взятый из <a href=GREP.htm>grep(1)</a>.
<p align=justify>
В файле &lt;regexp.h&gt; есть и другие функции, которые  фактически выполняют сопоставление  регулярных  выражений;
одна из них - функция step. Обращение  к  ней  выглядит
так:
<pre>
 step (string, expbuf)
</pre><p align=justify>
Первый аргумент функции step  -  указатель  на  цепочку
символов, для которой надо проверить возможность сопоставления. Эта цепочка должна  быть  ограничена  нулевым
байтом.
<p align=justify>
Второй аргумент, expbuf, - скомпилированное  регулярное
выражение, полученное при помощи функции compile.
<p align=justify>
Функция step возвращает ненулевое значение, если данная
цепочка сопоставляется с регулярным выражением, и  0  в
противном случае. Если сопоставление имеет  место,  побочный эффект функции step заключается в установке двух
внешних указателей.  Переменная  loc1,  устанавливаемая
функцией step, является указателем на первый  сопоставленный символ. Переменная loc2, которая устанавливается
функцией advance, указывает  на  символ,  следующий  за
последним сопоставленным символом. Таким образом,  если
с регулярным выражением сопоставилась вся  цепочка,  то
loc1 будет указывать на первый символ  string,  а  loc2
- на нулевой байт в конце string.
<p align=justify>
Функция  step  использует  внешнюю  переменную   circf.
Compile присваивает этой переменной ненулевое значение,
если регулярное выражение начинается с ^; в таком  случае step будет пытаться выполнять сопоставление  только
с начала цепочки символов. Если до первой  попытки  сопоставления откомпилировано  более  одного  регулярного
выражения, следует сохранить для каждого скомпилированного выражения значение circf и восстанавливать  значение этой переменной перед каждым вызовом step.
<p align=justify>
Функция advance вызывается из step с теми же аргументами, что и step. Задача функции step - передвигать  указатель string на символ вперед и вызывать advance; step
выполняется до тех пор, пока либо advance не  возвратит
ненулевое значение, что обозначает сопоставление,  либо
не будет достигнут конец string.  Если  хотят  в  любом
случае ограничиться  сопоставлением  с  начала  цепочки
string, step не вызывают, а просто используют advance.
<p align=justify>
Если функция advance встречает в регулярном выражении *
или последовательность \{ \}, она, выполняя сопоставление, продвигает указатель на цепочку символов, насколько это возможно, и рекурсивно вызывает сама себя, пытаясь сопоставить остаток цепочки с остатком  регулярного
выражения. Если при этом сопоставление  не  выполнится,
advance будет возвращаться вдоль цепочки, пока не обнаружит сопоставления либо не вернется к позиции в цепочке символов, с которой первоначально было  сопоставлено
* или \{ \}. Иногда желательно остановить этот  возврат
назад до того, как будет достигнуто начало цепочки. Если locs - внешний указатель на символ - в некоторый момент процесса возврата станет равен позиции  в  цепочке
символов, advance прервет цикл возврата и завершится  с
результатом 0. Эта возможность используется программами
<a href=ED.htm>ed(1)</a> и <a href=SED.htm>sed(1)</a> при  выполнении  глобальной  подстановки
(то есть не для первого вхождения, а для всей цепочки);
например, при обработке выражений типа /y*//g  не  возникнет бесконечного цикла.
<p align=justify><b>ПРИМЕР</b><br>
Следующий пример показывает, как выглядят предназначенные для работы  с  регулярными  выражениями  макросы  и
функции, которые используются в <a href=GREP.htm>grep(1)</a>:
<pre>
#define INIT      register char *sp = instring;
#define GETC()    (*sp++)
#define PEEKC()   (*sp)
#define UNGETC(c) (--sp)
#define RETURN(c) return;
#define ERROR(c)  regerr()

#include &lt;regexp.h&gt;
 ...
(void) compile (*argv, expbuf, &expbuf[ESIZE], '\0');
 ...
if (step(linebuf, expbuf))
 succeed();
</pre>
<p><b>СМ. ТАКЖЕ</b><br>
<a href=ED.htm>ed(1)</a>, <a href=EXPR.htm>expr(1)</a>, <a href=GREP.htm>grep(1)</a>, <a href=SED.htm>sed(1)</a> в Справочнике пользователя.
<dl>
<dt>R_PCRWORD
<dd>Двухбайтное смещение относительно  счетчика команд.
<dt>R_PCRLONG
<dd>Четырехбайтное  смещение относительно счетчика команд.
</dl><p align=justify>
Существуют другие типы  ссылок  для  иных  процессоров.
Одинаковые типы ссылок на разных процессорах имеют одинаковые  номера и смысл. Если возникнет необходимость в
новых типах ссылок, то можно будет их добавить с новыми
номерами.
<p align=justify>
Элементы, содержащие информацию о настройке,  создаются
ассемблером  и используются редактором связей автоматически. Опции редактора связей позволяют как  сохранять,
так и удалять эту информацию из выходных файлов.
<p><b>СМ. ТАКЖЕ</b><br>
a.out(4), <a href=SYMS.htm>syms(4)</a>.<br>
<a href=AS.htm>as(1)</a>, <a href=LD.htm>ld(1)</a> в Справочнике пользователя.
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/footer0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
