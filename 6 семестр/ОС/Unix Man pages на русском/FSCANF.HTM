<html>
<head>
<title>SCANF(3S)</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/header0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="_pic_/logo.gif" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>

<h3 align=center>SCANF(3S)</h3>
<p align=justify><b>НАЗВАНИЕ</b><br>
scanf, fscanf, sscanf - ввод с преобразованием по  формату
<p><b>СИНТАКСИС</b>
<pre>
	include &lt;stdio.h>
	
	nt scanf (format [, pointer] ...)
	har *format;
	
	nt fscanf (stream, format [, pointer] ...)
	ILE *stream;
	har *format;
	
	nt sscanf (s, format [, pointer] ...)
	har *s, *format;
</pre>
<p align=justify><b>ОПИСАНИЕ</b><br>
Функция scanf читает данные из стандартного потока ввода stdin. Функция fscanf читает данные из потока ввода,
заданного  аргументом stream. Функция sscanf читает цепочку символов с адресом  s.  Каждая  из  перечисленных
функций  вводит символы, интерпретирует их в соответствии с форматом и записывает по указанным адресам. Аргументами функций являются: format - формат,  управляющий
преобразованием,  и pointers - указатели на области памяти, куда следует помещать результаты  преобразований.
Если  для  заданного формата не хватает указателей, результат непредсказуем; если же указателей слишком  много, лишние просто игнорируются.
<p align=justify>Формат  обычно  содержит  спецификаторы преобразований,
которые задают способ интерпретации вводимых данных.  В
формате могут содержаться:
<ol>
<li> Пробельные  символы (собственно пробел, табуляция,
перевод строки, переход к новой странице), которые
(за исключением двух описанных ниже случаев) вызывают чтение до следующего непробельного символа.
<li> Обычный символ (не %), который должен совпадать со
следующим символом потока ввода.
<li> Спецификаторы преобразований, состоящие из символа
%, необязательного символа подавления присваивания
*,  необязательного  числа, задающего максимальную
ширину поля в потоке ввода, необязательного символа l или h, указывающего размер переменной,  получающей значение, а также кода преобразования.
</ol>
<p align=justify>Спецификатор  задает  способ  преобразования   текущего
входного  поля;  результат присваивается переменной, на
которую указывает соответствующий аргумент pointer, если не задано подавление присваивания. Подавление  присваивания  позволяет пропускать в потоке ввода отдельные
поля. Поле в потоке ввода определяется  как  последовательность символов, не содержащая пробелов, которая либо  ограничивается  "неуместным"  (в  данном контексте)
символом, либо определяется шириной, если  она  задана.
Для  всех преобразований, кроме [ и c, пробелы в начале
поля игнорируются.
<p align=justify>Код  преобразования  определяет  способ   интерпретации
входного  поля; соответствующий аргумент-указатель, как
правило, должен иметь соответствующий тип. Для  пропускаемых полей указатель не задается. Распознаются следующие коды преобразований:
<table>
<tr valign=top><th>%  <td>  Из потока ввода должен быть прочитан  единственный
символ %; никаких присваиваний не выполняется.
<tr valign=top><th>d  <td>  Из потока ввода должно быть прочитано целое  десятичное число; соответствующий аргумент должен быть
указателем на целое.
<tr valign=top><th>u  <td>  Из  потока ввода должно быть прочитано целое десятичное без знака; соответствующий аргумент  должен
быть указателем на целое без знака.
<tr valign=top><th>o  <td>  Из  потока ввода должно быть прочитано целое восьмеричное число;  соответствующий  аргумент  должен
быть указателем на целое.
<tr valign=top><th>x  <td>  Из  потока ввода должно быть прочитано целое шестнадцатеричное число; соответствующий аргумент должен быть указателем на целое.
<tr valign=top><th>i  <td>  Из потока ввода должно быть прочитано целое число;
соответствующий аргумент должен быть указателем на
целое. Значение числа вычисляется в соответствии с
соглашениями языка C: префикс 0 обозначает восьмеричное  число, префикс 0x - шестнадцатеричное, отсутствие префикса - десятичное.
<tr valign=top><th>n  <td>  Общее количество  символов  (включая  пробельные),
прочитанных с начала выполнения функции, запоминается  в очередной переменной из списка аргументов.
Из потока ввода ничего не читается.
<tr valign=top><th>e, f, g <td>
Из потока ввода должно быть прочитано число с плавающей точкой; оно представляет  собой  последовательность  цифр  с необязательным знаком, необязательной десятичной точкой и необязательным  порядком; порядок обозначается буквой e или E, за которой может следовать +, - или пробел, а затем - целое  число.  Соответствующий  аргумент должен быть
указателем на переменную типа float.
<tr valign=top><th>s  <td>  Из потока ввода должна быть прочитана цепочка символов; соответствующий аргумент должен быть указателем на символьный массив достаточной длины, чтобы в нем поместились вводимые данные с завершающим
пустым  символом \0, который добавляется автоматически. Признак конца входного  поля  -  пробельный
символ.
<tr valign=top><th>c  <td>  Из  потока ввода должен быть прочитан единственный
символ; соответствующий аргумент должен быть  указателем на символ. Обычный пропуск пробельных символов  в  этом  случае не производится; для чтения
ближайшего непробельного символа нужно задать спецификатор %1s. Если задана ширина поля,  то  соответствующий  аргумент должен указывать на символьный массив; в этом случае вводится заданное  количество символов.
<tr valign=top><th>[  <td>  Входные  данные  обрабатываются особым образом. За
открывающей  скобкой следует ряд символов, которые
называются шаблоном сканирования, а затем закрывающая скобка; входное поле представляет собой  максимальный участок потока ввода, состоящий исключительно  из  символов шаблона. Если первым символом
шаблона является ^, это означает, что входное поле
представляет  собой  максимальный  участок  потока
ввода,  содержащий любые символы кроме перечисленных в шаблоне. Шаблон сканирования записывается по
определенным правилам.  Несколько  символов  можно
задать  конструкцией первый-последний; таким образом, ряд [0123456789] можно изобразить как  [0-9].
При использовании этого правила первый должен быть
лексикографически  меньше  или  равен  последнему,
иначе минус  рассматривается  как  обычный  символ
шаблона. Минус рассматривается как обычный символ,
если он находится на первом или на последнем месте
в  шаблоне. Если в шаблон нужно включить закрывающую скобку, то она должна быть самым первым символом шаблона (возможно, с предшествующим ^), в противном случае она рассматривается как ограничитель
шаблона. Соответствующий этому спецификатору аргумент должен быть указателем на  символьный  массив
достаточной  длины,  способный  вместить  читаемые
данные вместе с ограничителем \0, добавляемым  автоматически.  Это  преобразование считается завершившимся успешно, если из потока ввода выбран хотя
бы один символ, соответствующий шаблону.
</table>
<p align=justify>Кодам преобразований d, u, o, x, i может предшествовать
символ l или h, означающий, что  соответствующий  аргумент  указывает на переменную типа long или short, а не
int. Аналогично, кодам e,  f,  g  может  предшествовать
символ l, означающий, что соответствующий аргумент указывает  на  переменную типа double, а не float. Для остальных кодов преобразований модификаторы l и h игнорируются.
<p align=justify>Функция scanf завершается по концу файла, при  исчерпании формата или при обнаружении в потоке ввода символа,
противоречащего  формату. В последнем случае символ-нарушитель остается непрочитанным в потоке ввода.
<p align=justify>Функция scanf возвращает число успешно введенных и преобразованных величин; это число может оказаться  нулем,
если  слишком рано обнаружилось несоответствие с форматом. Если ввод закончился без конфликтов и преобразований, результат равен EOF.
<p><b>ПРИМЕРЫ </b><br>
<ol>
<li> В результате вызова
<pre>
	nt  n;  float x;  char name[50];
	 = scanf("%d%f%s", &i, &x, name);
</pre>
при наличии во входном потоке символов
<pre>
	5 54.32E-1 Bill
</pre>
<p align=justify>будет присвоено: переменной n - значение 3,  переменной
i  -  значение  25,  переменной x - значение 5.432, а в
массив name будет занесено Bill\0.
<li> После вызова
<pre>
	nt  i,j;  float x;  char name[50];
	void)scanf("%i%2d%f%*d %[0-9]", &j, &i, &x,name);
</pre>
при наличии во входном потоке символов
<pre>
	11 56789 0123 56a72
</pre>
<p align=justify>будет присвоено: переменной j - значение 9,  переменной
i - значение 56, переменной x - значение 789., последовательность 0123 будет пропущена, а в массив name будет
занесено 56\0. Если после этого вызова последует  вызов
getchar [см. <a href=GETC.htm>getc(3S)</a>], то будет прочитан символ a.
<li> В результате вызова
<pre>
	nt i, j, s, e;  char name[50];
	void)scanf("%i %i %n%s%n", &i, &j, &s, name, &e);
</pre>
при наличии во входном потоке
<pre>
	x11 0xy johnson
</pre>
<p align=justify>будет присвоено: переменной i - значение 17, переменной
j - значение 0, переменной s -  значение  6,  в  массив
name будет занесено xy\0, а переменной e присвоено значение 8. Таким образом, длина заполненной части массива
name  равна  e  -  s  = 2. При следующим за этим вызове
getchar [см. <a href=GETC.htm>getc(3S)</a>] будет прочитан пробел.
</ol>
<p><b>СМ. ТАКЖЕ</b><br>
<a href=GETC.htm>getc(3S)</a>,     <a href=PRINTF.htm>printf(3S)</a>,     <a href=STDIO.htm>stdio(3S)</a>,    <a href=STRTOD.htm>strtod(3C)</a>,
<a href=STRTOL.htm>strtol(3C)</a>.
<p align=justify><b>ДИАГНОСТИКА</b><br>
Описанные функции возвращают значение EOF при  исчерпании  потока ввода, или число успешно введенных и преобразованных величин.
<p align=justify><b>СЮРПРИЗЫ</b><br>
Заключительные   пробельные  символы  (включая  перевод
строки) остаются в потоке  ввода  непрочитанными,  если
только они не были явно затребованы форматом.
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/footer0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
