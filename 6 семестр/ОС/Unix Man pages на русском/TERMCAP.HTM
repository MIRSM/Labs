<html>
<head>
<title>TERMCAP(7)</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/header0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="_pic_/logo.gif" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>

<h3 align=center>TERMCAP(7)</h3>
<p align=justify><b>НАЗВАНИЕ</b><br>
termcap - Возможности базы данных терминала.
<p align=justify><b>ОПИСАНИЕ</b><br>
Файл /etc/termcap  - терминалы,  описывающие базу данных.
Эта база данных используется  командами,   такими  как  <a href=VI.htm>vi(1)</a>,
<a href=VSH.htm>vsh(1)</a>, Lyrix,  и пакетами программ, curses(2). Терминалы описываются в  termcap  путем  сообщения множества возможностей и
описания выполняемых операций. Запросы заполнения и последовательности инициализации включены в termcap.
<p align=justify>
Входы в  termcap  состоят  из областей,  разделенных ':'.
Первый ввод для каждого терминала дает имена, знакомые терминлу, разделенные вертикальными черточками (:). Для совместимости со старыми системами первое имя всегда на 2 символа длинее.
Второе данное  имя имеет более общую аббривиатуру для терминала, и имя используется с помощью <a href=VI.htm>vi(1)</a>  и  <a href=EX.htm>ex(1)</a>.   Последнему
имени следует быть большим именем,  полностью идентифицирующим
терминал. Только последнее имя может содержать в себе  пробелы
для читабельности.
<p align=justify><b>Возможности (включающие расширения XENIX).</b><br>
Ниже  представлен  список  возможностей,  определяемых для
данного терминала. В этом списке, (Р)  указывает,  какое  может
быть определено наполнение, а (Р*) указывает,что наполнение может  быть  основано на числе задействованных строк. Вид возможности и поля наполнения подробно описаны  в  следующем  разделе
"Виды возможностей".
<p align=justify>
Коды, начинающиеся с прописных букв (за исключением  СС),
обозначают расширения  XENIX.   Они  включаются в дополнение к
стандартным кодам и используютя одной  или  более  программами
применений. Также как в случае стандартных входов,  не все режимы поддерживаются всеми применениями или терминалами.  Некоторые из  этих  входов  ссылаются  на особые выходные свойства
терминала (такое как GS для "графического  запуска").   Другие
описывают последовательности символов, посылаемых ключами, появляющимися на клавиатуре (например, PU для ключа PageUp). Существуют также  входы,  используемые для предания определенных
значений другим ключам (или сочетаниям ключей) для использования в частной программе матобеспечения.  Ряд возможностей расширения XENIX имеет аналогичную функцию со  стандартными  возможностями. Они используются для переопределения особых ключей
(например, использование функциональных  ключей,   как  ключей
стрелок). Возможности    расширения    включаются    в    файл
/etc/termcap по мере того, как их затребывают некоторые утилиты
XENIX (например <a href=VSH.htm>vsh(1)</a>).  Наиболее часто употребляемые возможности расширения более подробно описаны в разделе  "Расширения
XENIX".
<p>
<table>
<tr valign=top><th>Имя<th>Тип<th>Pad?<th>Описание</tr>
<tr valign=top><td>ae<td>str<td>(P)<td>Закончить альтернативный набор символов</tr>
<tr valign=top><td>al<td>str<td>(P*)<td>Добавить новую чистую строку</tr>
<tr valign=top><td>am<td>bool<td>&nbsp;<td>Терминал имеет автоматические поля</tr>
<tr valign=top><td>as<td>str<td>(P)<td>Начать альтернативный набор символов</tr>
<tr valign=top><td>bc<td>str<td>&nbsp;<td>Backspace, если не ^H</tr>
<tr valign=top><td>bs<td>bool<td>&nbsp;<td>Можно backspace c ^H</tr>
<tr valign=top><td>bt<td>str<td>(P)<td>Обратный табулятор</tr>
<tr valign=top><td>bw<td>bool<td>(P)<td>Переходы по backspace c позиции 0 на последнюю</tr>
<tr valign=top><td>CC<td>str<td>&nbsp;<td>Командный символ в прототипе, если</tr>
<tr valign=top><td>cd<td>str<td>(P*)<td>Очистить до конца терминала</tr>
<tr valign=top><td>ce<td>str<td>(P)<td>Очистить до конца строки</tr>
<tr valign=top><td>CF<td>str<td>&nbsp;<td>Курсор из</tr>
<tr valign=top><td>ch<td>str<td>(P)<td>Как cm, но только горизонтальное движение, строка остается такой же</tr>
<tr valign=top><td>CL<td>str<td>&nbsp;<td>Посылается с помощью ключа CHAR LEFT</tr>
<tr valign=top><td>cl<td>str<td>(P*)<td>Очистить экран</tr>
<tr valign=top><td>cm<td>str<td>(P)<td>Движение курсора</tr>
<tr valign=top><td>co<td>num<td>&nbsp;<td>Номер позиции строки</tr>
<tr valign=top><td>CO<td>str<td>&nbsp;<td>Курсор на</tr>
<tr valign=top><td>cr<td>str<td>(P*)<td>Вернуть каретку (по умолчанию ^M)</tr>
<tr valign=top><td>cs<td>str<td>(P)<td>Изменить область просматривания (vt100), как cm</tr>
<tr valign=top><td>cv<td>str<td>(P)<td>Как ch, но только по вертикали</tr>
<tr valign=top><td>CW<td>str<td>&nbsp;<td>Посылается с помощью клавиши CHANGE WINDOW</tr>
<tr valign=top><td>da<td>bool<td>&nbsp;<td>Дисплей может сохраняться выше</tr>
<tr valign=top><td>DA<td>bool<td>&nbsp;<td>Удалить атрибутивную строку</tr>
<tr valign=top><td>db<td>bool<td>&nbsp;<td>Дисплей может быть сохранен ниже</tr>
<tr valign=top><td>dB<td>num<td>&nbsp;<td>Необходимое количество миллисекунд bs задержки</tr>
<tr valign=top><td>dC<td>num<td>&nbsp;<td>Необходимое количество миллисекунд cr задержки</tr>
<tr valign=top><td>dc<td>str<td>(P*)<td>Удалить символ</tr>
<tr valign=top><td>dF<td>num<td>&nbsp;<td>Необходимое количество миллисекунд ff задержки</tr>
<tr valign=top><td>dl<td>str<td>(P*)<td>Удалить строку</tr>
<tr valign=top><td>dm<td>str<td>&nbsp;<td>Удалить режим (ввода)</tr>
<tr valign=top><td>dN<td>num<td>&nbsp;<td>Необходимое количество миллисекунд nl задержки</tr>
<tr valign=top><td>do<td>str<td>&nbsp;<td>Спуститься на одну строку</tr>
<tr valign=top><td>dT<td>num<td>&nbsp;<td>Необходимое количество миллисекунд tab задержки</tr>
<tr valign=top><td>ed<td>str<td>&nbsp;<td>Закончить режим удаления</tr>
<tr valign=top><td>ei<td>str<td>&nbsp;<td>Закончить режим вставки; дается ':ei=:', если ic</tr>
<tr valign=top><td>EN<td>str<td>&nbsp;<td>Посылается ключем END</tr>
<tr valign=top><td>eo<td>bool<td>&nbsp;<td>Можно удалить лишние удары, вместо них пробелы</tr>
<tr valign=top><td>ff<td>str<td>(P*)<td>Выброс документальной копии страницы терминала  (по умолчанию ^L)</tr>
<tr valign=top><td>G1<td>str<td>&nbsp;<td>Верхний правый (1ый квадрант) угловой символ</tr>
<tr valign=top><td>G2<td>str<td>&nbsp;<td>Верхний левый (2ой квадрант) угловой символ</tr>
<tr valign=top><td>G3<td>str<td>&nbsp;<td>Нижний левый (3ий квадрант) угловой символ</tr>
<tr valign=top><td>G4<td>str<td>&nbsp;<td>Нижний првый (4ый квадрант) угловой символ</tr>
<tr valign=top><td>GC<td>str<td>&nbsp;<td>Центрирует графический символ (аналогично +)</tr>
<tr valign=top><td>GD<td>str<td>&nbsp;<td>Символ нижнего кармана</tr>
<tr valign=top><td>GE<td>str<td>&nbsp;<td>Конец графического режима</tr>
<tr valign=top><td>GG<td>num<td>&nbsp;<td>Количество символов, забираемое GS и GE</tr>
<tr valign=top><td>GH<td>str<td>&nbsp;<td>Горизонтальный штриховой символ</tr>
<tr valign=top><td>GL<td>str<td>&nbsp;<td>Символ левого кармана</tr>
<tr valign=top><td>GR<td>str<td>&nbsp;<td>Символ правого кармана</tr>
<tr valign=top><td>GS<td>str<td>&nbsp;<td>Начало графического режима</tr>
<tr valign=top><td>GU<td>str<td>&nbsp;<td>Символ верхнего кармана</tr>
<tr valign=top><td>MP<td>str<td>&nbsp;<td>Многократная инициализация строки</tr>
<tr valign=top><td>MR<td>str<td>&nbsp;<td>Многократный сброс строки</tr>
<tr valign=top><td>GV<td>str<td>&nbsp;<td>Вертикальный штриховой символ</tr>
<tr valign=top><td>hc<td>bool<td>&nbsp;<td>Терминал документальных копий</tr>
<tr valign=top><td>hd<td>str<td>&nbsp;<td>На полстроки вниз (прогонка на 1/2 вперед)</tr>
<tr valign=top><td>HM<td>str<td>&nbsp;<td>Посылается клавишей HOME (если нет kh)</tr>
<tr valign=top><td>ho<td>str<td>&nbsp;<td>Курсор в начало (если нет cm)</tr>
<tr valign=top><td>hu<td>str<td>&nbsp;<td>Полстроки вверх (прогонка на 1/2 назад)</tr>
<tr valign=top><td>hz<td>str<td>&nbsp;<td>Hazeltine; не может печатать ~'</tr>
<tr valign=top><td>ic<td>str<td>(P)<td>Символ вставки</tr>
<tr valign=top><td>if<td>str<td>&nbsp;<td>Имя файла, содержащее is</tr>
<tr valign=top><td>im<td>str<td>&nbsp;<td>Режим вставки (вход); дается ':im=', если ic</tr>
<tr valign=top><td>in<td>bool<td>&nbsp;<td>Режим вставки различает нули на дисплее</tr>
<tr valign=top><td>ip<td>str<td>(P*)<td>Вспомогательный символ вставки после  вставленного символа</tr>
<tr valign=top><td>is<td>str<td>&nbsp;<td>Строка инициализации терминала</tr>
<tr valign=top><td>k0-k9<td>str<td>&nbsp;<td>Посылается другими функциональными клавишами 0-9</tr>
<tr valign=top><td>kb<td>str<td>&nbsp;<td>Посылается клавишей backspace</tr>
<tr valign=top><td>kd<td>str<td>&nbsp;<td>Посылается нижней клавишей управления курсором</tr>
<tr valign=top><td>ke<td>str<td>&nbsp;<td>Выход из режима 'keypad transmit'</tr>
<tr valign=top><td>kh<td>str<td>&nbsp;<td>Посылается клавишей HOME</tr>
<tr valign=top><td>kl<td>str<td>&nbsp;<td>Посылается левой клавишей управления курсором</tr>
<tr valign=top><td>kn<td>num<td>&nbsp;<td>Количество 'других' ключей</tr>
<tr valign=top><td>ko<td>str<td>&nbsp;<td>Вводы termcap для других нефункциональных клавиш</tr>
<tr valign=top><td>kr<td>str<td>&nbsp;<td>Посылается правой клавишей управления курсором</tr>
<tr valign=top><td>ks<td>str<td>&nbsp;<td>Установить терминал в режим 'keypad transmit'</tr>
<tr valign=top><td>ku<td>str<td>&nbsp;<td>Посылается верхней клавишей управления курсором</tr>
<tr valign=top><td>10-19<td>str<td>&nbsp;<td>Метки на 'других' функциональных клавишах</tr>
<tr valign=top><td>LD<td>str<td>&nbsp;<td>Посылается клавишей удаления строки</tr>
<tr valign=top><td>LF<td>str<td>&nbsp;<td>Посылается клавишей line feed</tr>
<tr valign=top><td>li<td>num<td>&nbsp;<td>Количество строк на экране или странице</tr>
<tr valign=top><td>ll<td>str<td>&nbsp;<td>Последняя строка, первая колонка (если не cm)</tr>
<tr valign=top><td>ma<td>str<td>&nbsp;<td>Отображение клавиши управления курсором, используемое vi только версией 2</tr>
<tr valign=top><td>mi<td>bool<td>&nbsp;<td>Безопасно для движения, пока в режиме вставки</tr>
<tr valign=top><td>ml<td>str<td>&nbsp;<td>Замок памяти на курсоре выше</tr>
<tr valign=top><td>MP<td>str<td>&nbsp;<td>Многократная инициализация строки</tr>
<tr valign=top><td>MR<td>str<td>&nbsp;<td>Многократный сброс строки</tr>
<tr valign=top><td>ms<td>bool<td>&nbsp;<td>По желанию переход в режим stand out</tr>
<tr valign=top><td>mu<td>str<td>&nbsp;<td>Нет замка памяти (закрыть замок памяти)</tr>
<tr valign=top><td>nc<td>bool<td>&nbsp;<td>Неправильно возвращение рабочей каретки (DM2500,H2000)</tr>
<tr valign=top><td>nd<td>str<td>&nbsp;<td>Неразрушенная область (курсор вправо)</tr>
<tr valign=top><td>nl<td>str<td>(P*)<td>Символ новой строки (по умолчанию \n)</tr>
<tr valign=top><td>ns<td>bool<td>&nbsp;<td>Терминал - CRT, но не прoсматривает</tr>
<tr valign=top><td>NU<td>str<td>&nbsp;<td>Посылается клавишей NEXT UNLOCKED CELL</tr>
<tr valign=top><td>os<td>bool<td>&nbsp;<td>Терминал набирает лишние удары (на клавиатуре)</tr>
<tr valign=top><td>pc<td>str<td>&nbsp;<td>Символ вспомогательной клавиатуры (лучше нуля)</tr>
<tr valign=top><td>PD<td>str<td>&nbsp;<td>Посылается клавишей PAGE DOWN</tr>
<tr valign=top><td>PN<td>str<td>&nbsp;<td>Начало местной печати</tr>
<tr valign=top><td>PS<td>str<td>&nbsp;<td>Конец местной печати</tr>
<tr valign=top><td>pt<td>bool<td>&nbsp;<td>Имеет символы табуляции аппаратуры (может понадобиться для установки is)</tr>
<tr valign=top><td>PU<td>str<td>&nbsp;<td>Посылается клавишей PAGE UP</tr>
<tr valign=top><td>RC<td>str<td>&nbsp;<td>Посылается клавишей RECALC</tr>
<tr valign=top><td>RF<td>str<td>&nbsp;<td>Посылается клавишей TOGLE REFERENCE</tr>
<tr valign=top><td>GD<td>str<td>&nbsp;<td>Символ нижнего кармана</tr>
<tr valign=top><td>GE<td>str<td>&nbsp;<td>Конец графического режима</tr>
<tr valign=top><td>GG<td>num<td>&nbsp;<td>Количество символов, забираемое GS и GE</tr>
<tr valign=top><td>GH<td>str<td>&nbsp;<td>Горизонтальный штриховой символ</tr>
<tr valign=top><td>GL<td>str<td>&nbsp;<td>Символ левого кармана</tr>
<tr valign=top><td>GR<td>str<td>&nbsp;<td>Символ правого кармана</tr>
<tr valign=top><td>GS<td>str<td>&nbsp;<td>Начало графического режима</tr>
<tr valign=top><td>GU<td>str<td>&nbsp;<td>Символ верхнего кармана</tr>
<tr valign=top><td>MP<td>str<td>&nbsp;<td>Многократная инициализация строки</tr>
<tr valign=top><td>MR<td>str<td>&nbsp;<td>Многократный сброс строки</tr>
<tr valign=top><td>GV<td>str<td>&nbsp;<td>Вертикальный штриховой символ</tr>
<tr valign=top><td>RT<td>str<td>&nbsp;<td>Посылается клавишей RETURN</tr>
<tr valign=top><td>se<td>str<td>&nbsp;<td>Закончить режим stand out</tr>
<tr valign=top><td>sf<td>str<td>(P)<td>Просмотр вперед</tr>
<tr valign=top><td>sg<td>num<td>&nbsp;<td>Количество пробелов, разрешенных so или se</tr>
<tr valign=top><td>so<td>str<td>&nbsp;<td>Начать режим stand out</tr>
<tr valign=top><td>sr<td>str<td>(P)<td>Обратный просмотр (слова наоборот)</tr>
<tr valign=top><td>ta<td>str<td>(P)<td>Символ табуляции (отличный от ^I 0 или наполнения)</tr>
<tr valign=top><td>tc<td>str<td>&nbsp;<td>Ввод  подобного терминала - должен осуществляться позже</tr>
<tr valign=top><td>te<td>str<td>&nbsp;<td>Строка для окончания программ, использующая cm</tr>
<tr valign=top><td>ti<td>str<td>&nbsp;<td>Строка для начала работы программ, использующая cm</tr>
<tr valign=top><td>uc<td>str<td>&nbsp;<td>Подчеркнуть один символ и двигать мимо него</tr>
<tr valign=top><td>ue<td>str<td>&nbsp;<td>Закончить режим подчеркивания</tr>
<tr valign=top><td>ug<td>num<td>&nbsp;<td>Количество пробелов, разрешенных us или ue</tr>
<tr valign=top><td>ul<td>bool<td>&nbsp;<td>Терминал подчеркивает четные, хотя не делает лишних ударов</tr>
<tr valign=top><td>up<td>str<td>&nbsp;<td>Подняться на строку (курсор вверх)</tr>
<tr valign=top><td>UP<td>str<td>&nbsp;<td>Посылается клавишей up-arrow (альтернативно ku)</tr>
<tr valign=top><td>us<td>str<td>&nbsp;<td>Включить режим подчеркивания</tr>
<tr valign=top><td>vb<td>str<td>&nbsp;<td>Очевидный звонок (не может двигаться курсор)</tr>
<tr valign=top><td>ve<td>str<td>&nbsp;<td>Последовательность для выключения режима open/visual</tr>
<tr valign=top><td>vs<td>str<td>&nbsp;<td>Последовательность для выключения режима open/visual</tr>
<tr valign=top><td>WL<td>str<td>&nbsp;<td>Посылается клавишей WORD LEFT</tr>
<tr valign=top><td>WR<td>str<td>&nbsp;<td>Посылается клавишей WORD RIGHT</tr>
<tr valign=top><td>xb<td>bool<td>&nbsp;<td>Beehive (f1=escape, f2=ctrl C)</tr>
<tr valign=top><td>xn<td>bool<td>&nbsp;<td>Новая строка опускается после перехода (Concept)</tr>
<tr valign=top><td>xr<td>bool<td>&nbsp;<td>Возвращает действия аналогично ce \r \n (Della Data)</tr>
<tr valign=top><td>xs<td>bool<td>&nbsp;<td>Стандартный выход не убирается при записи над ним (HP 264?)</tr>
<tr valign=top><td>xt<td>bool<td>&nbsp;<td>Символы табуляции разрушены, магический символ so (Teleray 1061)</tr>
</table>
<p align=justify><b>Вход выборки</b><br>
Следующий вход  описывает Concept-100 и является одним из
наиболее сложных входов в файле termcap. (Этот конкретный ввод
Concept устарел и используется только в качестве примера.)
<pre>
   c1|c10|concept100:is=\EU\Ef\E7\E5\E8\E1\ENH\EK\E\200\Eo&\
200:\:al=3*\E^R:am:bs:cd=16*\E^C:ce=16\E^S:cl=2*^L:\:cm=|Ea%+)
+:co#80:dc=16\E^B:\:ei=\E\200:eo:im=\E^P:in:ip=16*:li#24:mi:nd
=\E=:\:se=\Ed\Ee:so=\ED\EE:so=\ED\EE:ta=8\t:ul:up=\E;:vb=\Ek\Ek:xn:
</pre>
<p align=justify>Входы могут  продолжаться  на  множество  строк с помощью
Backslash(\) в качестве последнего символа строки. Пустые места могут  включаться  для  удобства считывания между последнем
полем строки и между первым полем следующего.   Возможности  в
termcap трех видов:  булевские возможности,  указывающие,  что
терминал имеет некоторое свойство,  числовые возможности, дающие размер терминала или размер определенных задержек, и строковые возможности,  дающие последовательность,  которая  может
быть использована для выполнения некоторых операций терминала.
<p align=justify><b>Виды возможностей</b><br>
Все возможности  имеют  два  буквенных  входа.  Например,
факт, что Concept имеет 'автоматические поля' (т.е. автоматический возврат и подачу бумаги,  когда достигается конец
строки) указывается возможностью am. Описание Concept включает
am. За числовыми возможностями следует символ '#' и затем значение. Так co,  который указывает число позиций  в  терминале,
для Concept имеет значение '80'.
<p align=justify>
Наконец, строковые  значащие  возможности,  такие  как  ce
(очистить  до конца последовательности строки) даются с помощью
двух символьных кодов,'=',  и  затем  строка  ,  оканчивающаяся
следующим  ':'.  В такой возможности может появиться задержка в
миллисекундах  после  '=',  и  чтобы  обеспечить  эту  задержку
редактор  посылает  символы  наполнения  после  остатка строки.
Задержка может быть как целым числом, например, 20, так и целым
числом, за которым следует '*', например '3*'.  '*'  указывает,
что   требуемое   наполнение   пропорционально   числу   строк,
задействованных в операции, и  заданная  величина  представляет
собой  требуемое  наполнение  на  каждое  задействование. Когда
определяется '*', иногда бывает полезным задать  задержку  вида
'3.5',   чтобы   задать   задержку   на   единицу   до  десятых
миллисекунды.
<p align=justify>
Для простого  кодирования  символов  в строковых значащих
возможностях обеспечивается ряд управляющих  последовательностей. \E отображается в символ ESCAPE, ^x отображается в ctrl-x
для любого соответствующего х, а последовательности 2 \n \r \t
\b \f дают новую строку,  return,  tab,  backspace и formfeed.
Наконец, символы могут задаваться в виде трех восьмеричных цифр
после знака \,  а символы ^ и \ могут быть представлены как \^
и \\.  Если необходимо поместить в возможность двоеточие  (:),
оно должно быть представлено в восьмеричном виде как \072. Если необходимо поместить в строковую возможность  нулевой  символ, он  должен быть закодирован как \200.  Программа,  которая
взаимодействует с termcap,  использует С строки,  отрезает старшие
биты строки вывода, и так, что \200 будет выводится, как \000.
<p align=justify><b>Подготовительное описание</b><br>
Наиболее эффективным способом  для  подготовления  терминального описания  является  описание  подобного  терминала  в
termcap и постепенно построение  нового  описания,   используя
частичное описание с ex для проверки правильности. Имейте в виду, что очень необычный терминал может проявлять недостаток  в
возможности файла  termcap описать его.  Чтобы проверить новое
описание терминала, можно установить переменную среды TERMCAP,
равную составному имени файла, содержащего описание, над котором вы работаете, и редактор будет смотреть туда скорее, чем в
/etc/termcap. TERMCAP  может  также  быть  установлена на вход
самой termcap,  чтобы избежать считывания файла, когда стартуется редактор.
<p align=justify><b>Базовые возможности</b><br>
Число позиций в каждой строке для терминала задается числовой возможностью co.  Если терминал типа CRT, число строк на
экране задается возможностью li. Если терминал переходит к началу следующей строки, когда он достигает правого поля, у него
должна быть возможность am. Способность терминала очищать  свой
экран, это  задается с помощью строковой возможности cl.  Если
терминал может осуществлять backspace, он должен иметь возможность bs,  если за backspace не идет символ, отличный от ^H; в
этом случае следует расценивать этот символ, как строковую
возможность bc. Если при этом не стирается предыдущая позиция,
то должна иметься возможность os.
<p align=justify>
Очень важным  здесь  является  то,  что движения местного
курсора, закодированные в termcap,  являются неопределенными в
левом и  верхнем  углах  терминала  CRT.   Редактор никогда не
предпринимает попытки осуществить  backspace  у  левого  угла,
также он  не будет продвигаться вверх.  Редактор считает,  что
подача низа экрана вызовет подъем экрана вверх,  а возможность
am говорит, находится ли курсор в правильном месте экрана. Если терминал имеет включаемые избирательные автоматические  поля, файл termcap,  как правило,  считает, что он включен (т.е.
am).
<p align=justify>
Эти возможности достаточны,  чтобы описать  печатающий  и
'glass-tty' терминалы. Так модель 33 телетайпа описывается как
<pre>
  t3|33|tty33:co#72:os

  а Lear Siegler ADM-3 описывается как

   cl|adm3|3|lsi adm3:am:bs:cl=^Z:li#24:co#80
</pre><p align=justify><b>
Адресация курсора</b><br>
Адресация курсора в терминале описывается строковой  возможностью cm. Эта возможность использует printf(2) как переходы (такие как %x)  в ней.  Это аналогично кодированию  текущей
строки или расположения страницы, в то время как другие символы проходят неизмененными.  Если строка cm считается функцией,
ее аргументы,  строки и позиции, к которым желательно двигаться, а % кодировки имеет следующее значения:
<table>
<tr valign=top><th>%d<td>заменяется позицией пересечения строки/колонки, начальный адрес 0</tr>
<tr valign=top><th>%2<td>как %2d - 2 цифровых поля</tr>
<tr valign=top><th>%3<td>как %3d - 3 цифровых поля</tr>
<tr valign=top><th>%<td>как printf(S) %c</tr>
<tr valign=top><th>%+x<td>добавляет х к значению, затем %</tr>
<tr valign=top><th>%&gt;xy<td>если значение&gt;x, добавляет y, не выводится</tr>
<tr valign=top><th>%r<td>устанавливает обратный порядок  строки  и  колонки(для начальной  позиции 1)</tr>
<tr valign=top><th>%i<td>обратный порядок строки и колонки, не выводится</tr>
<tr valign=top><th>%%<td>увеличивает  позицию  пересечения  строки/колонки (начальная позиция 1)</tr>
<tr valign=top><th>%n<td>исключающее  или ряд и колонка с адресом 0140 (DM2500)</tr>
<tr valign=top><th>%B<td>BCD(16*(x/10))+(x%10), не выводится</tr>
<tr valign=top><th>%D<td>Обратное  кодирование (x-2*(x-2*(x%16)),  не выводится (Delta Data).</tr>
</table>
<p align=justify>Рассмотрим HP2645,  который,  чтобы добраться до ряда 3 и
позиции 12 должен быть послан \E&a12c03Y с задержкой в  6миллисекунд. Отметим,   что порядок рядов и позиций здесь переставлен, и что ряд и позиция печатаются как две цифры. Таким образом, возможность  cm  равна 'cm=6\E&%r%2c%2Y'.  Чтобы послать
текущий ряд и позицию для Microterm ACT-IV  необходимо  поставить перед  ними ^T,  причем ряд и позиция просто кодируются в
двоичном коде,  'cm=^T%.%'.  Терминалы,  которые используют %,
должны иметь  возможность применить backspace к курсору(bs или
bc), и сдвинуть курсор вверх на  одну  строку  на  экране  (up
представлен ниже). Это необходимо, так как не всегда безопасно
передавать \t,  \n ^D и \r,  так как система может их изменить
или не учесть.
<p align=justify>Последним примером является LSI ADM-3a, который использует сдвиг ряда и позиции с помощью пустого символа, таким образом, 'cm=\E=%+%+'.
<p align=justify><b>Движение курсора</b><br>
Если терминал  может  перемещать  курсор  на одну позицию
вправо, оставляя  символ текущей позиции неизменным, то последовательность следует  задавать как nd ( неращрушающей).  Если
он может перемещать курсор на строку вверх на экране в этой же
колонке, то  задается последовательность up.  Если терминал не
имеет курсора адресации, но может возвращать курсор на начальную позицию   (самый верхний левый угол экрана),  то это может
задаваться как ho; аналогично,  быстрый способ попасть курсору
в самый  нижний левый угол экрана - задается как ll; это можно
получить включением up из начальной позиции,  редактор никогда
не выполняет  это сам (если ll не выполнит),  так как он имеет
предписания о результате движения из начальной позиции.
<p align=justify><b>Очищение области</b><br>
Если терминал  может  очищать остаток строки,  начиная от
текущей позиции,  оставляя курсор на то же месте,  надо задать
ce. Если  терминал  может  очищать до конца дисплея от текущей
позиции, то следует задавать cd.  cd  определяется  только  из
первой колонки строки.
<p align=justify><b>Вставка/уничтожение строки</b><br>
Если  терминал  может  открыть  первую пустую строку перед
строкой, на которой находится курсор, то  это  может  задавться
al. Отметим, что это выполнимо только из первой колонки строки.
Курсор  должен  появиться на новой пустой строке. Если терминал
должен уничтожать строку, на которой расположен курсор, то  это
задается  dl; это выполнимо только в первой позиции строки, которая должна быть уничтожена.Если терминал может сохранять дисплейную память над, то следует задавать средство da; если дисплейная память задается ниже, то  db.  Это  позволяет  редактору
знать,  что уничтожение строки на экране может создавать непустые строки выше или что обратное просматривание с sb может создавать ниже непустые строки.
<p align=justify><b>Вставка/стирание символа</b>
<br>Имеется два основных вида разумных терминалов,  что касается вставки/стирания   символа,  которые могут быть описаны с
помощью termcap. Наиболее общие операции вставки/стирания символов различаются только тем,  что оставляют символы в текущем
состоянии или сдвигают их в конец или начало  строки.   Другие
терминалы, такие   как Concept 100 и Perkin Elmer Owl,  делают
различие между напечатыванием и ненапечатыванием  пробелов  на
экране, помещая на место вставляемого или уничтожаемого символа ненапечатанный пробел, который также высвечивается или расширяет их до двух пробелов.  Вы можете отличать тип терминала,
который вы имеете,  путем чистки экрана,  затем печатая текст,
разделенный движением   курсора.
<p align=justify>
Печатание abc def использует локальные перемещения курсора  (не
позиции)  между abc и def. Тогда курсор помещается перед abc, и
терминал устанавливается в режим вставки. Если печатание символов вызывает остаток строки к жесткому сдвигу, и символы  отпадают,  тогда  ваш терминал не делает различия между пробелами и
ненапечатанными пробелами порциями.  Если  "abc"  сдвигается  к
def, которые потом вместе начинают двигаться к концу и затем на
следующую  вставленную строку, вы имеете второй тип терминала и
должны использовать  средство  in,  которое  устанавливает  для
вставки  нуль.  Мы  не  знакомы  с терминалами, у которых режим
вставки не может быть описан ни в одном из этих двух классов.
<p align=justify>
Редактор может описывать как терминалы, которые имеют режим вставки,  так и терминалы,  посылающие простую  последовательность, чтобы открыть пустую позицию в текущей строке. Чтобы войти в режим вставки,  используйте  последовательность  im
или присвойте ей пустое значение, если ваш терминал использует
последовательность для вставки нулевой позиции. Чтобы выйти из
режима вставки  используется  последовательность ei (выполните
это с помощью нулевого значения,  если вы также приписали  его
im). Теперь определим ic как последовательность, которая должна быть послана непосредственно перед посылкой символа,  который должен  быть вставлен.  Большинство терминалов с настоящим
режимом вставки не поддерживают ic, терминалы, которые посылают последовательность  для открытия позиции экрана,  должны ее
выдавать. (Режим  вставки предпочтительнее  последовательности
откытия позиции экрана,  если ваш терминал имеет и то , и другое). Если  требуется символ для последующего заполнения, задвайте его,  как количество миллисекунд в ip (параметр строки).
Любая другая последовательность,   которую  может понадобиться
послать после вставки одного символа,  может тоже задаваться в
ip.
<p align=justify>
Иногда необходимо  организовывать  цикл  в режиме вставки
для удаления символов в одной строке (то есть,   если  имеется
символ табуляции после вставляемой позиции). Если ваш терминал
допускает перемещение в  режиме  вставки,   вы  можете  задать
средство mi для ускорения вставки в этом случае.  Опускание mi
будет влиять только на скорость. Некоторые терминалы (а именно
Datamedia) не  должны использовать mi из-за способа работы режима вставки.
<p align=justify>
Наконец, вы можете определить режим удаления символа  заданием dm  и  ed для входа и выхода в режим удаления,  idc для
удаления одного символа в режиме удаления.
<p align=justify><b>Повышенная яркость, подчеркивание и видимые сигналы</b><br>
Если ваш  терминал имеет последовательности на вход и выход в режим standout,  они могут задаваться как so и se.  Если
существуют способы выделения изображения в standout (такие как
инверсионное видео,  мерцание или подчеркивание  -  половинная
яркость обычно  не  допускается режимом standout,  если только
терминал не находится постоянно в режиме инверсионного видео),
предпочтительным режимом является сам инверсионный видео.  Допустимо, если хотя это может слегка спутать программы,   этому
нельзя помочь.
<p align=justify>
Коды для начала подчеркивания и конца подчеркивания могут
задаваться как us,  и ue соответственно.  Если терминал  имеет
код подчеркивания  текущего  символа и сдвигает курсор на одну
позицию вправо,  такой как Microterm Mime,  последовательность
может задаваться  как  uc.   (Если код подчеркивания не движет
курсор вправо,  определяйте код, так чтобы за ним следовал неразрушающий пробел.)
<p align=justify>
Если терминал  обладает  возможностью мерцания экрана для
спокойного сообщения об ошибке (вместо звукового),  последовательность может  задаваться как vb; это не должно двигать курсор. Если терминал следует поместить в другой режим путем  откытия и  высвечивания ex,  последовательность может задаваться
как vs и ve,  посылаемая в начале и в конце этих режимов соответственно. Это  может быть использовано для изменения подчеркивания на курсор блока и обратно.
<p align=justify>
Если терминалу необходимо быть в  специальном  режиме  во
время выполнения программы, которая адресует курсор, коды входа и выхода в этот режим могут задаваться как ti  и  te.   Это
возникает для терминалов,  подобных Concept c более, чем одной
страницей памяти. Если терминал имеет только относительную адресацию памяти  курсора,  и не относительную адресацию курсора
на экране, только одно окно размером с экран может быть фиксировано в терминале для правильной работы.
<p align=justify>
Если ваш  терминал правильно генерирует подчеркнутые символы (без необходимости специальных кодов),  даже если  он  не
делает лишних ударов,  вам нужно задать средство ul. Если повторные удары замещаются пробелами,  это должно указываться определением eo.
<p align=justify><b>Клавиатура</b><br>
Если терминал имеет клавиатуру, которая передает коды при
нажатии клавиш,   эта информация должна быть задана.  Отметим,
что невозможно работать с терминалами,  у  которых  клавиатура
работает локально (это поддерживает, например, для несдигаемых
клавиш HP 2621).  Если клавиатура может быть  установлена  для
передачи или  не для передачи,  то задавайте эти коды как ks и
ke. В противном случае,  клавиатура передает. Коды, посылаемые
левой стрелкой,  правой стрелкой, верхней и нижней стрелками и
клавишей home,  могут задаваться как kl, kr, ku, kd и kh. Если
существуют функциональные клавиши,  такие как f0,  f1, ...,f9,
коды, которые они посылают,  могут задаваться как k0,  k1,...,
k9. Если  эти  клавиши  имеют  метки,  отличные от принятых по
умолчанию, от f0 до f9, метки могут задаваться как  2l0, l1,...,
l9. Если  несколько клавиш передают тот же самый код,  который
терминал ожидает от соответствующей функции,  такие как  очистить экран, 2х буквенный код termcap может быть задан в средстве ko,  например,  ':ko=cl,ll,sf,sb:', которое говорит о том,
что терминал имеет клавиши стирания, помещения в исходное состояние, просмотрен вниз и вверх, которые передают то же самое,
как cl, ll, sf и sb.
<p align=justify>
Вход ma используется для указания клавиш-стрелок, которые
имеют один символ клавиш-стрелок. Это устарело, но все еще используется в версии 2 vi,  которая должна выполняться на некоторых миникомпьютеров  из-за  увеличения  памяти.   Это   поле
излишне при наличии kl,  kr, ku, kd и kh. Оно состоит из двухсимвольных групп.  В каждой группе первый символ - это то, что
клавиша-стрелка посылает,  второй символ - соответствующая команда vi. Эти команды -h для kl, j для kd, k для ku, l для kr,
и H для kh.  Например, для Mime запись :ma=^Kj^Zk^Xl: указывает, что для клавишей стрелок указано следующее:   левая  (^H),
нижняя (^K),  верхняя (^Z)  и правая (^X). (В Mime нет клавиши
home).
<p align=justify><b>Разное</b><br>
Если терминал требует символ заполнения,  отличный от нуля, он может задаваться как pc.
<p align=justify>
Если табуляция на экране требует  заполнения,   или  если
терминал использует символ табуляции,  отличный от ^I, то последовательность может задаваться как ta.
<p align=justify>
Терминалы, которые  не  разрешают  '~'  для  высвечивания,
такие как Hazeltines, должны указывать hz. Datamedia терминалы,
которые  отражают  возврат каретки и подачу строки для возврата
каретки,  и  игнорируют   последующую   подачу   листа,   должы
указываться  nc.  Ранние  Concept терминалы, которые игнорируют
подачу листа, немедленно после am перехода,  должны  задаваться
как xn. Если требуется erase-eol для выхода из standout (вместо
написания  сверху), может задаваться как xs. Teleray терминалы,
в которых символы табуляции заставляют все символы  надвигаться
на  пробелы,  должны  задаваться  как  xt. Другие специфические
проблемы терминалов могут быть  решены  посредством  добавления
других средств в виде xx.
<p align=justify>
Если руководящий  символ  для команд в терминале ( обычно
символ escape)  может установлен некоторой программой,  то сам
командный символ(ы) задается средством CC.
<p align=justify>
Другие средства  включают  is,   строку инициализации для
терминала и if, имя файла, содержащее длинные строки инициализации. Эти строки ожидаются для надлежащего стирания и помещения символа тябуляции на терминал.  Если заданы оба  средства,
то is   помещается   перед   if.   Это  полезно,   если  if  /usr/lib/tabset/std, а is стирает в начале табуляцию.
<p align=justify><b>Подобные терминалы</b><br>
Если есть  два  подобных  терминала,  то один описывается
также, как  другой с некоторыми исключениями. Строковое средство tc   может  задаваться  с именем подобного терминала.  Это
средство должно быть last, и комбинированная длина двух входов
не должна превышать 1024.  В то время как программы из termlib
просматривают вход слева направо, и средства tc замещаются соответсвующим входом, то средство, заданное слева, замещает таковое в подобном терминале. Средство заканчивается xx@, где xx
- данное средство. Например:
<pre>
   hh|2621nl:ks@:ke@:tc=2621
</pre>
<p align=justify>Это определяет 2621nl, который не имеет средств ks и kl и
не включает метки функциональных клавиш в видимом режиме.  Это
полезно для  различных  режимов терминала или предпочтительнее
для различных пользователей.
<p align=justify><b>Расширения XENIX</b><br>
<i>Средства.</i><br>
Эта таблица приводит список расширений XENIX (прежде описанный) для  средств termcap. Оно показывает, какие коды генерируют ввод информации с клавиатуры в программу,   считывающую
содержимое клавиатуры,  и какие коды генерируют вывод информации из программы на экран.
<p><table>
<tr valign=top><th>Имя<th>Ввод/вывод<th>Описание</tr>
<tr valign=top><th>CF<td>str<td>Курсор из</tr>
<tr valign=top><th>CL<td>str<td>Посылается с помощью клавиши CHAR LEFT</tr>
<tr valign=top><th>CL<td>str<td>Курсор на</tr>
<tr valign=top><th>DA<td>bool<td>Удалить аттрибутивную строку</tr>
<tr valign=top><th>EN<td>str<td>Посылается с помощью клавиши END</tr>
<tr valign=top><th>G1<td>str<td>Верхний правый (1ый квадрант) угловой символ</tr>
<tr valign=top><th>G2<td>str<td>Верхний левый (2ой квадрант) угловой символ</tr>
<tr valign=top><th>G3<td>str<td>Нижний левый (3ий квадрант) угловой символ</tr>
<tr valign=top><th>G4<td>str<td>Нижний правый (4ый квадрант) угловой символ</tr>
<tr valign=top><th>GC<td>str<td>Центрирует графический символ (аналогично +)</tr>
<tr valign=top><th>GD<td>str<td>Символ нижнего кармана</tr>
<tr valign=top><th>GE<td>str<td>Конец графического режима</tr>
<tr valign=top><th>GG<td>num<td>Количество символов, забираемое GS и GE</tr>
<tr valign=top><th>GH<td>str<td>Горизонтальный штриховой символ</tr>
<tr valign=top><th>GL<td>str<td>Символ левого кармана</tr>
<tr valign=top><th>GR<td>str<td>Символ правого кармана</tr>
<tr valign=top><th>GS<td>str<td>Начало графического режима</tr>
<tr valign=top><th>GU<td>str<td>Символ верхнего кармана</tr>
<tr valign=top><th>GV<td>str<td>Вертикальный штриховой символ</tr>
<tr valign=top><th>HM<td>str<td>Посылается с помощью клавиши HOME(если нет kh)</tr>
<tr valign=top><th>MP<td>str<td>Многократная инициализация строки</tr>
<tr valign=top><th>MR<td>str<td>Многократный сброс строки</tr>
<tr valign=top><th>NU<td>str<td>Посылается клавишей NEXT UNLOCKED CELL</tr>
<tr valign=top><th>PD<td>str<td>Посылается клавишей PAGE DOWN</tr>
<tr valign=top><th>PU<td>str<td>Посылается клавишей PAGE UP</tr>
<tr valign=top><th>RC<td>str<td>Посылается клавишей RECALC</tr>
<tr valign=top><th>RF<td>str<td>Посылается клавишей TOGLE REFERENCE</tr>
<tr valign=top><th>RT<td>str<td>Посылается клавишей RETURN</tr>
<tr valign=top><th>UP<td>str<td>Посылается клавишей up-arrow (альтернативно ku)</tr>
<tr valign=top><th>WL<td>str<td>Посылается клавишей WORD LEFT</tr>
<tr valign=top><th>WR<td>str<td>Посылается клавишей WORD RIGHT</tr>
</table>
<p align=justify><i>Движение курсора.</i><br>
Некоторые прикладные  программы используют специально редактирующие коды. CR и CL двигают курсор на один символ вправо
и влево  соответственно.  WR и WL двигают курсор на одно слово
вправо и влево соответственно.  CW изменяет окна, если они используются в программе.
<p align=justify>
Некоторые программы отключают курсор. Это завершается использованием CF для выключения курсора и CO  для  включения  в
обратное состояние.
<p align=justify><i>Графический режим.</i><br>
Если терминал имеет графические средства,  то этот  режим
может включаться  и  выключаться использованием GS и GE кодов.
Некоторые терминалы генерируют  графические  символы  со  всех
клавиш, находясь  в  графическом режиме (такие как Visual 50).
Другие коды G определяют отдельные графические символы,  которые доступны  с  помощью управляющих последовательностей.  Эти
символы присутсвуют на некоторых терминалах,  как альтернативные наборы  графических  символов (не как в графическом режиме
big-map). vt100 имеет доступ к  таким  альтернативным  наборам
графических символов, но не в графическом режиме big-map.
<p align=justify><i>Кредит</i><br>
Эта утилита  была  развита  в Калифорнийском Университете
Беркли и используется с позволения.
<p align=justify><b>ПРИМЕЧАНИЯ</b><br>
<a href=EX.htm>ex(1)</a> допускает только 256 символов для строковых возможностей, и программы в termcap(2)  не делают проверку при переполнении этого  буфера.   Тотальная  длина единственного входа
(исключая только переходы на новую строку)  не могут превышать
1024.
<p align=justify>
Входы ma, vs и ve определяются в программе <a href=VI.htm>vi(1)</a>.
<p align=justify>
Не все  программы поддерживают все входы.  Имеются входы,
которые не поддерживаются никакой программой.
<p align=justify>
Расширения XENIX termcap детально  разъясняются  в  программной документации.
<p align=justify>
Обращайтесь к  ручной  странице  screen(HW)  для описания
символьных последовательностей,  используемых мониторным  устройством в вашей определенной системе XENIX.
<p><b>ФАЙЛЫ</b>
<pre>
/etc/termcap    Файл, содержащий описания терминала
</pre>
<p><b>СМ. ТАКЖЕ</b><br>
<a href=EX.htm>ex(1)</a>, curses(2),  termcap(2),  <a href=TSET.htm>tset(1)</a>,  <a href=VI.htm>vi(1)</a>, <a href=MORE.htm>more(1)</a>,
screen(HW)
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/footer0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
