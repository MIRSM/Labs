<html>
<head>
<title>BFS(1)</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/header0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="_pic_/logo.gif" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>

<h3 align=center>BFS(1)</h3>
<p align=justify><b>НАЗВАНИЕ</b><br>
bfs - Просматривает большие файлы.
<p><b>СИНТАКСИС</b>
<pre>
bfs [-] name
</pre>
<p align=justify><b>ОПИСАНИЕ</b><br>
Команда bfs сходна с командой <a href=ED.htm>ed(1)</a> за исключением  того, что
она доступна только для чтения и обрабатывает гораздо большие
файлы. Файлы могут быть до 1024К байт и 32К строк и  иметь до
255 символов на строку.  Команда bfs обычно более эффективна,
чем команда ed для сканирования файла, т.к. файл не копируется в  буфер.  Она  наиболее  полезна для идентификации секций
большого файла, где команда <a href=CSPLIT.htm>csplit(1)</a> может быть использована
для разделения  этого файла на  куски, удобные для редактирования.
<p align=justify>
Обычно, размер просматриваемого файла печатается, как  размер
любого файла, записанного командой W. Необязательный параметр
тире  (-)  подавляет  печать  размеров. Ввод вызывается  с помощью звездочки (*),  когда набираются "P" и RETURN.  "P" действует как переключатель, так, что запрос может  быть выключен
вводом других "P" и RETURN. Заметьте, что  сообщения  выдаются
как реакция на ошибки только, если запрос включен.
<p align=justify>
Все адресные выражения,описанные по команде ed,  обеспечиваются. Кроме того,регулярные выражения могут быть  заключены между двумя символами, отличными от стандартных косой   черты (/)
и (?): знак больше(&gt;) указывает на поиск,   спускающийся  вниз
без циклического возврата,  а знак меньше   (&lt; )  указывает на
поиск, поднимающийся вверх без циклического возврата.  Заметьте, что круглые скобки и фигурные скобки являются  специальными и от них необходимо избавиться с помощью символа   обратная
косая черта (\). Так как команда    bfs   использует различные
подпрограммы с регулярными выражениями   сравнения  из ed ,область  действия  регулярных  выражений может быть гораздо шире
Различия между командами  ed и bfs перечислены ниже:
<dl>  
<dt>+
<dd>Регулярное выражение, за которым следует знак +,обозначает one  or more times (один или более раз).Например, [0-9]+ эквивалентно [0-9][0-9]*.
<dt>\{m\}\{m,\}\{m,u\}
<dd>Целые значения,  заключенные  в \{\} показывают, какое число раз предыдущее регулярное выражение должно
быть применено . m - минимальное число, а u - число,
меньшее, чем 256, которое является максимальным. Если есть только m (например,  \{m\}),  это обозначает
точное число раз,  когда регулярное выражение должно
быть применено.\{m\} аналогично \{m,infinity\}. Операции плюс (+) и звездочка  (*)  эквивалентны  соответственно \{1,\} и \{0,\}.
<dt>(...)$n
<dd>Значение заключенного в скобки регулярного выражения
должно возвращаться. Значение будет храниться в(n+l)том аргументе,  следующем за подчиненным  аргументом.
Разрешается болше десяти заключенных в скобки  регулярных выражений.   regex выполняет их  присваивания
безусловно.
<dt>(...)
<dd>Круглые скобки используются для  группировки. Оператор, например,  *,+,\{\} может работать с единичными
символами или регулярными  выражениями, заключенными
в круглые скобки. Например, \(a*)(cb+\)*\)$0.
</dl><p align=justify>
Существует также незначительное отличие в именах меток: могут
быть использованы только буквы от "a" до "z" и все  26  меток
запоминаются.
<p align=justify>
e,g,v,k,p,q,w,=,! и нулевые команды работают  как  описано  в
команде ed,  исключая то, что e не запоминает имена файлов, а
g и v , когда не задан аргумент, возвращают на строку, расположенную за строкой, на которой вы находились. Команды такие,
как ---,  +++-,+++=,-12 и +4p допускаются.  Заметьте, что команды 1,10p и 1,10 обе будут распечатывать первые  10  строк.
Только команда  f печатает имя файла, который просматривался;
имя файла не запоминается.Команда w не зависит от отклонения,
округления, уплотнения  вывода  (см  команды  xo,xt  и xc ниже).Допустимы следующие дополнительные команды:
<dl>
<dt>xffile
<dd>Последующие   команды   берутся  из файла  с  именем
file. Когда достигается конец файла, приходит сигнал
прерывания или происходит ошибка, чтение продолжается из файла,  содержащего xf.  Команды xf могут быть
вложенными на глубину до 10.
<dt>xo[file]
<dd>Дальнейший вывод из p и пустых   команд  адресуется
указанному файлу с именем file.  Если  file потерян,
вывод  адресуется к  стандартному выводу.  Заметьте,
что каждое отклонение вызывает усечение или создание
файла.
<dt>:label
<dd>Так ставится метка  label  в командном файле.  Метка
label завершается новой строкой, а пробелы между : и
началом метки label игнорируются.  Эта команда может
также быть использована для вставки  комментариев  в
командный файл, так как на  метки  нет  необходимости
ссылаться.
<dt>(...)xb/regular expression/label
<dd>Переход  ( вверх или вниз ) делается на метку  label,
если за ней следует команда.  Это не удается при одном из следующих условий:
<ol>
<li>Один из двух адресов не лежит между 1 и $.
<li>Второй адрес меньше, чем первый.
<li>Регулярное выражение не совпадает по крайней  мере
одной строкой в указанном диапазоне,включая первую
и последнюю строки.
</ol>
В случае успеха точка (.) ставится на соответствующую
строку и переход делается на метку  label.Эта команда
единственная, которая не выдает  сообщение  об ошибке
при неверном  адресе,  так что она может быть использована для проверки того, являются ли адреса верными
до выполнения других команд.
Заметьте, что команда
</pre>
xb/^/label
</pre>
является безусловным переходом .
<p>
Команда xb разрешена только, если она читается не  с
терминала. Если она читается из канала,  то возможен
переход только вниз.
<dt>xtnumber
<dd>Вывод из  p и пустых команд усекается  максимум  до
number символов. Начальное значение = 255.
<dt>xv[digit][spaces][value]
<dd>Имя переменной является специфицированным параметром
digit, следующим за xv. Команды  Xv5100 или  xv5 100
обе присваивают значение 100 переменной  5.  Команда
Xv61,100p присваивает значение 1,100p переменной 6.
Для нахождения переменной по ссылке  поставьте % перед именем переменной.  Например, используя  присваивания,приведенные выше, для переменных 5 и 6 имеем:
<pre>
1,%5p
1,%5
%6
</pre>
печатаются первые 100 строк.
<pre>
g/%5/p
</pre>
ищет символы 100 и печатает каждую строку, содержащую
совпадение.Для того, чтобы избавиться от специального
значения % , перед ним должен быть знак \. Например,
<pre>
g/".*\%[cds]/p
</pre>
может использоваться для того,чтобы сопоставить строки и  составить  список  строк,  содержащих символы
printf, десятичные целые или строки.
<p>
Другая особенность команды xv состоит в том, что первая строка вывода  из  команды  системы  XENIX  может
храниться в переменной .
<p>
Единственным  требованием  является  требование того,
чтобы первым символом value был a!. Например,
<pre>
xv5!cat junk
!rm junk
!echo"%5"
xv6!expr%6+1
</pre>
устанавливает текущую строку в переменной 5, печатает
ее и увеличивает переменную  6  на единицу.  Для того,
чтобы избавиться от специального значения  !  в  качестве первого символа value, поставьте перед ним \.
Например,
<pre>
xv7\!date
</pre>
помещает значение !date в переменную 7.
<dt>xbzlabel<br>
xbnlabel
<dd>Эти две   команды  проверяют  последний  сохраненный
return code (код  возврата)  из  выполнения  команды
системой XENIX  (!command) или ненулевое значение  и
делают переход к указанной метке. Два  примера, приведенных  ниже, отыскивают следующие  пять строк, содержащих строку size:
<pre>
xv55
</pre>
</dl>
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/footer0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
