<html>
<head>
<title>INIT(1M)</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/header0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="_pic_/logo.gif" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>

<h3 align=center>INIT(1M)</h3>
<p align=justify><b>НАЗВАНИЕ</b><br>
init - инициализация управления процессами
<p><b>СИНТАКСИС</b>
<pre>
   /etc/init  [0] [1] [2] [3] [4] [5] [6] [S] [s] [Q] [q] [a] [b] [c]
</pre>
<p align=justify><b>ОПИСАНИЕ</b><br>
Процесс  init  является  главным диспетчером процессов.
Его основная задача - создание процессов в соответствии
со  схемой,  хранящейся  в  файле   /etc/inittab   [см.
<a href=INITTAB.htm>inittab(4)</a>]. Схема обычно предписывает запуск процессов
getty  для всех терминальных линий, посредством которых
пользователи могут войти в систему. Init также  контролирует  работу  автономных процессов, требующихся конкретной системе.
<p align=justify>С  точки  зрения  процесса  init система в любой момент
времени находится на  определенном  уровне  выполнения.
Уровень_выполнения  может рассматриваться как программная конфигурация системы,  причем  каждая  конфигурация допускает существование только определенной группы процессов.  Процессы, запускаемые init'ом на каждом уровне
выполнения, описаны в файле  inittab.  Возможны  восемь
уровней  выполнения: от 0 до 6, S и s. Уровень выполнения изменяется  при  запуске  init'а  привилегированным пользователем.  Запущенный  пользователем init посылает соответствующие сигналы исходному  процессу init,  созданному  при  перезагрузке  системы,  сообщая, на какой уровень выполнения надо перейти.
<p align=justify>Процесс init запускается в рамках системы  UNIX  в  качестве последнего шага процедуры загрузки. Сначала init ищет  в  файле  /etc/inittab  строку  initdefault  [см.
<a href=INITTAB.htm>inittab(4)</a>]. Если таковая имеется, то  init  использует
ее  для определения начального значения уровня выполнения. Если такой строки нет, то init запрашивает начальное значение уровня  выполнения  у  пользователя  через
виртуальную  системную консоль, /dev/syscon. Если в ответ вводится буква S или s, init переходит в  однопользовательский режим (SINGLE USER). Это единственный уровень  выполнения,  который  не  требует наличия заранее
подготовленного файла /etc/inittab. Иными словами, если
файл inittab не существует, то допускается работа только в однопользовательском режиме. При этом  виртуальная
консоль  открывается  на чтение и запись и сразу же выполняется команда /bin/su -root. Для  выхода  из  однопользовательского режима следует использовать init, так
как  при  завершении shell'а по концу файла init только
переинициализирует однопользовательский режим.
<p align=justify>Если  во  время  загрузки виртуальная системная консоль
(/dev/syscon) связана не с  физической  системной  консолью, подключенной к процессору (/dev/console), то при
запросе нового уровня выполнения процесс init может потерпеть неудачу.
<p align=justify>В ответ на вопрос о новом уровне выполнения можно ввести только одну из цифр от 0 до 6 либо буквы  S  или  s.
Любой другой ответ будет отвергнут и вопрос будет задан
вновь.
<p align=justify>При  вводе  S или s init действует как описано выше для
однопользовательского режима и, кроме  того,  связывает
/dev/syscon с терминалом пользователя, делая его виртуальной  системной консолью. На физическую консоль /dev/
console выводится сообщение о переназначении  виртуальной консоли.
<p align=justify>При первом запуске init'а и при каждом переходе из  однопользовательского  режима  на другой уровень выполнения, init устанавливает характеристики виртуальной консоли, /dev/syscon, с помощью вызова <a href=IOCTL.htm>ioctl(2)</a>,  в  соответствии с хранящимися в файле /etc/ioctl.syscon характеристиками.  Этот файл записывается процессом init при
переходе в однопользовательский режим.
<p align=justify>Если в качестве ответа введена цифра от 0 до 6, то init
устанавливает соответствующий уровень выполнения.
<p align=justify>Если init впервые перешел на уровень выполнения, отличный  от  однопользовательского, то сначала файл inittab
просматривается в поисках строк, где в качестве  действия  указаны boot или bootwait. Процессы, соответствующие этим строкам, запускаются перед  какой-либо  другой
обработкой  inittab  при условии, что введенный уровень
выполнения совпадает с указанным в строке. Таким  образом,  перед тем, как пользователи получат доступ к системе, могут быть произведены некоторые начальные действия, такие, например, как монтирование файловых систем.
Затем в файле inittab ищутся все строки, которые должны
быть обработаны на данном уровне выполнения.
<p align=justify>Уровень  выполнения  2  определяется как содержащий все
процессы для терминалов и демоны, которые должны  работать  в многопользовательском окружении, поэтому данный
режим называют многопользовательским (MULTI-USER).
<p align=justify>Уровень выполнения 3 предназначен для работы с системой
разделения  удаленных  файлов.  Он является расширением
многопользовательского режима.
<p align=justify>Уровень выполнения 4 можно определить как некий  дополнительный  многопользовательский  режим; он не является
необходимым для работы системы и обычно не  используется.
<p align=justify>Можно запустить init, указав в качестве аргумента  один
из  псевдоуровней a, b или c. Реальный уровень выполнения при этом не изменяется, а в смысле порождения  процессов  псевдоуровни  не отличаются от реальных. Обычно
псевдоуровни используют для выполнения группы команд.
<p align=justify>Для многопользовательского режима файл  inittab  подготавливается таким образом, чтобы init создавал  процесс для каждого пользовательского терминала.
<p align=justify>Каждый  процесс  shell, запущенный с терминала, в конце
концов будет завершен либо из-за получения символа конца файла, либо из-за освобождения линии. Когда init получает сигнал, о том, что запущенный им процесс  завершен,  он  записывает  этот  факт и причину завершения в
файлы /etc/utmp и /etc/wtmp, если последний  существует
[см.  <a href=WHO.htm>who(1)</a>].  История процессов, запускаемых init'ом,
хранится в файле /etc/wtmp.
<p align=justify>Для запуска процессов, упомянутых в файле inittab, init
читает весь файл и для каждой строки, процесс в которой
требует перезапуска, порождается потомок. После запуска
всех  процессов, указанных в файле inittab, init ожидает, пока либо один из его потомков завершится, либо будет получен сигнал об ошибке питания, либо  порожденный
пользователем  init предпишет изменить уровень выполнения. Когда одно из перечисленных условий становится истинным, init вновь просматривает файл  inittab.  Добавлять  строки в файл inittab можно в любое время, однако
init все равно будет ожидать одно из трех вышеуказанных
событий. Чтобы  заставить  init  немедленно  обработать
файл  inittab,  его  следует разбудить командами init Q
или init q.
<p align=justify>Если init получает сигнал об ошибке  питания  (SIGPWR),
он  просматривает файл inittab в поисках строк с действиями powerfail и powerwait. Соответствующие этим строкам процессы (если позволяет уровень выполнения)  будут
выполнены  в  первую очередь. Таким образом, init может
выполнять различные  процедуры  при  завершении  работы
операционной системы. Заметим, что в однопользовательском режиме выполняются только строки powerfail и powerwait.
<p align=justify>Если  процессом init получен запрос на изменение уровня
выполнения, он посылает  сигнал-предупреждение  SIGTERM
всем процессам, которые не должны работать на требуемом
уровне выполнения. Затем, выждав 5 секунд, init уничтожает их сигналом SIGKILL.
<p align=justify>Для  формирования  подразумеваемого окружения процессов
init читает файл /etc/TIMEZONE.
<p><b>ФАЙЛЫ</b>
<pre>
    /etc/inittab
    /etc/utmp
    /etc/wtmp
    /etc/TIMEZONE
    /dev/console
    /dev/syscon
    /etc/ioctl.syscon
</pre>
<p><b>СМ. ТАКЖЕ</b><br>
<a href=GETTY.htm>getty(1M)</a>, <a href=TERMIO.htm>termio(7)</a>.<br>
<a href=LOGIN.htm>login(1)</a>, <a href=SH.htm>sh(1)</a>, <a href=WHO.htm>who(1)</a> в Справочнике пользователя.<br>
<a href=KILL~1.htm>kill(2)</a>, <a href=INITTAB.htm>inittab(4)</a>, <a href=UTMP.htm>utmp(4)</a> в Справочнике  программиста.
<p align=justify><b>ДИАГНОСТИКА</b><br>
Если init обнаружит, что действия, связанные  с  какой 
либо  строкой  из /etc/inittab, были выполнены более 10
раз за 2 минуты, он делает вывод,  что  в  этой  строке
имеется  ошибка,  и  выдает сообщение на системную консоль.  Затем  он игнорирует строку с ошибкой, пока либо
не пройдет пять минут, либо не придет сигнал  от  запущенного  пользователем init'а. Это предохраняет init от
пожирания системных ресурсов, как  в  случае  описки  в
файле  inittab,  так  и в случае неосторожного удаления
программы, упомянутой в /etc/inittab.
<table cellspacing=0 cellpadding=0 border=0 background="_pic_/footer0.jpg" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
