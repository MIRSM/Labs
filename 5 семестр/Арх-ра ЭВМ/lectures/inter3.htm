<html>
<head>
<title>подпрограммы</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="center">Команды работы с подпрограммами</h1>
<p>Вызовы подпрограмм Практически в любой программе, независимо от ее содержания, 
  встречаются участки, которые требуется выполнять (возможно, с небольшими изменениями) 
  несколько раз по ходу программы. Такие повторяющиеся участки целесообразно выделить 
  из общей программы, оформить в виде подпрограмм и обращаться к ним каждый раз, 
  когда в основной программе возникает необходимость их выполнения. Подпрограмма, 
  в зависимости от выполняемых ею функций, может требовать передачи из вызывающей 
  программы определенных данных (называемых аргументами, или параметрами), возвращать 
  в вызывающую программу результаты вычислений или обходиться и без того, и без 
  другого. Подпрограмма может быть оформлена в виде процедуры, и тогда имя этой 
  процедуры будет служить точкой входа в подпрограмму </p>
<p>В любом случае вызов подпрограммы осуществляется командой <b>call.</b> Подпрограмма 
  должна завершаться командой <b>ret,</b> служащей для возврата управления в ту 
  точку, откуда подпрограмма была вызвана.</p>
<p>Команда вызова подпрограммы <b>call </b>может использоваться в 4 разновидностях, 
  Вызов может быть:<br>
  прямым ближним (в пределах текущего сегмента команд);<br>
  прямым дальним (в другой сегмент команд);<br>
  косвенным ближним (в пределах текущего сегмента команд через ячейку с адресом 
  перехода);<br>
  косвенным дальним (в другой сегмент команд через ячейку с адресом<br>
  перехода).</p>
<p>Оформление разновидностей команды call аналогично используемых в команде <a href="inter2.htm">jmp</a>.<br>
  Алгоритм выполнения команды call следующий: процессор помещает адрес возврата 
  (содержимое регистра IP) в стек выполняемой программы, после чего в регистре 
  IP формируется адрес перехода в соответствии со способом вызова, также как в 
  команде <a href="inter2.htm">jmp</a>. В результате в IP оказывается адрес подпрограммы. 
</p>
<p>Команда <b>ret</b>, которой заканчивается подпрограмма, выполняет обратную 
  процедуру - извлекает из стека адрес возврата и заносит его в IP</p>
<p>Пример использования команд call и ret в варианте ближнего вызова:</p>
<h6>code segment<br>
  main proc ;Основная программа<br>
  ,,,,,<br>
  call sub ; вызов процедуры sub<br>
  ,,,,,<br>
  main endp </h6>
<h6><br>
  sub proc near ; процедура sub</h6>
<h6>,,,,, ; тело процедуры<br>
  ret ; выход из процедуры<br>
  sub endp <br>
</h6>
<h6> code ends </h6>
<p>Подробное описание этих команд можно посмотреть в <a href="../library/asm/guide/guide/Start.htm" target=_blank>справочнике</a>, 
  там же приведены особенности их <a href="../library/asm1.1.1.pdf" target=_blank>использования</a></p>
<p></p>
<hr class=forhr align="center">
<div align="center">
  <table width="600">
    <tr> 
      <td> 
        <p align="center"><b><a href="inter2.htm" target="mainFrame">назад</a></b></p>
      </td>
      <td> 
        <p align="center"><b> <a href="cpu.htm"target="mainFrame"> в начало разлела </a></b></p>
      </td>
      <td> 
        <p align="center"><b><a href="inter4.htm" target="mainFrame">вперед</a></b></p>
      </td>
    </tr>
  </table>
</div>
<p><br>
</p>
</body>
</html>
