<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
</head>

<body bgcolor="#FFFFFF" text="#000000">
6. Функции таймера - звук и время 
<p>Микросхема таймера генерирует импульсы частоты 1193180 гц. Эта последовательность 
  импульсов поступает на три канала таймера. В каждом канале есть свой счетчик, 
  работающий как делитель частоты, максимальное число которое может быть записано 
  в счетчике (коэффициент деления) - 655357. Счетчики каналов таймера независимы 
  друг от друга и доступны для программиста. Назначение каналов таймера следующее: 
</p>
<p>канал 0 используется для системной службы времени. При инициализации системы 
  BIOS записывает в счетчик этого канала максимально возможное число, таким образом, 
  импульсы на выходе делителя выдаются с частотой около 18.2 гц (период этой частоты 
  - около 55 мсек - программисты иногда называют &quot;тиком&quot; таймера). Выход 
  делителя этого канала поступает на контроллер прерываний и вызывает прерывание 
  с номером 8; <br>
  выход канала 1 используется схемами регенерации памяти, поэтому программисты 
  с этим каналом не работают; <br>
  выход канала 2 поступает на динамик ПЭВМ, этот канал используется для генерации 
  звука. <br>
  Каждый канал может работать в одном из 6 режимов, но программисты, как правило, 
  используют его в режиме 3 (генератор меандра).</p>
<p>Программирование канала таймера представляет собой запись числа в счетчик канала. 
  Имеется один управляющий порт - 0x43 для всех каналов и по одному порту данных 
  для каждого канала - 0x40, 0x41, 0x42. При программировании следует записать 
  в порт 0x43 управляющий байт, который обычно имеет вид: </p>
<p> x x 1 1 0 1 1 0 </p>
<p>где xx - номер канала таймера, а затем послать в порт данных выбранного канала 
  сначала младший, а затем старший байт счетчика.</p>
<p>6.1. Генерация звука </p>
<p>Если динамик ПЭВМ включен и управляется от таймера, то высота генерируемого 
  звука определяется частотой импульсов канала 2 и зависит от коэффициента деления, 
  записанного в счетчике канала. Включение-выключение динамика управляется двумя 
  разрядами в однобайтном регистре контроллера программируемого периферийного 
  интерфейса, доступ к которому - через порт 0x61. Следует иметь в виду, что этот 
  регистр используется также и для других целей, так что при его программировании 
  следует вначале прочитать его содержимое, изменить требуемые разряды, а затем 
  записать в порт 0x61 новое значение. Для управления динамиком используются такие 
  разряды регистра: 0 - единица в этом разряде устанавливает управление динамиком 
  от таймера (возможно и прямое управление из программы, но мы его не рассматриваем); 
  <br>
  1 - включение/выключение (1/0) динамика. <br>
  Из приведенной выше методики программирования таймера очевидно, что динамик 
  может воспроизводить только чистые (однотонные) звуки. Для создания полифонического 
  звучания программа должна быстро переключать (перепрограммировать) таймер с 
  одного тона на другой. Это достаточно громоздкая операция, которая занимает 
  к тому же весь ресурс времени центрального процессора, поэтому мы здесь ограничимся 
  только чистыми звуками.<br>
  Для нот первой октавы (включая полутона) ряд коэффициентов деления следующий:<br>
  912 - 861 - 813 - 767 - 724 - 678 - 645 - 609 - 574 - 542 - 512 - 483<br>
  Для перехода на октаву ниже следует умножить члены этого ряда на 2, на октаву 
  выше - на 0,5.</p>
<p>Следующая программа воспроизводит 7 основных нот первой октавы (пример 6.1).<br>
  Длительность звучания каждой ноты и паузы между нотами здесь задается задержкой 
  (delay). При выполнении этих задержек процессор только ожидает истечения заданного 
  интервала, хотя он мог бы в это время выполнять какую-либо полезную работу. 
  Как это организовать - мы увидим позже, рассматривая работу в реальном времени.</p>
<p></p>
<p></p>
<p>6.2. Системная служба времени </p>
<p>Импульсы, поступающие с выхода канала 0 таймера, вызывают прерывание 8. Обработчик 
  этого прерывания в BIOS подсчитывает количество таких импульсов в 4-байтной 
  области памяти (два 2- байтных слова). Этот счетчик, находящийся в области памяти 
  BIOS по адресу 0040:006C, таким образом, хранит количество тиков таймера, прошедших 
  от полуночи (0 в счетчике соответствует полночи). При запуске системы BIOS запрашивает 
  у оператора время дня, переводит его в количество тиков и записывает по указанному 
  адресу. Затем в процессе работы это число модифицируется обработчиком прерывания 
  8. То обстоятельство, что обработчик прерывания 8 в BIOS обеспечивает работу 
  службы времени следует учитывать при перехвате прерывания 8 и при перепрограммировании 
  канала 0 таймера.</p>
<p>Доступ к счетчику времени поддерживается прерыванием 0x1A. При обращении к 
  этому прерыванию со значением 0 в регистре AH мы получаем в CX старшую, а в 
  DX - младшую части счетчика. При обращении со значением 1 в AH мы задаем счетчик 
  в регистрах CX, DX, и это значение записывается в память BIOS.</p>
<p>DOS поддерживает службу времени функциями 0x2C (чтение времени) и 0x2D (установка 
  времени). Для представления времени в этих функциях используются регистры: CH 
  (часы), CL (минуты), DH (секунды), DL (сотые доли секунды).<br>
  Программа примера 6.2 иллюстрирует чтение системного времени тремя способами. 
</p>
<p>В AT имеются независимые часы реального времени, показания которых содержатся 
  в CMOS-памяти. Регистры CMOS-памяти, связанные с временем и датой следующие: 
  0 - секунды, 2 - минуты, 4 - часы, 6 - день недели (0 - воскресенье), 7 - день 
  месяца, 8 - месяц, 9 - год. Доступ к этим данным - либо через порты 0x70, 0x71, 
  либо через прерывание 0x1A. Функция 2 этого прерывания (AH=2) - чтение часов 
  реального времени, функция 3 - установка часов, функции 4, 5 - чтение и установка 
  даты соответственно. Используются те же регистры, что и в функциях DOS 0x2C, 
  0x2A, но все данные представляются в двоично-десятичном коде. При загрузке системы 
  на AT время дня и дата выбираются из этих часов, далее эти часы и системная 
  служба времени работают независимо друг от друга.</p>
<p>Кроме того, в AT имеется также возможность запрограммировать прерывание на 
  заданное время, в описаниях это часто называют сигналом тревоги (alarm). Время 
  поступления этого сигнала заносится в регистры CMOS-памяти: 1 - секунды, 3 - 
  минуты, 5 - часы, а прерывание по достижению заданного времени разрешается единицей 
  в разряде 5 регистра 0x0B. При достижении заданного времени происходит прерывание 
  0x4A.<br>
  Сигнал тревоги может быть задан при помощи функции 6 прерывания 0x1A, а отменен 
  - функцией 7, как это показано в следующем примере.</p>
<p></p>
</body>
</html>
