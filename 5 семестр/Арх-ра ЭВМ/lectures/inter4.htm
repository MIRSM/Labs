<html>
<head>
<title>Обработка прерывания</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="../images/styles.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="center">Обработка прерывания</h1>
<p> Процессорах i8086 существуют 2 вида прерываний аппаратные или программные. 
  При аппаратном прерывании процедура прерывания инициируется внешнем сиuналом 
  IRQ, поступившим в программируемого контроллера прерываний, а при программном 
  - командой процессора <b>int .</b> Оба вида прерывания выполняются процессором 
  аналогично, независимо от того чем вызвано прерывание.</p>
<p>Действия процессора при прерывании:</p>
<li>сохраняет в стеке содержимое CS, IP и регистра флагов,
</li><br>
<li> вычисляет адрес вектора прерывания - двойного слова, в котором хранится адрес 
  подпрограммы обработки прерывания,
</li><br>
  
<li>читает вектор и помещается адрес подпрограммы обработки прерывания в регистры 
  CS и IP</li><br>  
<p> Можно считать, что исполнение прерывания в процессоре аналогично выполнению 
  команды<b> <a href="inter3.htm">call </a></b>с косвенной адресацией адреса процедуры 
  через вектор прерывания. </p>
<p>Процедура прерывания должна заканчиваться командой <b>iret,</b> которая похожа 
  на команду <a href="inter3.htm"><b>ret</b>.</a> Команда <b>iret </b>восстанавливает 
  из стека содержимое CS, IP и регистра флагов, т.е. передает управление очередной 
  команде прерванной программы.Всего допустимо иметь 256 различных векторов прерываний. 
  Для хранения векторов прерываний в DOS выделен первый килобайт памяти </p>
<p>Адрес вектора прерывания с номером N вычисляется как N*4. В младшем слове хранится 
  значение IP, а в старшем CS.<br>
  Пример. Определить адрес вектора прерывания команды <b>int 21h.</b> Получим 
  21h * 4h =84h.</p>
<p> Просмотр содержимого четырёх байтов, начиная с 0084h в сегменте 0000h показывает, 
  что там храниться число <br>
  0000:0084 0DDE:048B,где 0DDE - адрес сегмент, а 048B - адрес смещения подпрограммы 
  обработки прерывания с номером 21h. (вызов функции DOS)/</p>
<p>Если написать свою подпрограмму обработки прерывания и с помощью функций, описанных 
  ниже, записать её адрес (сегмент и смещение) в вектор прерывания, то при вызове 
  данного прерывания его обработка будет проходить по новой подпрограмме. Старый 
  вектор прерывания, обычно, сохраняется и перед завершением программы восстанавливается.<br>
</p>
<p>Программные прерывания применяются в первую очередь для вызова системных обслуживающих 
  программ - функций <a href="bios_dos.htm">DOS и BIOS. </a> <br>
  Большая часть векторов прерываний зарезервирована для выполнения определенных 
  действий; часть из них автоматически заполняется адресами системных программ 
  при загрузке системы. Как видноиз <a href="../library/v01a/ch4.htm#ch4_2" target=_blank>таблицы 
  векторов</a> прерыванй, их можно условно разбить на следующие группы: их ) позволяющую 
  продемонстрировать разнообразие ее состава: </p>
<li>векторы внутренних прерываний процессора (0lh, 02h и др.);</li>
<br>
<li> векторы аппаратных прерываний (08h...0Fh и 70h...77h);
</li><br>
<li>программы BIOS обслуживания аппаратуры компьютера (10h, 13h, 16h и др.);</li><br>
<li>
программы DOS (21h, 22h, 23h и др.);</li><br>
<li>
  адреса системных таблиц BIOS </li><br>
<p> Системные программы, адреса которых хранятся в векторах прерываний, в большинстве 
  своем являются всего лишь диспетчерами, открывающими доступ к большим группам 
  программ, реализующих системные функции. Для вызова требуемой функции надо не 
  только выполнить команду int с соответствующим номером, но и указать системе 
  в одном из регистров (для этой цели всегда используется регистр АН) номер вызываемой 
  функции. Иногда для &quot;многофункциональных&quot; функций приходится указывать 
  еще и номер подфункции в регистреАL. </p>
<p>Подробное описание обработки прерываний можно посмотреть 
<a href="../library/v01a/ch4.htm" target=_blank >в книге  
  </a> </p>
<hr class=forhr align="center">
<div align="center">
  <table width="600">
    <tr> 
      <td width="155"> 
        <p align="left"><b><a href="inter3.htm" target="mainFrame">назад</a></b></p>
      </td>
      <td width="260"> 
        <p align="center"><b> <a href="cpu.htm" target="mainFrame">в начало раздела</a></b></p>
      </td>
      <td width="169"> 
        <p align="center"><a href="cpu_t.htm" target="mainFrame">Вперед</a></p>
      </td>
    </tr>
  </table>
</div>
<p>&nbsp;</p>


</body>
</html>
