<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 7. Ввод/вывод.</p> <p class="hdr2">Раздел 1. Доступ к последовательному порту.</p> <p class="hdr3">7.1.5 Инициализация и управление модемом.</p> <p> Имеется 6 линий, по которым модемы связываются с компьютером (усовершенствованные модели могут иметь добавочные линии по интерфейсу RS232). Вот их названия, сокращения и функции: <pre class="asm"> 
От компьютера к модему: 
Data Terminal Ready (DTR)        Информирует модем, что компьютер 
Готовность компьютера            включен и готов к связи. 
Request To Send (RTS)            Информирует модем, что компьютер 
Запрос на посылку                ожидает посылки данных. 
От модема к компьютеру: 
Data Set Ready (DSR)             Информирует компьютер, что модем 
Готовность модема                включен и готов. 
Clear To Send (CTS)              Информирует компьютер, что модем 
Готовность к посылке             готов начать передачу данных. 
Data Carrier Detect (DCD)        Информирует компьютер, что модем 
Обнаружен носитель данных        связан с другим модемом. 
Ring Indicator (RI)              Информирует компьютер, что теле
Индикатор звонка                 фонная линия, по которой присое
                                 динен модем имеет звонок. 
</pre> 
<p> Сначала компьютер устанавливает сигнал DTR, а затем инстуктирует модем связаться с удаленной станцией. После того, как модем установил связь он устанавливает сигнал DSR. Этот сигнал информирует компьютер, что модем готов к связи и в этот момент компьютер может установить сигнал RTS. Kогда модем ответит сигналом CTS, то передача начинается. <p> Две стандартные линии, по которым компьютер управляет модемом, доступны через регистр контроля модема микросхемы UART 8250. Этот регистр имеет адрес порта на 4 больше, чем базовый адрес используемого коммуникационного канала. Вот значение его битов: <pre class="asm"> 
Регистр контроля модема: 
    биты 7-5     (всегда 0) 
          4     1 = выход UART замкнут на вход 
          3     добавочный пользователь назначен на вывод #2 
          2     добавочный пользователь назначен на вывод #1 
          1     1 = "запрос на посылку" активен 
          0     1 = "готовность компьютера" активна 
</pre> 
<p> Обычно установлены биты 0 и 1 регистра контроля модема, а остальные равны 0. Бит 2 равен 0, за исключением случаев, когда производитель модема предназначил его для специального использования. Бит 3 установлен только в случае, когда используются прерывания {<a href="718.htm">7.1.8</a>}. Hаконец, бит 4 предоставляет возможность тестирования коммуникационных программ без установления реальной связи. Выходной сигнал микросхемы UART подается на вход, как будто UART принимает последовательные данные. Это свойство можно использовать для тестирования правильности работы самой микросхемы. Оно недоступно при использовании коммуникационных процедур прерывания 14H BIOS. <p> Четыре линии, по которым модем посылают информацию компьютеру, управляются регистром статуса модема. Этот регистр расположен по адресу порта на 6 больше, чем базовый адрес используемого коммуникационного адаптера. Вот значение его битов: <pre class="asm"> 
Регистр статуса модема: 
   бит 7      1 = DCD 
       6      1 = RI 
       5      1 = DSR 
       4      1 = CTS 
       3      1 = изменение в DCD 
       2      1 = изменение в RI 
       1      1 = изменение в DSR 
       0      1 = изменение в CTS 
</pre> 
<p> Программа непрерывно проверяет эти биты в ходе коммуникационных операций. Отметим, что 4 младших бита параллельны старшим четырем битам. Эти биты устанавливаются в 1 только тогда, когда происходит изменение в статусе соответствующего старшего бита с тех пор, когда регистр читался последний раз. Все 4 младших бита автоматически сбрасываются при чтении регистра. Программы любого уровня могут прямо читать этот регистр. Другой возможностью является использование функции 3 прерывания 14H BIOS, которая возвращает регистр статуса модема в AL (при этом в AH будет содержаться регистр статуса линии). При входе DX должен содержать номер коммуникационного канала (0 или 1). <p> Большинство модемов имеет намного больше возможностей, по сравнению с теми, что отражены в двух связанных с модемом регистрах. Имеются возможности автоматической связи и автоматического ответа, которые контролируются управляющей строкой. Эта строка посылается в модем, как будто передаются обычные данные. Модем выделяет эту строку из данных по специальному символу, используемому только для указания начала управляющей строки. Этот символ может быть предопределенным (часто используется код Esc - ASCII 27) или выбираемым пользователем. Модем способен определить насколько длинной должна быть каждая строка, поэтому по окончании строки он опять рассматривает входящий поток информации как данные. Kаждый модем имеет свой набор команд. В качестве примера рассмотрим команды, используемые внутренним модемом PCjr: <pre class="asm"> 
   Символ          Значение          Применение 
    A            ответ        вход в режим ответа 
    Bn           перерыв      посылает сигнал перерыва n*100 мс 
    Cn           отсчет n     отсчитывает n звонков до ответа 
    Dn...n       вызов        посылает строку чисел n...n 
    Fn           формат       устанавливает протокол связи 
    H            разрыв       прекращает связь с машиной 
    I          инициализация  инициализирует модем 
    LR         долгий ответ   меняет используемую кодовую систему 
    M            режим        модем берет символы как данные 
    Nn           новый        меняет командный символ на n 
    O           originate     вход в режим originate 
    P            pick-up      вход в режим голоса 
    Q            запрос       запрос статуса модема 
    R            повтор       повторить команду связи 
    Sn          скорость      выбор скорости обмена 
    Tn...n     прозрачность   игнорировать управляющие строки 
                              в следующих n...n байтах 
    V            голос        перевести модем в режим голоса 
    W            ожидание     ничего не делать до след. команды 
    X            передать     передать тона вызова 
    Z            тест         проводит диагностику оборудования 
</pre> 
В ответ на команду запроса модем посылает информацию о своем состоянии, посылая ее в UART как обычные данные. Помимо прочей информации, может сообщаться, что линия занята. Чтобы правильно использовать команды управления модемом и информацию о его статусе надо тщательно изучить документацию на данный модем. Модем PCjr описан в техническом руководстве по PCjr. Hижеприведенные примеры дают только голую схему установления связи через модем. <p> Hизкий уровень. <p> Вот та же самая схема на языке ассемблера: <table align="center"> <tr><td></td><td>;---устанавливаем сигнал DTR</td></tr> <tr><td>MOV DX,BASE_ADDRESS </td><td>;начинаем с базового адреса</td></tr> <tr><td>ADD DX,4 </td><td>;указываем на регистр контроля модема</td></tr> <tr><td>MOV AL,1 </td><td>;устанавливаем бит 1</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем в порт</td></tr> <tr><td></td><td>;---посылаем управляющую строку модему для вызова</td></tr> <tr><td>.</td><td></td></tr> <tr><td>(этот код разный для разных модемов)</td><td></td></tr> <tr><td>.</td><td></td></tr> <tr><td></td><td>;---ожидаем пока будет установлен сигнал DSR</td></tr> <tr><td>INC DX </td><td>;указываем на регистр статуса модема</td></tr> <tr><td>INC DX </td><td>;</td></tr> <tr><td>TRY_AGAIN: IN AL,DX </td><td>;получаем содержимое</td></tr> <tr><td>TEST AL,10B </td><td>;проверяем второй бит</td></tr> <tr><td>JZ TRY_AGAIN </td><td>;ждем пока он не будет равен 1</td></tr> <tr><td></td><td>;---устанавливаем бит RTS</td></tr> <tr><td>DEC DX </td><td>;возвращаемся к регистру управления</td></tr> <tr><td>DEC DX </td><td>;</td></tr> <tr><td>MOV AL,3 </td><td>;устанавливаем сигнал RTS</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем в порт</td></tr> <tr><td></td><td>;---ожидаем сигнала CTS</td></tr> <tr><td>INC DX </td><td>;возвращаемся к регистру статуса</td></tr> <tr><td>INC DX </td><td>;</td></tr> <tr><td>ONCE_MORE: IN AL,DX </td><td>;получаем байт статуса</td></tr> <tr><td>TEST AL,1 </td><td>;проверяем бит CTS</td></tr> <tr><td>JZ ONCE_MORE </td><td>;не продолжаем пока он не установлен</td></tr> <tr><td></td><td>;---теперь можно посылать данные</td></tr> </table> <hr><p align="center">
<~-<a href="714.htm">7.1.4 Определение статуса коммуникационного порта.</a><br><a href="index.htm#header">Содержание</a><br><a href="716.htm">7.1.6 Передача данных.</a>-~>
</p></body></html>
