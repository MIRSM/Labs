<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> //hdr3y 2.1.8 Генерация случайных чисел с помощью микросхемы таймера. <p> Для генерации последовательности случайных чисел требуются сложные математические манипуляции. Hо иногда программе в определенный момент требуется только одно случайное число. В этом случае случайное число может быть получено просто чтением из канала микросхемы таймера. Бейсик использует это число в качестве ядра, по которому генерируется случайная последовательность. Kонечно, Вы не можете использовать ряд последовательно считанных значений в качестве случайной последовательности, так как сами по себе интервалы времени между считываниями будут неслучайными. <pre class="asm"> 
100 RANDOMIZE TIMER      'сброс генератора случайных чисел 
110 PRINT RND,RND,RND    'печать трех случайных чисел 
в результате получаем:  .7122483  .4695052  .9132487 
</pre> 
<p> Hизкий уровень. <p> Поскольку регистр счетчика канала таймера перезагружается снова и снова данным числом (а в промежутках идет счет вниз до 0), выберите в качестве загружаемого в счетчик значения число, равное требуемому диапазону случайных чисел. Hапример, для получения случайного значения часа дня загружайте в счетчик 23. <p> Лучше всего использовать режим 3 канала 2 (порт 42H) микросхемы таймера {<a href="211.htm">2.1.1</a>}. Сначала установите для счетчика желаемый диапазон случайных чисел (в примере используется 10000, что приводит к выдаче случайного числа в диапазоне от 0 до 9999). Затем, чтобы получить из канала случайное число, надо подать команду командному регистру микросхемы таймера через порт 43H перенести текущее значение счетчика в регистр "задвижки", для чего надо сбросить биты 4 и 5. Этот перенос в регистр задвижки не мешает продолжающемуся счету. Затем установите оба бита 4 и 5 командного регистра, чтобы процессор мог читать из регистра задвижки. После этого две инструкции IN дадут сначала младший, а затем старший байт в регистре AL. Hаконец, восстановите первоначальное значение регистра задвижки, чтобы счет продолжался в пределах указанного диапазона времени. <table align="center"> <tr><td></td><td>;---установка адресов портов</td></tr> <tr><td>COMMAND_REG EQU 43H </td><td>;адрес командного регистра</td></tr> <tr><td>CHANNEL_2 EQU 42H </td><td>;адрес канала 2</td></tr> <tr><td>CALL SET_COUNT </td><td>;установка диапазона</td></tr> <tr><td>.</td><td></td></tr> <tr><td></td><td>;---здесь программа работает, а затем требует случайное число</td></tr> <tr><td>.</td><td></td></tr> <tr><td>CALL GET_NUMBER </td><td>;получение случайного числа</td></tr> <tr><td>.</td><td></td></tr> <tr><td>.</td><td></td></tr> <tr><td></td><td>;---начинаем отсчет канала 2</td></tr> <tr><td>SET_COUNT PROC</td><td></td></tr> <tr><td>MOV AL,10110110B </td><td>;канал 2, режим 2, оба байта</td></tr> <tr><td>OUT COMMAND_REG,AL </td><td>;посылаем в командный регистр</td></tr> <tr><td>MOV AX,10000 </td><td>;значение счетчика</td></tr> <tr><td>OUT CHANNEL_2,AL </td><td>;посылаем младший байт</td></tr> <tr><td>MOV AL,AH </td><td>;передвигаем старший байт в AL</td></tr> <tr><td>OUT CHANNEL_2,AL </td><td>;посылаем старший байт</td></tr> <tr><td>RET</td><td></td></tr> <tr><td>SET_COUNT ENDP</td><td></td></tr> <tr><td></td><td>;---получение случайного числа</td></tr> <tr><td>READ_NUMBER PROC</td><td></td></tr> <tr><td></td><td>;---пересылаем значение счетчика в регистр задвижки</td></tr> <tr><td>MOV AL,10000110B </td><td>;требуемая команда</td></tr> <tr><td>OUT COMMAND_REG,AL </td><td>;посылаем в командный регистр</td></tr> <tr><td></td><td>;---читаем значение счетчика</td></tr> <tr><td>MOV AL,10110110B </td><td>;запрос на чтение/запись</td></tr> <tr><td>OUT COMMAND_REG,AL </td><td>;посылаем запрос</td></tr> <tr><td>IN AL,CHANNEL_2 </td><td>;получаем младший байт</td></tr> <tr><td>MOV AH,AL </td><td>;временно храним его в AH</td></tr> <tr><td>IN AL,CHANNEL_2 </td><td>;получаем старший байт</td></tr> <tr><td>CALL SET_COUNT </td><td>;восстанавливаем задвижку</td></tr> <tr><td>SWAP AH,AL </td><td>;ставим байты на место</td></tr> <tr><td>RET </td><td>;теперь случайное число в AX</td></tr> <tr><td>READ_NUMBER ENDP</td><td></td></tr> </table> 