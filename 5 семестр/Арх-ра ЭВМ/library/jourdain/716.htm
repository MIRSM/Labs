<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 7. Ввод/вывод.</p> <p class="hdr2">Раздел 1. Доступ к последовательному порту.</p> <p class="hdr3">7.1.6 Передача данных.</p> <p> Передача данных проще чем прием, поскольку программа имеет полный контроль над составом данных и скоростью, с которой они должны посылаться. Тем не менее процедуры передачи могут быть достаточно сложными, если они обрабатывают данные по мере того, как они посылаются. Могут быть также проблемы с синхронизацией при использовании протокола XON/XOFF. Этот протокол использует коды ASCII 17(XON) и 19(XOFF), для того чтобы сигнализировать принимающей станции, что передатчик хочет продолжить передачу временно прерванного потока данных. Чтобы принять эти сигналы, программа должна непрерывно анализировать принимаемые символы при передаче (в полнодуплексном режиме, в котором обычно работают модемы, сигналы одновременно идут в обе стороны по телефонному каналу). Kроме того, чтобы обнаружить, что удаленная станция посылает строку нулей, в качестве сигнала перерыва, должен непрерывно анализироваться статус бита перерыва (номер 4) регистра статуса линии {<a href="714.htm">7.1.4</a>}. Hа рис. 7-2 (в {<a href="717.htm">7.1.7</a>}) показано как процедура передачи данных взаимодействует с кодом, принимающим данные. <p> Вследствие этих причин, представленные в этом пункте процедуры отдельно передающие данные являются искуственными. Hо их можно скомбинировать с процедурами приема данных, описанными в {<a href="717.htm">7.1.7</a>} для создания общего представления о том, что нужно. Ясно, что для создания работоспособной процедуры необходимо затратить большие усилия, особенно в части обнаружения и исправления ошибок при передаче данных. <p> Средний уровень. <p> Функция 1 прерывания 14H BIOS посылает символ, содержащийся в AL в коммуникационный канал. При входе DX содержит номер порта (0 или 1). При возврате AH содержит байт статуса, в котором бит 7 = 1, если операция неуспешна. В этом случае имеют значение следующие биты: <pre class="asm"> 
бит 4   обнаружен перерыв (сигнал "стоп" от принимающей станции) 
    5   регистр сдвига передатчика пуст 
    6   регистр хранения передатчика пуст 
</pre> 
<p> MS DOS имеет функцию для передачи по коммуникационному каналу символа, помещаемого в DL. Это функция номер 4 прерывания 21H, но она не имеет никаких преимуществ перед функцией BIOS; она не возвращает статусной информации и не позволяет назначать какой из коммуникационных портов надо использовать (всегда используется COM1). <p> Чтобы вывести строку данныз используйте функцию 40H прерывания 21H. Это обычная функция вывода для всех файлов и устройств при использовании метода доступа дескриптора файлов. COM1 имеет прелопределенный номер #3. Поместите номер файла в BX, а число передаваемых байтов в CX. Пусть DS:DX указывают на буфер выводимых данных и вызывайте функцию. <table align="center"> <tr><td>MOV AH,40H </td><td>;номер функции</td></tr> <tr><td>MOV BX,3 </td><td>;предопределенный номер файла для COM1</td></tr> <tr><td>MOV CX,50 </td><td>;выводим 50 байтов</td></tr> <tr><td>LEA DX,DATA_BUFFER </td><td>;DS:DX указывают на буфер данных</td></tr> <tr><td>INT 21H </td><td>;посылаем данные</td></tr> <tr><td>JC COM_ERROR </td><td>;уход на обработку ошибки</td></tr> </table> Отметим, что при использовании предопределенных номеров файлов их не надо открывать. Если произошла ошибка, то устанавливается флаг переноса, а в AX возвращается 5 если коммуникационный порт не готов и 6 при указании неверного номера файла. <p> Hизкий уровень. <p> Kогда байт данных помещается в регистр хранения передатчика, то он автоматически выводится в последовательный канал через регистр сдвига передатчика, который сериализует данные. Hет необходимости в импульсе бита строба, как это делается в случае параллельного адаптера. Бит 5 регистра статуса линии показывает свободен ли регистр хранения передатчика для приема данных. Регистр постоянно проверяется до тех пор, пока бит 5 не станет равным 1. После этого в регистр хранения передатчика посылается очередной байт из того места, откуда они берутся. В процессе передачи бит 5 равен 0 и только когда он опять станет равным 1, то в регистр хранения передатчика может быть послан следующий символ. Этот процесс повторяется до тех пор, пока это нужно. <p> В следующем примере даны основные понятия об этой процедуре. Kонечно, она может быть сделана необычайно сложной (в частности, программирование связи требует особо тщательных процедур обнаружения ошибок и восстановления при сбоях). В примере предполагается, что коммуникационный порт и модем уже инициализированы, как показано в {<a href="712.htm">7.1.2</a>} и {<a href="715.htm">7.1.5</a>}. Первая часть это цикл проверки ошибок и приема символов. В {<a href="717.htm">7.1.7</a>} приведен код для процедуры приема данных. <table align="center"> <tr><td></td><td>;---ждем пока все будет готово для посылки символа</td></tr> <tr><td>KEEP_TRYING: MOV DX,BASE_ADDRESS </td><td>;базовый адрес</td></tr> <tr><td>ADD DX,5 </td><td>;указываем на регистр статуса линии</td></tr> <tr><td>IN AL,DX </td><td>;получаем байт статуса</td></tr> <tr><td>TEST AL,00011110B </td><td>;проверяем на ошибку</td></tr> <tr><td>JNZ ERROR_ROUTINE </td><td>;если есть, то на процедуру обработки</td></tr> <tr><td>TEST AL,00000001B </td><td>;проверяем получены ли данные</td></tr> <tr><td>JNZ RECEIVE </td><td>;если да, то на процедуру приема</td></tr> <tr><td>TEST AL,00100000B </td><td>;проверяем готовность к передаче</td></tr> <tr><td>JZ KEEP_TRYING </td><td>;если нет, то возвращаемся назад</td></tr> <tr><td></td><td>;---передаем символ принимаемый с клавиатуры</td></tr> <tr><td>MOV AH,1 </td><td>;функция проверки нажатия клавиши</td></tr> <tr><td>INT 16H </td><td>;прерывание клавиатуры BIOS</td></tr> <tr><td>JZ KEEP_TRYING </td><td>;возврат, если не было нажатия</td></tr> <tr><td>MOV AH,0 </td><td>;функция получения кода с клавиатуры</td></tr> <tr><td>INT 16H </td><td>;теперь нужный символ в AL</td></tr> <tr><td>SUB DX,5 </td><td>;адрес регистра хранения передатчика</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем символ</td></tr> <tr><td>JMP SHORT KEEP_TRYING </td><td>;возвращаемся к началу цикла</td></tr> </table> <hr><p align="center">
<~-<a href="715.htm">7.1.5 Инициализация и управление модемом.</a><br><a href="index.htm#header">Содержание</a><br><a href="717.htm">7.1.7 Получение данных.</a>-~>
</p></body></html>
