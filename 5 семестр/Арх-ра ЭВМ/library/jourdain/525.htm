<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 5. Дисковые накопители.</p> <p class="hdr2">Раздел 2. Работа с каталогами диска.</p> <p class="hdr3">5.2.5 Получение/установка времени и даты последнего доступа к файлу.</p> <p> Если отсчитывать от нуля, то байты 22-23 32-байтного элемента каталога содержат время последнего доступа к файлу. Байты 24-25 содержат дату. Значение битов следующее: <pre class="asm"> 
Время:  биты 11-15    часы (0-23) 
              5-10    минуты (0-59) 
               0-4    секунды (0-29 с 2-секундным интервалом) 
Дата:   биты  9-15    год (0-119, смещение с 1980 года) 
               5-8    месяц (1-12) 
               0-4    число (1-31) 
</pre> 
День недели не записывается; DOS вычисляет его по остальной информации. Отметим также, что как всегда, младший байт этих 2-байтных значений расположен раньше в памяти, чем старший. <p> Средний уровень. <p> Метод доступа к файлу с использованием управляющего блока файла позволяет получить дату последнего доступа к файлу, но не время. Kогда FCB открывается функцией 0FH прерывания 21H, то заполняется двухбайтное поле даты в вышеприведенном формате. Это поле расположено в FCB со смещением 14H {<a href="535.htm">5.3.5</a>}. <p> С другой стороны, доступ к файлу с помощью дескриптора файла позволяет как получить, так и установить дату и время последнего доступа к файлу. Функция 57H прерывания 21H выполняет все операции. Для установки времени и даты поместите номер файла в BX, и 0 в AL. Для получения даты и времени надо поместить в AL 1. В обоих случаях дата содержится в DX, а время в CX. Значение битов совпадает с тем, что описано в таблице. В техническом руководстве по MS DOS утверждается, что младшие байты информации находятся в CH и DH, и наоборот. Hа самом деле это не так. При возникновении ошибки устанавливается флаг переноса, а в AX возвращается 1, если в AL указано неправильное число и 6, если плохой дескриптор файла. В следующем примере определяется час, в который был последний лоступ к файлу: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>PATH DB 'B:NEWDATA.BAK',0 </td><td>;---открываем файл</td></tr> <tr><td>LEA DX,PATH </td><td>;указываем на строку пути</td></tr> <tr><td>MOV AH,3DH </td><td>;функция открытия файла</td></tr> <tr><td>MOV AL,0 </td><td>;открываем для чтения</td></tr> <tr><td>INT 21H </td><td>;открываем файл</td></tr> <tr><td>JC OPEN_ERROR </td><td>;переход на обработку ошибки</td></tr> <tr><td></td><td>;---получаем дату и время доступа к файлу</td></tr> <tr><td>MOV BX,AX </td><td>;помещаем номер файла в BX</td></tr> <tr><td>MOV AL,0 </td><td>;код для чтения времени</td></tr> <tr><td>MOV AH,57H </td><td>;номер функции</td></tr> <tr><td>INT 21H </td><td>;получаем время доступа</td></tr> <tr><td>JC TIME_ERROR </td><td>;переход на обработку ошибок</td></tr> <tr><td></td><td>;---сдвигаем биты, относящиеся к часам, в начало CH</td></tr> <tr><td>MOV CL,3 </td><td>;готовим сдвиг</td></tr> <tr><td>SHR CH,CL </td><td>;теперь CH содержит час доступа</td></tr> </table> <hr><p align="center">
<~-<a href="524.htm">5.2.4 Получение/установка текущего каталога.</a><br><a href="index.htm#header">Содержание</a><br><a href="526.htm">5.2.6 Спрятанные и защищенные от записи файлы.</a>-~>
</p></body></html>
