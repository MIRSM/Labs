<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 5. Дисковые накопители.</p> <p class="hdr2">Раздел 2. Работа с каталогами диска.</p> <p class="hdr3">5.2.1 Чтение/изменение корневого каталога.</p> <p> Kаталоги диска подразделяются на корневой каталог (обсуждаемый здесь) и подкаталоги (обсуждаемые в {<a href="523.htm">5.2.3</a>}). Kогда пользователь программы вводит имя какого-либо файла для работы, то бывает полезным проверить, имеется ли этот файл на самом деле. Обычно изменения в корневом каталоге производятся в ходе обычных файловых операций или с помощью специальных функций DOS. Однако можно работать с каталогом напрямую. Большая нужда в таком подходе возникает при работе на языках высокого уровня, где утилиты DOS по большей части недоступны. <p> Kорневой каталог читается и изменяется загрузкой его в память с использованием подхода, показанного в {<a href="542.htm">5.4.2</a>}, когда читаются абсолютные сектора диска. Эти операции не оставляют места между секторами, когда они загружаются в память. Буфер, содержащий данные сектора, может рассматриваться как набор 32-байтных полей и пара указателей, которые могут использоваться для движения по каталогу. Один указатель всегда кратен 32 и указывает на начало элемента каталога. Второй указатель добавляется к первому и указывает на одно из полей в 32-байтном элементе. Данные в памяти могут быть изменены требуемым образом, а затем весь буфер записывается обратно на диск. <p> Имеется два метода чтения абсолютных секторов диска и в обоих случаях только одно число отличает случаи чтения и записи. Поскольку ошибка при записи на диск может легко повредить все содержимое диска, то надо действовать аккуратно. Сначала убедитесь, что операция чтения сектора выполнена верно во всех отношениях. После этого можно попробовать записать на диск, взяв точную копию кода, использованного для чтения и заменив только номер функции. <p> Средний уровень. <p> MS DOS обеспечивает две пары функций для поиска файлов, одна для файлов, открытых методом управляющих блоков файла, а другая для файлов, открытых методом дескриптора файлов. Одна из функций каждой пары ищет первое появление имени файла в каталоге, а другая ищет последующие появления, когда в имени файла содержатся джокеры. Только метод, использующий дескриптор файла позволяет искать подкаталоги. Метод FCB: <p> Функция 11H прерывания 21H ищет первое появление файла. Установите DS:DX на неоткрытый FCB и выполните функцию. При возврате AL будет содержать 0, если файл найден, и FF - если нет. DTA заполняется информацией из каталога. Для обычных FCB первый байт DTA содержит номер накопителя (1 = A и т.д.), а следующие 32 байта содержат элемент каталога. Для расширенного FCB первые 7 байтов файла копируются в первые 7 байтов расширенного FCB, восьмой байт указывает на накопитель, а следующие 32 байта - элемент каталога. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>FCB DB 1,'NEWDATABAK',25DUP(0)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---ищем файл</td></tr> <tr><td>MOV AH,11H </td><td>;функция поиска в каталоге</td></tr> <tr><td>LEA DX,FCB </td><td>;указываем на FCB</td></tr> <tr><td>INT 21H </td><td>;ищем</td></tr> <tr><td>CMP AL,0 </td><td>;успешно?</td></tr> <tr><td>JNE NO_FILE </td><td>;если нет, то процедура обработки ошибки</td></tr> <tr><td>LEA BX,DTA </td><td>;теперь DS:BX указывает на элемент каталога</td></tr> </table> <p> После использования функции 11H можно использовать функцию 12H для поиска следующих подходящих элементов, когда имя файла содержит джокеры. В данном случае в имени файла допустим только символ "?", но не "*". Эта функция работает в точности так же, как и первая, и если найден второй файл, то информация о первом файле в DTA будет уничтожена повторной записью. Метод дескриптора файлов: <p> Функция 4EH прерывания 21H ищет файл с данным именем. DS:DX должны указывать на строку, дающую путь файла. Hапример, B:\EUROPE\FRANCE\PARIS указывает на файл PARIS. Строка может содержать до 63 символов и завершаться символом ASCII 0. Имя файла может содержать джокеры, включая как "?", так и "*". Поместите атрибут файла в CX; если он обычный то 0, в противном случае проконсультируйтесь в {<a href="526.htm">5.2.6</a>} относительно значений атрибута. <p> При возврает устанавливается флаг переноса, если файл не найден. Если файл найден, то функция заполняет DTA информацией о файле. Отметим частный случай использования DTA методом дескриптора файлов - обычно, DTA используется функциями MS DOS для работы через FCB. Первые 21 байт DTA зарезервированы DOS для поиска следующих совпадающих файлов. Двадцать второй байт дает атрибут файла, за ним следуют два байта, содержащие время и еще два байта содержащие дату. Следующие 4 байта содержат размер файла (младшее слово сначала). И, наконец, дается имя файла в виде строки переменной длины, заканчивающейся байтом ASCII 0. Точка (ASCII 46) разделяет имя и расширение и не один из этих элементов не заполнен пробелами. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>PATH DB 'B:FRANCE\PARIS\4EME',0</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---ищем файл</td></tr> <tr><td>MOV AH,4EH </td><td>;номер функции</td></tr> <tr><td>LEA DX,PATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>MOV CX,0 </td><td>;обычный атрибут файла</td></tr> <tr><td>INT 21H </td><td>;ищем файл</td></tr> <tr><td>JC NO_FILE </td><td>;уход, если не найден</td></tr> <tr><td>LEA BX,DTA </td><td>;DS:BX указывают на DTA</td></tr> <tr><td>MOV AL,[BX]+21 </td><td>;теперь атрибут файла в AL</td></tr> </table> <p> Следующее появление имени файла (когда используются джокеры) ищется с помощью функции 4FH прерывания 21H. Она готовится в точности так же, как и функция 4EH, при этом указатель DTA не должен меняться. Kогда других совпадений не найдено, то устанавливается флаг переноса, а в AX появляется 18. <hr><p align="center">
<~-<a href="520.htm">Раздел 2. Работа с каталогами диска.</a><br><a href="index.htm#header">Содержание</a><br><a href="522.htm">5.2.2 Создание/удаление подкаталога.</a>-~>
</p></body></html>
