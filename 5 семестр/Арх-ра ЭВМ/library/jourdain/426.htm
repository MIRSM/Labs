<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 4. Вывод на терминал.</p> <p class="hdr2">Раздел 2. Управление курсором.</p> <p class="hdr3">4.2.6 Создание альтернативных типов курсора.</p> <p> Все прерывания операционной системы, связанные с выводом на экран, используют курсор. Вы можете изменить форму курсора с помощью техники показанной в {<a href="424.htm">4.2.4</a>} или сделать курсор невидимым {<a href="423.htm">4.2.3</a>}. Возможны альтернативные типы курсора, когда вывод на экран осуществляется с помощью метода прямого отображения в память {<a href="431.htm">4.3.1</a>}. При этом "истинный" курсор выключается, поскольку он не будет адресовать символы в определенную позицию видеобуфера. Вместо этого создается "фальшивый" курсор с помощью байта атрибутов. <p> Hаиболее эффективным методом является установка атрибута вывода в негативе для символа, на который указывает курсор. Для черно-белого экрана для этого атрибута следует использовать код ASCII 112. Другой способ - заставить символ, на который указывает курсор мигать. В этом случае надо просто добавить 128 к текущему значению атрибута, чтобы символ начал мигать, и вычесть 128, чтобы прекратить мигание. Третий способ - установить для символа режим подчеркивания (используя код ASCII 1). И, наконец, в программах использующих командную строку можно рассмотреть возможность использования специального графического символа, который следует за последним символом командной строки, такого как стрелки выводимые кодами ASCII 17 или 27. Отметим, что когда программа получает ввод в нескольких режимах, то Вы можете помочь идентифицировать текущий режим за счет особого типа курсора. <p> Hизкий уровень. <table align="center"> <tr><td></td><td>;---процедура перемещения курсора на одну позицию вправо</td></tr> <tr><td>CURSOR_RIGHT: MOV BX,CURSORPOSITION </td><td>;получение позиции</td></tr> <tr><td>INC BX </td><td>;указываем на атрибут символа</td></tr> <tr><td>MOV AL,FORMERATTRIBUTE </td><td>;берем сохраненный атрибут</td></tr> <tr><td>MOV ES:[BX],AL </td><td>;восстанавливаем его</td></tr> <tr><td>INC BX </td><td>;указываем на следующий символ</td></tr> <tr><td>MOV CURSORPOSITION,BX </td><td>;сохраняем его смещение</td></tr> <tr><td>MOV AL,ES:[BX]+1 </td><td>;получаем атрибут нового символа</td></tr> <tr><td>MOV FORMERATTRIBUTE,AL </td><td>;сохраняем его </td></tr> <tr><td>MOV AL,112 </td><td>;помещаем атрибут вывода в негативе</td></tr> <tr><td>MOV ES:[BX]+1,AL </td><td>;засылаем его для следующего символа</td></tr> </table> <hr><p align="center">
<~-<a href="425.htm">4.2.5 Чтение/сохранение/восстановление позиции курсора.</a><br><a href="index.htm#header">Содержание</a><br><a href="430.htm">Раздел 3. Вывод символов на экран.</a>-~>
</p></body></html>
