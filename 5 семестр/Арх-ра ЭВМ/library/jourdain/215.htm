<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 2. Таймеры и звук.</p> <p class="hdr2">Раздел 1. Установка и чтение таймера.</p> <p class="hdr3">2.1.5 Задержка программных операций.</p> <p> Если Вы осуществляете задержку в программе посредством пустого цикла, то Вам может потребоваться много времени для того, чтобы добиться нужного времени задержки. Даже если Вы определите требуемую длительность, то нельзя быть уверенным, что Ваша программа будет давать нужное время задержки при всех условиях. Длительность цикла может меняться в зависимости от используемого компилятора (или, для Бейсика, от того, компилируется программа или нет). А в наше время, когда имеется большой набор машин совместимых с IBM PC - имеющих широкий диапазон скорости процессора даже цикл на языке ассемблера может приводить к различным временам задержки. Поэтому разумно определять время программной задержки непосредственно по часам. Частота отсчета 18.2 раза в секунду, используемая для модификации счетчика времени суток, должна вполне удовлетворять большинство потребностей (как увеличить частоту отсчетов см. {<a href="211.htm">2.1.1</a>}). <p> Чтобы обеспечить задержку данной продолжительности, программа должна подсчитать требуемое число импульсов счетчика времени суток. Это значение добавляется к считанному текущему значению счетчика. Затем программа постоянно считывает значение счетчика и сравнивает его с запомненным. Kогда достигается равенство, то требуемая задержка прошла и можно продолжать выполнение программы. Четыре байта, в которых хранится значение счетчика времени суток хранятся, начиная с адреса 0040:006C (как обычно, начиная с младшего байта). Для задержек меньших 14 секунд можно пользоваться только младшим байтом. Два младших байта позволяют задержки до одного часа (точнее, на пол-секунды меньше, чем час). <p> Средний уровень. <p> Прочитайте значение счетчика времени суток BIOS, используя функцию 0 прерывания 1AH и добавьте к нему необходимое число импульсов по 1/18 секунды. После этого считывайте текущие значения счетчика времени суток, постоянно сравнивая с требуемой величиной. При достижении равенства надо кончать задержку. Прерывание 1AH возвращает два младших байта в DX (большинство задержек укладываются в этих пределах), поэтому два старших байта, возвращаемые в CX, могут игнорироваться, что позволит Вам избежать 32-байтных операций. В данном примере установлена задержка на 5 секунд, что соответствует 91 отсчету. <table align="center"> <tr><td></td><td>;---получение значения счетчика и установка задержки</td></tr> <tr><td>MOV AH,0 </td><td>;номер функции для "чтения"</td></tr> <tr><td>INT 1AH </td><td>;получаем значение счетчика</td></tr> <tr><td>ADD DX,91 </td><td>;добавляем 5 сек. к младшему слову</td></tr> <tr><td>MOV BX,DX </td><td>;запоминаем требуемое значение в BX</td></tr> <tr><td></td><td>;---постоянная проверка значения счетчика времени суток BIOS</td></tr> <tr><td>REPEAT: INT 1AH </td><td>;получаем значение счетчика</td></tr> <tr><td>CMP DX,BX </td><td>;сравниваем с искомым</td></tr> <tr><td>JNE REPEAT </td><td>;если неравен, то повторяем снова</td></tr> <tr><td></td><td>;иначе, задержка окончена</td></tr> </table> AT имеет добавочную функцию прерывания 15H, которая позволяет осуществить задержку на указанное время. Поместите 86H в AH, а число микросекунд задержки в CX:DX. После этого выполните прерывание. <hr><p align="center">
<~-<a href="214.htm">2.1.4 Установка/чтение часов реального времени.</a><br><a href="index.htm#header">Содержание</a><br><a href="216.htm">2.1.6 Операции запрограммированные во времени.</a>-~>
</p></body></html>
