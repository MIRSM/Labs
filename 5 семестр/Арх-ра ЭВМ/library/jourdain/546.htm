<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 5. Дисковые накопители.</p> <p class="hdr2">Раздел 4. Чтение и запись файла.</p> <p class="hdr3">5.4.6 Чтение из файлов прямого доступа.</p> <p> Чтение файлов прямого доступа является обратным процессом по отношению к их записи. MS DOS вычисляет позицию в файле на диске, затем считывает запись и помещает ее в память. Затем программа должна разделить запись на поля в точности того же размера, который был использован при конструировании записи. Hе забудьте удалить символы пробела, добавленные при заподнении полей. Обсуждение записи данных в файлы прямого доступа {<a href="545.htm">5.4.5</a>} содержит информацию, которая поможет Вам лучше понять информацию данного раздела. <p> Средний уровень. <p> Метод FCB доступа к файлам имеет две функции для чтения записей с прямым доступом. С другой стороны, метод дескриптора файлов использует ту же функцию, что и для чтения последовательных файлов. Два метода доступа рассматриваются отдельно. Метод FCB: <p> Функция 21H прерывания 21H читает одну запись из файла прямого доступа. Вторая функция, 27H, читает блок последовательных записей. Создайте управляющий блок файла, как показано в {<a href="535.htm">5.3.5</a>} и откройте его {<a href="533.htm">5.3.3</a>}. После того как FCB открыт, введите в него значения полей размера записи (DW по смещению 14) и номера записи прямого доступа (DD по смещению 33). Если DS:DX указывают на первый байт FCB, то можно вызывать функцию 21H для чтения записи и запись будет помещена в паямть, начиная с первого байта DTA. <p> Если запись успешно прочитана, то в AL будет возвращен 0. Однако при этом нет гарантии, что чтение прошло без ошибок, поскольку неверный размер записи может привести к тому, что части прилегающих записей будут считаны, как будто это одна запись. Если запрошена запись с номером большим, чем число записей в файле, то в AL будет возвращено 1 или 3. Если был возвращен код 3, то был считан самый конец файла и была прочитана часть записи данных. Если был возвращен код 1, то данные вообще не были считаны. <p> Данный пример считывает одну запись и помещает ее в DTA: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>FCB DB 1,'OLDDATA ', 25 DUP (0)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---открываем файл и устанавливаем поля FCB</td></tr> <tr><td>MOV AH,0FH </td><td>;номер функции</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>MOV BX,DX </td><td>;копируем смещение FCB</td></tr> <tr><td>INT 21H </td><td>;открываем файл</td></tr> <tr><td>MOV AX,55 </td><td>;размер записи 55 байтов</td></tr> <tr><td>MOV [BX]+14,AX </td><td>;помещаем в поле размера записи</td></tr> <tr><td>MOV AX,22 </td><td>;номер записи для чтения</td></tr> <tr><td>MOV [BX]+33,AX </td><td>;помещаем в поле номера записи</td></tr> <tr><td>MOV AX,0 </td><td>;обнуляем старшее слово этого поля</td></tr> <tr><td>MOV [BX]+35,AX </td><td>;</td></tr> <tr><td></td><td>;---перенос данных из файла в DTA</td></tr> <tr><td>MOV AH,21H </td><td>;номер функции чтения с прямым доступом</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>INT 21H </td><td>;читаем данные, помещая их в DTA</td></tr> <tr><td>CMP AL,0 </td><td>;проверка на ошибку</td></tr> <tr><td>JNE READ_ERROR </td><td>;</td></tr> <tr><td></td><td>;---позднее, закрываем файл</td></tr> <tr><td>MOV AH,10 </td><td>;номер функции закрытия файла</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>INT 21H </td><td>;закрываем файл</td></tr> <tr><td></td><td></td></tr> </table> <p> Для чтения блока последовательных записей в память за один прием надо использовать функцию 27H прерывания 21H. Ее выполнение подготавливается в точности так же, как и функции 21H, за исключением того, что вдобавок CX должен содержать число записей которые надо прочитать за один прием. При возврате CX будет содержать число реально прочитанных записей. Значения возвращаемые в AL совпадают с теми, которые возвращаеются функцией 21H. В отличии от функции 21H поля FCB, в которых хранится информация о положении записи (поле записи прямого доступа, текущего блока и текущей записи) автоматически увеличиваются, с тем чтобы они указывали на следующую несчитанную запись после выполнения функции. <p> Отметим, что как в случае чтения одной, так и в случае чтения нескольких записей, поля текущего блока и текущей записи FCB устанавливаются по значению поля записи прямого доступа. Если Вы знаете значение текущего блока и текущей записи, а не соответствующий номер записи прямого доступа, то используйте функцию 24H прерывания 21H, чтобы она проделала вычисления за Вас. У этой функции нет входных регистров, надо только, чтобы DS:DX указывали на открытый FCB. При возврате поле записи прямого доступа будет заполнено значением, соответствующим установке двух других полей. <p> Метод дескриптора файлов: <p> В предыдущем разделе показано, как писать записи прямого доступа с помощью метода дескриптора файлов. Процедура чтения из файла с прямым доступом подготавливается совершенно аналогичным образом, путем вычисления смещения в файле, на которое должен указывать файловый указатель. DS:DX должны указывать на буфер, в который будет помещена запись, после чего надо выполнить функцию 3FH прерывания 21H. При входе CX должен содержать размер записи, а BX - номер файла. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>HANDLE DB ?</td><td></td></tr> <tr><td>FILEPATH DB 'A:OLDDATA',0</td><td></td></tr> <tr><td>REC_BUFFER DB 30 DUP(?)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---открываем файл</td></tr> <tr><td>MOV AH,3DH </td><td>;номер функции</td></tr> <tr><td>MOV AL,0 </td><td>;код открытия для чтения</td></tr> <tr><td>LEA DX,FILEPATH </td><td>;DS:DX указывают на путь к файлу</td></tr> <tr><td>INT 21H </td><td>;открываем файл</td></tr> <tr><td>JC OPEN_ERROR </td><td>;проверка на ошибку</td></tr> <tr><td>MOV HANDLE,AX </td><td>;запоминаем номер файла</td></tr> <tr><td></td><td>;---вычисляем позицию записи и устанавливаем файловый указатель</td></tr> <tr><td>MOV AX,30 </td><td>;размер записи</td></tr> <tr><td>MOV CX,54 </td><td>;читаем запись #54 (55-ю запись)</td></tr> <tr><td>MUL CX </td><td>;смещение записи в DX:AX</td></tr> <tr><td>MOV CX,DX </td><td>;помещаем старшее слово смещения в DX</td></tr> <tr><td>MOV DX,AX </td><td>;помещаем младшее слово смещения в CX</td></tr> <tr><td>MOV AL,0 </td><td>;устанавливаем указатель на начало файла</td></tr> <tr><td>MOV AH,42H </td><td>;функция установки указателя</td></tr> <tr><td>MOV BX,HANDLE </td><td>;номер файла</td></tr> <tr><td>INT 21H </td><td>;устанавливаем указатель</td></tr> <tr><td>JC POINTER_ERROR </td><td>;обработка ошибки</td></tr> <tr><td></td><td>;---читаем запись с прямым доступом</td></tr> <tr><td>MOV AH,3FH </td><td>;номер функции</td></tr> <tr><td>MOV BX,HANDLE </td><td>;номер файла</td></tr> <tr><td>MOV CX,30 </td><td>;размер записи</td></tr> <tr><td>LEA DX,REC_BUFFER </td><td>;DS:DX указывают на буфер для записи</td></tr> <tr><td>INT 21H </td><td>;читаем запись</td></tr> <tr><td>JC READ_ERROR </td><td>;обработка ошибки</td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---позднее, закрываем файл</td></tr> <tr><td>MOV BX,HANDLE </td><td>;номер файла</td></tr> <tr><td>MOV AH,3EH </td><td>;функция закрытия файла</td></tr> <tr><td>INT 21H </td><td>;закрываем файл</td></tr> <tr><td>JC CLOSE_ERROR </td><td>;проверка на ошибку</td></tr> </table> <hr><p align="center">
<~-<a href="545.htm">5.4.5 Запись в файлы прямого доступа.</a><br><a href="index.htm#header">Содержание</a><br><a href="547.htm">5.4.7 Проверка данных после операций чтения/записи.</a>-~>
</p></body></html>
