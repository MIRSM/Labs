<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 7. Ввод/вывод.</p> <p class="hdr2">Раздел 3. Использование специальных устройств ввода/вывода.</p> <p class="hdr3">7.3.4 Получение цифрового ввода из игрового порта.</p> <p> Игровой порт поддерживает два джойстика или четыре "весла", а также ряд графических устройств. При этом может определяться статус до четырех кнопок устройств. Проверка состояния кнопок может быть сложным делом, поскольку программа может не иметь возможности постоянно проверять их, а кнопка может быть нажата и отпущена, пока программа занята другими делами. Может быть создана специальная процедура для решения этой проблемы. Статус кнопок автоматически читается несколько раз в секунду, без специального запроса на это программы; когда оказывается, что кнопка нажата, то управдение передается процедуре, которая определяет какая кнопка нажата и предпринимает нужные действия. <p> Средний уровень. <p> Только AT предоставляет поддержку джойстика на уровне операционной системы. Функция 84H прерывания 15H возвращает установку кнопок в битах 4-7 регистра AL, как показано ниже. При входе DX должен содержать 0; когда DX содержит 1, то вместо этого возвращаются координаты джойстика {<a href="733.htm">7.3.3</a>}. При возврате регистр переноса устанавливается, когда машина не имеет игрового порта. <table align="center"> <tr><td></td><td>;---проверяем кнопку #2 джойстика B (бит 7)</td></tr> <tr><td>MOV AH,84H </td><td>;номер функции</td></tr> <tr><td>MOV DX,0 </td><td>;запрос состояния кнопок</td></tr> <tr><td>INT 15H </td><td>;вызов функции</td></tr> <tr><td>JC NO_JOYSTICK </td><td>;если нет джойстика, то на выход</td></tr> <tr><td>TEST AL,10000000B </td><td>;проверяем бит 7</td></tr> <tr><td>JNZ BUTTON_DOWN </td><td>;переход если кнопка нажата</td></tr> </table> <p> Hизкий уровень. <p> Биты 7-4 порта с адресом 201H содержат статус кнопок, связанных с игровым портом. Значение битов меняется в зависимости от того, присоединены ли джойстики или весла: <pre class="asm"> 
Бит          Джойстик                Весло 
 7    Kнопка #2 джойстика B     Kнопка весла D 
 6    Kнопка #1 джойстика B     Kнопка весла C 
 5    Kнопка #2 джойстика A     Kнопка весла B 
 4    Kнопка #1 джойстика A     Kнопка весла A 
</pre> 
Программе нужно просто прочитать значение из порта и проверить установку соответствующих битов: <pre class="asm"> 
   MOV  DX,201H         ;адрес порта игрового адаптера 
   IN   AL,DX           ;получаем значение из него 
   TEST AL,0010B        ;проверяем бит 1 (кнопка A2 нажата?) 
   JNZ  BUTTON_A2       ;если да, то на процедуру обработки 
</pre> 
Программа имеет обычно более важные дела, чем постоянно проверять игровой порт, однако настолько же быссмысленно время от времени проверять порт, рассовывая процедуру по разным частям программы. Чтобы получить эффект отлова нажатия кнопок, аналогичный описанному в Бейсике, Вам придется создать дополнение к прерыванию времени суток, как описано в {<a href="217.htm">2.1.7</a>}. Прерывание обычно выполняется 18.2 раза в секунду и каждый раз Вы можете проверять игровой порт и предпринимать нужные действия при необходимости. <hr><p align="center">
<~-<a href="733.htm">7.3.3 Получение аналогового ввода через игровой порт.</a><br><a href="index.htm#header">Содержание</a><br><a href="800.htm">Приложения.</a>-~>
</p></body></html>
