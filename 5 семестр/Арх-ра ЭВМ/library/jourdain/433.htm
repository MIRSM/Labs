<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 4. Вывод на терминал.</p> <p class="hdr2">Раздел 3. Вывод символов на экран.</p> <p class="hdr3">4.3.3 Чтение символа и его атрибутов в данной позиции.</p> <p> Обычно программа получает данные из своих переменных и помещает их в видеобуфер для вывода на экран. В некотором смысле программа "знает" что на экране. Hо встречаются ситуации, в которых сам видеобуфер используется как рабочая область (например, в графиченских программах вырезки и вставки) и текущее содержимое экрана не записано в памяти программы. В этих случаях бывает необходимо прочитать с экрана, виесто того чтобы вывести на него. Функция BIOS позволяет прочитать символ и его атрибуты в определенной позиции экрана; другой метод состоит в обращении метода прямого отображения в память дисплея {<a href="431.htm">4.3.1</a>}. Чтобы прочитать символ и атрибуты в строке 0 и столбце 39 (1,40 в Бейсике) в режиме 80 символов в строке надо сложить (0*160) плюс (39*2) и взять результат в качестве смешения в видеобуфере. В случае когда нужны смещения для различных страниц см. {<a href="453.htm">4.5.3</a>}. Имейте ввиду, что обращение метода прямого отображения в память не будет работать в случае вывода символов в графическом режиме. <p> Средний уровень. <p> Функция 8 прерывания 10H возвращает символ и его атрибуты для текущей позиции курсора. В BH должен содержаться номер текущей страницы дисплея (отсчитываемый от 0 и всегда равный 0 для монохромного дисплея). Kод символа возвращается в AL, а байт атрибутов в AH. Эта функция настолько мощная, что способна даже читать символы в графическом режиме, сообщая цвет палетты в AH. Она работает даже для символов определяемых пользователем {<a href="434.htm">4.3.4</a>}. В примере определяется символ и атрибуты в позиции 0,39 для страницы 2 графического адаптора: <table align="center"> <tr><td></td><td>;---установка позиции курсора</td></tr> <tr><td>MOV AH,2 </td><td>;функция установки курсора</td></tr> <tr><td>MOV DH,0 </td><td>;номер строки</td></tr> <tr><td>MOV DL,39 </td><td>;номер столбца</td></tr> <tr><td>MOV BH,0 </td><td>;номер страницы</td></tr> <tr><td>INT 10H </td><td>;позиционируем курсор</td></tr> <tr><td></td><td>;---чтение символа и атрибутов </td></tr> <tr><td>MOV AH,8 </td><td>;функция чтения символа/атрибутов</td></tr> <tr><td>MOV BH,2 </td><td>;номер страницы</td></tr> <tr><td>INT 10H </td><td>;в AH:AL теперь атрибуты и символ</td></tr> </table> <p> Hизкий уровень. <p> Hадо вычислить смещение и проделать операцию обратную прямой записи в память. При необходимости надо добавить смещение для данной страницы. В примере получаем символ и атрибуты в позиции 7,39 страницы 2 графического адаптора: <table align="center"> <tr><td></td><td>;---чтение символа и атрибутов позиции 7,39 страницы 2</td></tr> <tr><td>MOV AX,0B800H </td><td>;адрес видеобуфера</td></tr> <tr><td>MOV ES,AX </td><td>;ES указывает на первый байт буфера</td></tr> <tr><td>MOV DI,1000H </td><td>;смещение до начала страницы</td></tr> <tr><td>MOV AL,80 </td><td>;умножаем номер строки на 160</td></tr> <tr><td>MOV BL,7 </td><td>;номер строки</td></tr> <tr><td>MUL BL </td><td>;теперь в AX (строка-1)*160</td></tr> <tr><td>MOV AX,39 </td><td>;номер столбца</td></tr> <tr><td>ADD BX,AX </td><td>;номер позиции в видеобуфере</td></tr> <tr><td>SHL BX,1 </td><td>;умножаем его на два</td></tr> <tr><td>MOV AX,ES:[BX][DI] </td><td>;теперь AH:AL содержат атрибуты/символ</td></tr> </table> <hr><p align="center">
<~-<a href="432.htm">4.3.2 Вывод строки символов на экран.</a><br><a href="index.htm#header">Содержание</a><br><a href="434.htm">4.3.4 Создание специальных символов.</a>-~>
</p></body></html>
