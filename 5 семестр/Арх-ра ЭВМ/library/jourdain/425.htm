<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 4. Вывод на терминал.</p> <p class="hdr2">Раздел 2. Управление курсором.</p> <p class="hdr3">4.2.5 Чтение/сохранение/восстановление позиции курсора.</p> <p> Программы иногда читают и сохраняют текущее положение курсора, с тем чтобы можно было временно перевести курсор в командную строку, а затем вернуть его в исходную позицию. Текущая позиция курсора для каждой из вплоть до восьми страниц хранится в области данных BIOS. Имеется восемь 2-байтных переменных, размещающихся начиная с адреса 0040:0050. Первая позиция соответствует странице 0, вторая - странице 1 и т.д. Младший байт каждой переменной содержит номер столбца, а младший - номер строки. Kак столбцы, так и строки нумеруются, начиная с нуля. <p> Средний уровень. <p> Функция 3 прерывания 10H возвращает строку курсора в DH, а столбец - в DL. Hа входе надо поместить в BH номер страницы (всегда 0 для монохромного дисплея). <table align="center"> <tr><td></td><td>;---определение позиции курсора</td></tr> <tr><td>MOV AH,3 </td><td>;номер функции</td></tr> <tr><td>MOV BH,0 </td><td>;страница 0</td></tr> <tr><td>INT 10H </td><td>;строка:столбец в DH:DL</td></tr> </table> <p> MS DOS предоставляет две Esc-последовательности для сохранения и восстановления позиции курсора. Это специальные строки, которые если их "вывести" на терминал управляют монитором. Основы использования этих последовательностей описаны в приложении Д. Последовательность для запоминания позиции курсора - Esc[s, а для восстановления - Esc[u. Hет нужды запоминать координаты в переменной. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>SAVE_CURSOR DB 27,'[s$'</td><td></td></tr> <tr><td>RESTORE_CURSOR DB 27,'[u$'</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---сохранение курсора</td></tr> <tr><td>LEA DX,SAVE_CURSOR </td><td>;адрес начала строки в DX</td></tr> <tr><td>MOV AH,9 </td><td>;номер функции вывода строки</td></tr> <tr><td>INT 21H </td><td>;сохраняем позицию курсора</td></tr> <tr><td></td><td>;---восстановление курсора</td></tr> <tr><td>LEA DX,RESTORE_CURSOR </td><td>;адрес начала строки в DX</td></tr> <tr><td>MOV AH,9 </td><td>;номер функции вывода строки</td></tr> <tr><td>INT 21H </td><td>;восстанавливаем позицию курсора</td></tr> </table> <p> Hизкий уровень. <p> Регистры 14 и 15 микросхемы 6845 хранят текущую позицию курсора, как объяснялось в {<a href="411.htm">4.1.1</a>}. Старший байт хранится в регистре 14. Два байта хранят числа от 0 до 1999 в режиме 80 символов в строке и от 0 до 999 в режиме 40 символов. Вам необходимо перевести получаемое число в координаты строки и столбца. Вы можете прочитать это значение, чтобы узнать текущее позицию видимого курсора на экране. Hо запоминание этого значения и последующее восстановление его в регистрах не обязательно приведет к возврату курсора в предыдущую позицию, особенно если Ваша программа использует любую из обычных функций работы с экраном, предоставляемых операционной системой. Это происходит потому, что BIOS хранит положение курсора в своих переменных, для того чтобы иметь возможность управлять страницами дисплея {<a href="453.htm">4.5.3</a>}. После того как Вы восстановите регистры 14 и 15 курсор переместится в соответствующую позицию, но при следующем вызове прерывания вывода на экран курсор вернется назад к той позиции, в которой он должен находиться согласно значениям переменных BIOS. <hr><p align="center">
<~-<a href="424.htm">4.2.4 Изменение формы курсора.</a><br><a href="index.htm#header">Содержание</a><br><a href="426.htm">4.2.6 Создание альтернативных типов курсора.</a>-~>
</p></body></html>
