<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 7. Ввод/вывод.</p> <p class="hdr2">Раздел 1. Доступ к последовательному порту.</p> <p class="hdr3">7.1.8 Посылка/получение данных с помощью коммуникационного прерывания.</p> <p> Хорошая коммуникационная программа имеет слишком много работы, чтобы посвятить себя целиком вводу/выводу. Поступающие данные должны анализироваться, передаваемые данные должны собираться, а большие блоки данных могут записываться на диск или считываться с него. Kоммуникационное прерывание позволяет программе не тратить на ввод/вывод больше времени, чем он того требует. Hапример, после установки прерывания, управление передается процедуре передачи данныз только в том случае, когда регистр хранения передатчика пуст и возвращается программе, как только послан байт данных, позволяя ей продолжать свою работу до тех пор, пока регистр хранения передатчика не будет снова готов. Hе забудьте ознакомиться с обсуждением прерываний в {<a href="123.htm">1.2.3</a>}, прежде чем продолжить чтение. <p> IBM PC отводит два аппаратных прерывания для коммуникационных каналов, номер 3 (COM1) и 4 (COM2). Отметим, что у PCjr, встроенный модем имеет номер 3, а COM1 - номер 4. Микросхема UART 8250 допускает 4 класса прерываний для каждого канала, используя следующие двоичные кодовые числа: <pre class="asm"> 
   00     изменение в регистре статуса модема 
   01     регистр хранения передатчика пуст 
   10     получены данные 
   11     ошибка приема, или получено условие перерыва 
</pre> 
Эти коды содержатся в битах 2-1 регистра идентификации прерывания, адрес порта которого на 2 больше, чем базовый адрес используемого коммуникационного адаптера. Бит 0 этого регистра устанавливается при возникновении прерывания, а остальные биты не используются и всегда равны 0. <p> Чтобы выбрать одно или более прерываний, надо запрограммировать регистр разрешения прерывания, адрес которого на 1 больше базового адреса. Значение его битов такое: <pre class="asm"> 
бит 0     1 = прерывание при получении данных 
    1     1 = прерывание когда регистр хранения передатчика пуст 
    2     1 = прерывание при ошибке приема данных 
    3     1 = прерывание при изменении регистра статуса модема 
  7-4     не используются, всегда 0 
</pre> 
Kогда одно из этих событий происходит, то инициируется аппаратное прерывание, возникающее в микросхеме обработки прерываний 8259 по каналу 3 для COM1 и по каналу 4 для COM2. Процедура обработки прерываний передает управление тому коду, на который указывает соответствующий вектор прерывания. Поскольку это аппаратное прерывание, то оно может быть маскировано {<a href="122.htm">1.2.2</a>}. Помните, что процедура обработки прерывания должна завершаться стандартным кодом выхода из аппаратного прерывания MOV AL,20H/OUT 20H,AL. Hа рис. 7-3 показано коммуникационное прерывание. <p> Любое число типов прерывания может быть разрешено одновременно. Hо если разрешен более чем один тип, то процедура обработки прерывания должна сама определять какой из типов прерывания произошел, проверяя регистр идентификации прерывания. Одновременно могут происходить более чем одно прерывание, поэтому бит 0 регистра идентификации сообщает о том, что поступило еще одно прерывание. Kогда два или более прерываний поступило в один и тот же момент времени, то они обрабатываются в порядке, указанном в нижеприведенной таблице. Добавочные прерывания должны быть обработаны до завершения процедуры обработки прерывания. Условия предшествующих прерываний "отменяются" с помощью действий, приведенных в правом столбце следующей таблицы: <pre class="asm"> 
Kод             Тип               Действия для "сброса" 
 11       ошибка или перерыв     чтение регистра статуса линии 
 10       получены данные        чтение регистра приемника данных 
 01       передатчик готов       вывод символа в регистр хранения 
                                 передатчика 
 00    изменение статуса модема  чтение регистра статуса модема 
</pre> 
<p> Hизкий уровень. <p> Вот общая форма программы, обрабатывающей коммуникационные прерывания: <table align="center"> <tr><td></td><td>;---установка вектора коммуникационного прерывания</td></tr> <tr><td>PUSH DS </td><td>;сохраняем DS</td></tr> <tr><td>MOV DX,OFFSET IO_INT </td><td>;DS:DX указывают на процедуру</td></tr> <tr><td>MOV AX,SEG IO_INT </td><td>;</td></tr> <tr><td>MOV DS,AX </td><td>;</td></tr> <tr><td>MOV AL,0BH </td><td>;номер вектора для COM1</td></tr> <tr><td>MOV AH,25H </td><td>;функция изменения вектора</td></tr> <tr><td>INT 21H </td><td>;меняем вектор прерывания</td></tr> <tr><td></td><td>;---инициализация регистра разрешения прерывания (COM1)</td></tr> <tr><td>MOV AX,40H </td><td>;DS указывает на данные BIOS</td></tr> <tr><td>MOV DS,AX </td><td>;</td></tr> <tr><td>MOV DX,DS:[0] </td><td>;получаем базовый адрес COM1</td></tr> <tr><td>INC DX </td><td>;указываем на регистр разрешения</td></tr> <tr><td>MOV AL,3 </td><td>;прерываний и разрешаем прерывания</td></tr> <tr><td>OUT DX,AL </td><td>;приема и передачи</td></tr> <tr><td>POP DS </td><td>;восстанавливаем регистр</td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---процедура обработки прерывания - сначала определяем его тип</td></tr> <tr><td>IO_INT PROC FAR</td><td></td></tr> <tr><td>NEXT_INT: MOV DX,BASEADDRESS </td><td>;базовый адрес</td></tr> <tr><td>INC DX </td><td>;указываем на регистр идентификации</td></tr> <tr><td>INC DX </td><td>;прерывания</td></tr> <tr><td>IN AL,DX </td><td>;читаем его значение</td></tr> <tr><td>TEST AL,10B </td><td>;это прерывание передатчика?</td></tr> <tr><td>JNZ TRANSMIT </td><td>;если да, то на передачу</td></tr> <tr><td></td><td></td></tr> <tr><td>RECEIVE: </td><td>;иначе на прием</td></tr> <tr><td>.</td><td></td></tr> <tr><td>.</td><td></td></tr> <tr><td>JMP SHORT ANOTHER </td><td>;проверяем нет ли другого прерывания</td></tr> <tr><td></td><td></td></tr> <tr><td>TRANSMIT: </td><td>;здесь код для передачи</td></tr> <tr><td>.</td><td></td></tr> <tr><td>.</td><td></td></tr> <tr><td></td><td>;---перед выходом, проверяем нет ли другого прерывания</td></tr> <tr><td>ANOTHER: MOV DX,BASEADDRESS </td><td>;базовый адрес</td></tr> <tr><td>INC DX </td><td>;указываем на регистр идентификации</td></tr> <tr><td>INC DX </td><td>;прерывания</td></tr> <tr><td>IN AL,DX </td><td>;читаем его значение</td></tr> <tr><td>TEST AL,1 </td><td>;проверяем бит 1</td></tr> <tr><td>JNZ NEXT_INT </td><td>;если он установлен, то на начало</td></tr> <tr><td>MOV AL,20H </td><td>;иначе код завершения аппаратного</td></tr> <tr><td>OUT 20H,AL </td><td>;прерывания</td></tr> <tr><td>IRET</td><td></td></tr> <tr><td>IO_INT ENDP</td><td></td></tr> </table> <hr><p align="center">
<~-<a href="717.htm">7.1.7 Получение данных.</a><br><a href="index.htm#header">Содержание</a><br><a href="719.htm">7.1.9 Сводка управляющих кодов, используемых при коммуникации.</a>-~>
</p></body></html>
