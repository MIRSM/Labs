<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 4. Вывод на терминал.</p> <p class="hdr2">Раздел 4. Вывод точечной графики.</p> <p class="hdr3">4.4.5 Рисование линий на экране.</p> <p> Простейший способ нарисовать линию на экране состоит в том, чтобы вычислить следующую точку этой линии и изменить биты соответствующего байта. Такие операции очень медленны, хотя иногда их нельзя избежать. Если это возможно, то лучше вычислить область точек экрана, которые имеют одинаковый цвет. Тогда требуемые операции над битами можно проделать только над одним байтом, а затем этот байт может быть помещен в область соответствующих позиций видеобуфера. <p> Hизкий уровень. <p> Hижеприведенная процедура использует алгоритм Брезенхэма для вывода прямой линии, соединяющей любые две точки. Она использует функцию BIOS установки точек и ее можно убыстрить если заменить эту функцию на встроенную процедуру, использующую прямое отображение в память. Kак и все быстрые алгоритмы данная процедура избегает операций умножения и деления. Линия рассматривается как набор сегментов двух типов: тех которые расположены диагонально и тех, которые расположены горизонтально или вертикально. Для линий с наклоном больше 1 прямые сегменты вертикальны, в противном случае они горизонтальны; первая задача алгоритма состоит в вычислении наклона. Затем вычисляется выравнивающий фактор, который следит чтобы некоторое число прямых сегментов имело большую длину, чем остальные. И, наконец, сложный цикл поочередно выводит диагональные и прямые сегменты. BX поочередно принимает то положительные, то отрицательные значения, отмечая какой тип сегмента выводится. Hиже готовятся данные для вывода диагонали из одного угла экрана в противоположный: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>START_X DW 0 </td><td></td></tr> <tr><td>END_X DW 319</td><td></td></tr> <tr><td>START_Y DW 0</td><td></td></tr> <tr><td>END_Y DW 199</td><td></td></tr> <tr><td>COLOR DB 2</td><td></td></tr> <tr><td>DIAGONAL_Y_INCREMENT DW ?</td><td></td></tr> <tr><td>DIAGONAL_X_INCREMENT DW ?</td><td></td></tr> <tr><td>SHORT_DISTANCE DW ?</td><td></td></tr> <tr><td>STRAIGHT_X_INCREMENT DW ?</td><td></td></tr> <tr><td>STRAIGHT_Y_INCREMENT DW ?</td><td></td></tr> <tr><td>STRAIGHT_COUNT DW ?</td><td></td></tr> <tr><td>DIAGONAL_COUNT DW ?</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---установка режима дисплея</td></tr> <tr><td>MOV AH,0 </td><td>;функция установки режима</td></tr> <tr><td>MOV AL,4 </td><td>;цветной 320*200</td></tr> <tr><td>INT 10H </td><td>;установка режима</td></tr> <tr><td></td><td>;---установка начальных инкрементов для каждой позиции точки</td></tr> <tr><td>MOV CX,1 </td><td>;инкремент для оси x</td></tr> <tr><td>MOV DX,1 </td><td>;инкремент для оси y</td></tr> <tr><td></td><td>;---вычисление вертикальной дистанции</td></tr> <tr><td>MOV DI,END_Y </td><td>;вычитаем координату начальной</td></tr> <tr><td>SUB DI,START_Y </td><td>;точки из координаты конечной</td></tr> <tr><td>JGE KEEP_Y </td><td>;вперед если наклон &lt; 0</td></tr> <tr><td>NEG DX </td><td>;иначе инкремент равен -1</td></tr> <tr><td>NEG DI </td><td>;а дистанция должна быть &gt; 0</td></tr> <tr><td>KEEP_Y: MOV DIAGONAL_Y_INCREMENT,DX</td><td></td></tr> <tr><td></td><td>;---вычисление горизонтальной дистанции</td></tr> <tr><td>MOV SI,END_X </td><td>;вычитаем координату начальной</td></tr> <tr><td>SUB SI,START_X </td><td>;точки из координаты конечной</td></tr> <tr><td>JGE KEEP_X </td><td>;вперед если наклон &lt; 0</td></tr> <tr><td>NEG CX </td><td>;иначе инкремент равен -1</td></tr> <tr><td>NEG SI </td><td>;а дистанция должна быть &gt; 0</td></tr> <tr><td>KEEP_X: MOV DIAGONAL_Y_INCREMENT,CX</td><td></td></tr> <tr><td></td><td>;---определяем горизонтальны или вертикальны прямые сегменты</td></tr> <tr><td>CMP SI,DI </td><td>;горизонтальные длиннее?</td></tr> <tr><td>JGE HORZ_SEG </td><td>;если да, то вперед</td></tr> <tr><td>MOV CX,0 </td><td>;иначе для прямых x не меняется</td></tr> <tr><td>XCHG SI,DI </td><td>;помещаем большее в CX</td></tr> <tr><td>JMP SAVE_VALUES</td><td>;сохраняем значения</td></tr> <tr><td>HORZ_SEG: MOV DX,0 </td><td>;теперь для прямых не меняется y</td></tr> <tr><td>SAVE_VALUES: MOV SHORT_DISTANCE,DI </td><td>;меньшее расстояние</td></tr> <tr><td>MOV STRAIGHT_X_INCREMENT,CX </td><td>;один из них 0,</td></tr> <tr><td>MOV STRAIGHT_Y_INCREMENT,DX </td><td>;а другой - 1.</td></tr> <tr><td></td><td>;---вычисляем выравнивающий фактор</td></tr> <tr><td>MOV AX,SHORT_DISTANCE </td><td>;меньшее расстояние в AX</td></tr> <tr><td>SHL AX,1 </td><td>;удваиваем его</td></tr> <tr><td>MOV STRAIGHT_COUNT,AX </td><td>;запоминаем его</td></tr> <tr><td>SUB AX,SI </td><td>;2*меньшее - большее</td></tr> <tr><td>MOV BX,AX </td><td>;запоминаем как счетчик цикла</td></tr> <tr><td>SUB AX,SI </td><td>;2*меньшее - 2*большее</td></tr> <tr><td>MOV DIAGONAL_COUNT,AX </td><td>;запоминаем</td></tr> <tr><td></td><td>;---подготовка к выводу линии</td></tr> <tr><td>MOV CX,START_X </td><td>;начальная координата x</td></tr> <tr><td>MOV CX,START_Y </td><td>;начальная координата y</td></tr> <tr><td>INC SI </td><td>;прибавляем 1 для конца</td></tr> <tr><td>MOV AL,COLOR </td><td>;берем код цвета</td></tr> <tr><td></td><td>;---теперь выводим линию</td></tr> <tr><td>MAINLOOP: DEC SI </td><td>;счетчик для большего расстояния</td></tr> <tr><td>JZ LINE_FINISHED </td><td>;выход после последней точки</td></tr> <tr><td>MOV AH,12 </td><td>;функция вывода точки</td></tr> <tr><td>INT 10H </td><td>;выводим точку</td></tr> <tr><td>CMP BX,0 </td><td>;если BX &lt; 0, то прямой сегмент</td></tr> <tr><td>JGE DIAGONAL_LINE </td><td>;иначе диагональный сегмент</td></tr> <tr><td></td><td>;---выводим прямые сегменты</td></tr> <tr><td>ADD CX,STRAIGHT_X_INCREMENT </td><td>;определяем инкре-</td></tr> <tr><td>ADD DX,STRAIGHT_Y_INCREMENT </td><td>;менты по осям</td></tr> <tr><td>ADD BX,STRAIGHT_COUNT </td><td>;фактор выравнивания</td></tr> <tr><td>JMP SHORT MAINLOOP </td><td>;на следующую точку</td></tr> <tr><td></td><td>;---выводим диагональные сегменты</td></tr> <tr><td>DIAGONAL_LINE: ADD CX,DIAGONAL_X_INCREMENT </td><td>;определяем инкре-</td></tr> <tr><td>ADD DX,DIAGONAL_Y_INCREMENT </td><td>;менты по осям</td></tr> <tr><td>ADD BX,DIAGONAL_COUNT </td><td>;фактор выравнивания</td></tr> <tr><td>JMP SHORT MAINLOOP </td><td>;на следующую точку</td></tr> <tr><td>LINE_FINISHED:</td><td></td></tr> </table> <hr><p align="center">
<~-<a href="444.htm">4.4.4 Определение цвета точки экрана.</a><br><a href="index.htm#header">Содержание</a><br><a href="446.htm">4.4.6 Заполнение областей экрана.</a>-~>
</p></body></html>
