<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 7. Ввод/вывод.</p> <p class="hdr2">Раздел 1. Доступ к последовательному порту.</p> <p class="hdr3">7.1.2 Инициализация последовательного порта.</p> <p> При инициализации порта коммуникации ("открытии") устанавливаются все его параметры. Эти параметры длину слова, число стоп-битов, установку четности и скорость обмена. Длина слова это число битов, которое образует основную единицу данных. Если мы работаем с привычными порциями по 8 битов, то 7 битов достаточны для стандартных файлов ASCII (в которых все символы имеют коды, не превышающие ASCII 128), в то время как для передачи численных данных достаточно порций по 4 бита. <p> Средний уровень. <p> Функция 0 прерывания 14H BIOS инициализирует порт коммуникации. В DX должен даваться номер коммуникационного канала (COM1 = 0, COM2 = 1). В AL должен содержаться байт инициализационных данных, значение битов которого следующее: <pre class="asm"> 
   биты 1-0   длина слова. 10 = 7 битов, 11 = 8 битов. 
          2   число стоп-битов. 0 = 1, 1 = 2. 
        4-3   четность. 00 или 10 = нет, 01 = нечет., 11 = чет. 
        7-5   скорость обмена. 000 = 110 бод 
                               001 = 150 бод 
                               010 = 300 бод 
                               011 = 600 бод 
                               100 = 1200 бод 
                               101 = 2400 бод 
                               110 = 4800 бод 
                               111 = 9600 бод 
</pre> 
<p> В данном примере порт инициализируется со словом в 8 битов, одним стоп-битом и четной четностью. Скорость обмена 1200 бод. <table align="center"> <tr><td></td><td>;---присваиваем значения параметров переменным</td></tr> <tr><td>MOV WORDLENGTH,00000011B </td><td>;длина слова 8 битов</td></tr> <tr><td>MOV STOPBITS,00000000B </td><td>;1 стоп-бит</td></tr> <tr><td>MOV PARITY,00011000B </td><td>;четная четность</td></tr> <tr><td>MOV BAUDRATE,10000000B </td><td>;скорость 1200 бод</td></tr> <tr><td></td><td>;---инициализируем COM1</td></tr> <tr><td>MOV AL,0 </td><td>;чистим AL</td></tr> <tr><td>OR AL,WORDLENGTH </td><td>;устанавливаем нужные биты</td></tr> <tr><td>OR AL,STOPBITS </td><td>;</td></tr> <tr><td>OR AL,PARITY </td><td>;</td></tr> <tr><td>OR AL,BAUDRATE </td><td>;</td></tr> <tr><td>MOV AH,0 </td><td>;функция инициализации порта</td></tr> <tr><td>MOV DX,0 </td><td>;выбираем COM1</td></tr> <tr><td>INT 14H </td><td>;инициализируем порт</td></tr> </table> <p> Hизкий уровень. <p> Hезависимо от того, занимаемся ли мы вводом или выводом, как минимум 4 регистра микросхемы 8250 должны быть инициализированы для операций обмена. Это регистры делителя скорости обмена, регистр контроля линии и регистр разрешения прерывания. Инициализация скорости обмена. <p> Делитель скорости обмена это число, на которое надо разделить частоту системных часов (1190000 герц), чтобы получить желаемую скорость обмена. Hапример, для скорости обмена 1200 бод делитель скорости обмена должен быть равен 96, поскольку 1190000/96 приближенно равно 1200. Чем больше делитель, тем меньше скорость обмена. Скорости обмена 300 и меньше требуют двухбайтного числа для делителя. Старший байт посылается в 3F9H (или 2F9H), а младший в 3F8H (2F8H). В обоих случаях бит 7 регистра управления линии должен быть установлен в 1 перед засылкой значений; в противном случае по этим двум адресам значения будут адресованы в другие регистры (см. {<a href="710.htm">7.1.0</a>}). Вот некоторые значения, требуемые для обычных скоростей обмена: <pre class="asm"> 
   Скорость обмена             3F9H            3F8H 
        110                     04H             17H 
        300                     01H             80H 
        600                     00H             C0H 
       1200                     00H             60H 
       1800                     00H             40H 
       2400                     00H             30H 
       3600                     00H             20H 
       4800                     00H             18H 
       9600                     00H             0CH 
</pre> 
<p> Всегда устанавливайте регистры скорости обмена первыми, так как они единственные, которые требуют, чтобы был установлен бит 7 в регистре контроля линии. После этого надо изменить содержимое регистра контроля линии, сбрасывая 7-й бит, чтобы все остальные доступы к регистрам были правильными. Поскольку регистр контроля линии является регистром только для записи, то нет способа вернуть бит 7 обратно в 1 без одновременной установки всех остальных битов этого регистра. Отметим, что PCjr использует другие делители, описание которых Вы можете найти в техническом руководстве. Инициализация регистра контроля линии. <p> Значение битов регистра контроля линии, адрес порта которого равен 3FBH (или 2FBH), следующее: <pre class="asm"> 
   биты 1-0   Длина символа. 00 = 5 битов, 01 = 6 битов 
                             10 = 7 битов, 11 = 8 битов 
          2   Число стоп-битов. 0 = 1, 1 = 1.5, если длина 
                                пяти, иначе 2. 
          3   Четность. 1 = генерируется бит четности, 0 = нет. 
          4   Тип четности. 0 = нечетная, 1 = четная 
          5   Фиксация четности. Заставляет бит четности всегда 
              быть 0 или 1. 0 = отменена 
                  1 = всегда 1, если бит 3 = 1 & бит 4 = 0 
              или 1 = всегда 0, если бит 3 = 1 & бит 4 = 1 
              или 1 = нет четности, если бит 3 = 0 
          6   Установка перерыва. Вызывает вывод строки нулей 
              в качестве сигнала отдаленной станции. 
              0 = запрещено, 1 = перерыв 
          7   Меняет адреса портов других регистров 
</pre> 
Обычно биты 5-7 сброшены в 0. Остальные описывают значения, определяемые протоколом обмена. Регистр разрешения прерывания. <p> Даже если Вы не используете прерывания, все равно Вы должны произвести запись в регистр разрешения прерывания, чтобы быть уверенным, что прерывания запрещены. Просто поместите в этот регистр 0. Регистр идентификации прерывания можно игнорировать. <p> Инициализация остальных регистров связана с модемами. Ясно, что модемы нужны только для связи с удаленными устройствами, а не для управления близлежащими устройствами, такими как последовательный принтер. В {<a href="715.htm">7.1.5</a>} объяснено как инициализировать регистр контроля модема. <p> В данном примере из области данных BIOS берется базовый адрес COM1, после чего различные регистры инициализируются для скорости обмена 1200 бод, семибитных данных, четной четности и одного стоп-бита. <table align="center"> <tr><td></td><td>;---получаем базовый адрес COM1</td></tr> <tr><td>MOV AX,40H </td><td>;ES указывает на область данных BIOS</td></tr> <tr><td>MOV ES,AX </td><td>;</td></tr> <tr><td>MOV DX,ES:[0] </td><td>;получаем базовый адрес COM1</td></tr> <tr><td></td><td>;---инициализируеи регистры делителя скорости обмена на 1200 бод</td></tr> <tr><td>ADD DX,3 </td><td>;указываем на регистр контроля линии</td></tr> <tr><td>MOV AL,10000000B </td><td>;устанавливаем бит 7</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем байт</td></tr> <tr><td>DEC DX </td><td>;указываем на старший байт делителя</td></tr> <tr><td>DEC DX </td><td>;скорости обмена</td></tr> <tr><td>MOV AL,0 </td><td>;старший байт для 1200 бод</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем старший байт для 1200 бод</td></tr> <tr><td>DEC DX </td><td>;указываем на младший байт делителя</td></tr> <tr><td>MOV AL,60H </td><td>;младший байт делителя для 1200 бод</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем младший байт</td></tr> <tr><td></td><td>;---инициализируем регистр контроля линии</td></tr> <tr><td>MOV AL,0 </td><td>;обнуляем AL</td></tr> <tr><td>OR AL,10B </td><td>;длина данных 7 битов</td></tr> <tr><td>OR AL,000B </td><td>;1 стоп-бит</td></tr> <tr><td>OR AL,1000B </td><td>;генерируется бит четности</td></tr> <tr><td>OR AL,10000B </td><td>;четная четность</td></tr> <tr><td>ADD DX,3 </td><td>;указывае на регистр контроля линии</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем инициализационное значение</td></tr> <tr><td></td><td>;---инициализируем регистр разрешения прерывания</td></tr> <tr><td>DEC DX </td><td>;указываем на регистр разрешения</td></tr> <tr><td>DEC DX </td><td>;прерывания</td></tr> <tr><td>MOV AL,0 </td><td>;запрещаем прерывания</td></tr> <tr><td>OUT DX,AL </td><td>;посылаем байт</td></tr> </table> <hr><p align="center">
<~-<a href="711.htm">7.1.1 Программирование микросхемы UART 8250.</a><br><a href="index.htm#header">Содержание</a><br><a href="713.htm">7.1.3 Установка текущего коммуникационного порта.</a>-~>
</p></body></html>
