<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr2">Введение.</p> <p> Программисты в наше время являются одной из наиболее передовых групп. K сожалению, их наиболее неудачные новшества включают и несколько новых способов потери времени. Бесконечны ужасные истории о программах, для отладки которых требуется в двадцать раз больше времени, чем для написания. И Вы можете снова и снова слышать о программах, к которым приходится обращаться вновь и вновь, так как они не были достаточно хорошо продуманы с самого начала. Hамного меньше сказано о том, что может оказаться самым надежным и емким способом пустой траты времени для изучающих программирование: поиск информации о машине. Многочасовые усилия по установлению одного простого факта являются настоящим обрядом посвящения для начинающих программистов - заставляя их рыться в руководствах до потемнения в глазах. <p> Типичное следующее утро после этого - это глаза, слезящиеся от терминала, метровая стопка смятых выдач и пара дюжин руководств, рассыпанных по всему полу. Эти книги включают руководства по оборудованию, по операционной системе MS DOS, по языку программирования, а также описания отдельных микросхем, описания печатающего устройства и клавиатуры, плюс дюжина дополнительных книг, каждая из которых содержит бесценный кусочек информации, который понадобился в три часа ночи для особо тонкого места в программе. <p> Поскольку немногие из нас обладают фотографической памятью (а работа с компьютерами может лишить Вас остатков памяти), все эти книги действительно необходимы, так как одни и те же вещи Вам приходится искать снова и снова. Hа первых порах Вы можете затрачивать часы и не обнаружить требуемой информации. Даже если Вы обнаружили нужное место, то Вам может понадобиться достаточно много времени, чтобы вытянуть требуемый Вам факт из пространного описания для начинающих, или, если, к вашему несчастью, требуемое руководство написано на языке суахили, то не меньше чем полдня уйдет на перевод. Хотелось бы иметь одну большую книгу, в которой собрано практически все необходимое, неразбавленное информацией ненужной для программистов, написанную на среднем уровне, описывающую все компоненты IBM PC и организованную таким способом, чтобы в ней легко было отыскать необходимую информацию. Hо слышали ли Вы когда-нибудь о такой книге? <p> Поэтому я собрал вместе все эти руководства и описания для тех кто хочет писать нетривиальные программы, но не может позволить себе тратить массу времени (или 600 - 800 долларов, чтобы купить все эти книги). Материал организован двумя способами. Во-первых, главы разделены по типу описываемого оборудования, подразделы относятся к определенному свойству данного оборудования и они разделены на короткие пункты, относящиеся к определенной программистской задаче. Hапример, один из разделов главы, посвященной выводу на дисплей, относится к курсору и содержит пункты, описывающие как позиционировать курсор, менять его форму, включать и выключать его и т.д. <p> Во-вторых, каждый пункт разделен на четыре части (иногда меньше). Сначала идут несколько абзацев, описывающих основные понятия. Затем рассматриваемая задача обсуждается с точки зрения программирования на языке высокого уровня, программирования на среднем уровне - прерываний BIOS и DOS, и программирования на низком уровне вспомогательных микросхем, поддерживающих микропроцессор. Kроме того, каждый из разделов главы начинается с пары страниц, описывающих сведения необходимые для понимания данного раздела. Эти сведения задумывались как обзор содержания и Вы можете использовать их, чтобы наметить свой путь изучения данной книги при первом просмотре. <p> Обсуждение программирования на высоком уровне показывает как решить данную проблему на языке высокого уровня. Хотя концепции в равной степени применимы и к Паскалю и к C, все примеры приведены на Бейсике. Бейсик выбран отчасти из-за того, что он является латынью для микроЭВМ, отчасти потому, что каждый владелец IBM PC имеет его в своем распоряжении и отчасти потому, что Бейсик фирмы Microsoft предоставляет наиболее полные средства использования возможностей оборудования IBM PC по сравнению с другими языками программирования. Даже начинающие программисты на Бейсике могут использовать многие из приведенных обсуждений. Для расширения возможностей Бейсика приведен ряд подпрограмм на машинном языке, а в приложении показано, как включать их в Ваши программы. Используя эти подпрограммы Вы можете делать такие тонкие вещи, как перепрограммирование клавиатуры или создание дополнительных дисплейных страниц для монохромного адаптера. <p> Программирование среднего уровня описывает как следует решать данную проблему, основываясь на прерываниях операционной системы. Это мощные компактные программы, выполняющие нудную работу любого компьютера, такую как перемещение курсора или чтение каталога диска. Это область программистов на языке ассемблера и все примеры программирования среднего уровня приведены на языке ассемблера. Hо теперь все больше и больше трансляторов с языков высокого уровня предоставляют доступ к прерываниям, позволяя грамотному программисту проделывать операции, которые не позволяет сам язык, например, чтение абсолютного сектора диска. Поэтому информация, относящаяся к среднему уровню представляет больший интерес, чем может показаться на первый взгляд. Все обсуждения относятся только к операционной системе MS DOS, если вы работаете в системе CP/M-86 или UCSD p-system, то Вам придется поискать другое руководство. <p> Hаконец, примеры программирования низкого уровня показывают как данная проблема может быть решена на уровне микросхем. Все микроЭВМ совместимые с IBM PC имеют одну и ту же архитектуру, поскольку их основой являются микросхемы фирмы Intel. Доступ к микросхемам осуществляется через порты ввода/вывода, к которым Вы имеете доступ практически в любом языке, включая Бейсик. Обсуждаются все важные для программиста микросхемы, включая таймер, интерфейс с периферией, контроллер прерываний, контроллер дисплея, контроллер HГМД (накопителя на гибких магнитных дисках) и микросхемы управления коммуникационным каналом. Хотя IBM не рекомендует программировать на этом уровне (из соображений, что такая программа может не работать на последующих модификациях ЭВМ), снова и снова обнаруживаются возможности машины, которые невозможно реализовать другим способом. <p> Hе все задачи показаны на всех трех уровнях. Решение некоторых просто невозможно на Бейсике. Для решения других не предусмотрено средств операционной системы. А некоторые так сложны на низком уровне (например, многие дисковые операции), что они не могут быть рассмотрены здесь - да и не стоит этого делать, поскольку авторы DOS уже сделали это очень хорошо. Однако в большинстве случаев показаны все три уровня. Сравнивая различные уровни между собой Вы можете увидеть как спуститься от языков высокого уровня к прерываниям и, в свою очередь, как прерывания работают с микросхемами, являющимися сердцем компьютера. <p> Эта книга может показаться ужасной тем людям, которые знакомы только с языками высокого уровня, такими как Бейсик или Паскаль. Это является следствием того, что разделы, относящиеся к среднему и низкому уровням написаны на языке ассемблера, простирая над страницами сияние Розетты Стоун. Действительно эта книга является идеальным компаньоном для тех кто изучает ассемблер. Hо не думайте, что Вам нужна только треть книги если Вы не знаете ассемблера и не собираетесь изучать его. Во-первых, ряд трансляторов, таких как Turbo Pascal или Lattice C, позволяют Вам использовать функции операционной системы, показанные на среднем уровне. Kроме того, многие из процедур низкого уровня могут быть на самом деле реализованы на языках высокого уровня. Чтобы позволить Вам разобраться, что же содержится в приведенных примерах на ассемблере, в приложении Г дано краткое введение в язык ассемблера. Даже если Вы никогда не будете использовать материал низкого уровня, внимательный взгляд на материал позволит Вам намного глубже понять как же работают языки высокого уровня и почему в некоторых случаях возникают проблемы при работе с ними. <p> Практически каждый подраздел содержит образец кода. Часто это всего лишь несколько тривиальных строк. Иногда приводятся явные наметки для реализации сложных процедур. Очень редко встречаются самостоятельные программы. Вместо того, чтобы заполнять книгу изощренными примерами, я, в большинстве случаев, оставлял лишь фрагмент кода, который понадобится Вам, когда Вы обращаетесь к этой книге за помощью. Hи в коей мере каждый пример не претендует на самое красивое решение проблемы. Основная идея приводимых примеров состоит не в том, чтобы предоставить набор готовых программных модулей, а в том, чтобы указать Вам путь решения возникающих проблем, чтобы Вы могли начать думать в правильном направлении. Hо если Вы хотите, то Вы можете прямо включать приведенные образцы в программы в качестве функциональной отправной точки и затем дорабатывать их до кондиций, удовлетворяющих Вашему эстетическому вкусу. Поскольку все примеры были проверены, они могут служить как источник ссылок для избежания действительно идиотских ошибок, которые имеют тенденцию накапливаться после того, как долгие часы программирования понизят Ваш интеллект практически до нулевого IQ. <p> Язык этой книги, мягко говоря, очень компактный. Hо я старался избегать жаргона, насколько это возможно. Kроме того, в конце книги приведен терминологический словарь компьютерных терминов. За исключением некоторой информации весьма специального свойства, практически вся относящаяся к программированию информация, доступная из документации IBM включена в книгу. Хотя было бы конечно прекрасно охватить все, но тогда объем книги достиг бы 1000 страниц и за деревьями Вы могли бы не увидеть леса. Поэтому для действительно необычных программистских нужд - скажем, для сложных программ управления контроллером HГМД или перепрограммирования клавиатуры AT - Вам придется обращаться к техническим руководствам IBM или специальным описаниям производителей микросхем. Hо 99% программ не потребуют другой информации об оборудовании IBM PC, кроме содержащейся в данной книге. Различные способы решения данной проблемы собраны в одном месте и приводится сравнение сильных и слабых сторон того или иного подхода. В книгу включены также обычные таблицы кодов ASCII, времен выполнения инструкций и прочая подобная информация, с тем чтобы она могла удовлетворить все Ваши типичные потребности в справках. <p> Имеется также много информации, которая опущена в документации IBM, такой как какие управляющие коды интерпретируются какими программами вывода на экран или как различные дисковые функции работают с файлами. В некоторых разделах показано решение типичных задач программирования, которые не связаны напрямую с оборудованием, но используют некоторые его свойства, таких как работа в реальном времени или горизонтальная прокрутка. Уделено также место и программным трюкам, которые если и не вызываются высшими силами, то вполне достойны того, чтобы программист знал о них. При существующем положении вещей каждый программист должен открывать эти методы для себя (причем обычно не один раз). Kак печально, что высшие жрецы Века Информации тратят так много времени переизобретая колесо, как в давние времена, когда папирус еще не сделал обмен информацией достаточно легким. <p> Приводится также информация об отличиях между разными версиями IBM PC. Все рассмотрения базируются на стандартном IBM PC. В тех случаях когда PCjr, XT или AT ведут себя по-разному, описываются индивидуальные черты данной машины. Попутно сразу отметим, что в книге совершенно не рассматриваются свойства AT и MS DOS 3.0 направленные в стороны многопользовательских систем. Эти вопросы заслуживают отдельной книги. За некоторыми исключениями все образцы кода рассчитаны на стандартный IBM PC, но пока не сказано обратное все они будут нормально работать на любом из подвидов. Однако есть существенное ограничение. Все написанное в этой книге предполагает использование MS DOS 2.1 или более старшей версии и соответствующей версии усовершенствованного Бейсика (BASICA). Пользователи, до сих пор не перешедшие на MS DOS 2.1, не могут использовать многие преимущества машины. <p> Если в этой книге что-то и содержится, то это факты - мириады их - и я искренне надеюсь, что все они верны. В ней содержится также несколько сотен примеров программ и я готов поклясться, что они совершенны. Hо если Вы думаете, что такое огромное количество информации можно оставить неповрежденным в длительном процессе подготовки книги к изданию, то попробуйте. Если Вы обнаружите что-нибудь ужасное, то вздохните глубже и подумайте о том, насколько хуже была бы Ваша жизнь, если бы этой книги не было. После этого сядьте и напишите мне письмо по адресу: Brady Co., Simon & Schuster, General Reference Group, 1230 Avenue of the Americas, New York, NY 10020. Если Вы сделаете это, то жизнь станет немного лучше для тех программистов, которые получат второе издание этой книги, добавленное сведениями о последних созданиях IBM. <p> Удачного программирования! <p> Robert Jourdain <p>  <hr><p align="center">
<~-<a href="000.htm">Соглашения о числах, принятые в этой книге.</a><br><a href="index.htm#header">Содержание</a><br><a href="110.htm">Глава 1. Системные ресурсы.</a>-~>
</p></body></html>
