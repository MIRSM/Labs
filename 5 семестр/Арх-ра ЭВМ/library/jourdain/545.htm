<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 5. Дисковые накопители.</p> <p class="hdr2">Раздел 4. Чтение и запись файла.</p> <p class="hdr3">5.4.5 Запись в файлы прямого доступа.</p> <p> Физически файлы прямого доступа ничем не отличаются от последовательных файлов, они отличаются только режимом доступа. Файл прямого доступа предполагает, что его данные организованы в виде записей фиксированной длины, таким образом положение каждой записи может быть вычислено (в последовательных файлах n-ный элемент ищется путем подсчета разделителей между элементами, начиная с начала файла). Операционная система автоматически выполняет эти вычтсления. Однако любая программа может выполнять эту работу сама, устанавливая файловый указатель на нужную позицию и считывая последовательно такое число байтов, которое образует запись. <p> Средний уровень. <p> Kак и все другие операции с файлами в MS DOS имеется два метода записи в файл прямого доступа, один с использованием управляющего блока файла, а другой с помощью дескриптора файла. В обоих случаях Вы должны создать буфер обмена данными, размер которого должен быть не меньше, чем размер записи. Метод управляющего блока файла: <p> Откройте управляющий блок файла с помощью функции 0FH и пусть DS:DX указывают на него. После того как файл открыт поместите номер записи для прямого доступа в поле записи прямого доступа FCB. Затем вызовите функцию 22H прерывания 21H, которая пердаст данные из DTA в файловый буфер, созданный при создании FCB. Данные могут не быть немедленно записаны на диск, если размер записи меньше чем размер буфера. Реальная запись на диск будет происходить тогда, когда очередной вызов функции 22H заполнит буфер. <p> При возврате из функции 22H AL будет содержать 00, если обмен прошел успешно. В противном случае в нем будет 1, если не хватает пространства на диске и 2 - если область переноса мала для того, чтобы записать одну запись (т.е. если размер буфера, установленный системой меньше, чем тот, который указан в FCB). <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>FCB DB 1, 'NEWDATA ', 25 DUP (0)</td><td></td></tr> <tr><td>DTA DB 256 DUP (?)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---открываем файл и устанавливаем поля FCB</td></tr> <tr><td>MOV AH,0FH </td><td>;номер функции</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>MOV BX,DX </td><td>;копируем смещение для FCB</td></tr> <tr><td>INT 21H </td><td>;открываем файл</td></tr> <tr><td>MOV AX,256 </td><td>;размер записи</td></tr> <tr><td>MOV [BX]+14,AX </td><td>;помещаем в поле размера записи</td></tr> <tr><td>MOV AX,233 </td><td>;номер записи</td></tr> <tr><td>MOV [BX]+33,AX </td><td>;помещаем в поле номера записи</td></tr> <tr><td>MOV AX,0 </td><td>;обнуляем старший байт этого слова</td></tr> <tr><td>MOV [BX]+35,AX </td><td>;</td></tr> <tr><td></td><td>;---перенос данных из DTA в файл</td></tr> <tr><td>MOV AH,22H </td><td>;номер функции записи с прямым доступом</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>INT 21H </td><td>;записываем данные</td></tr> <tr><td>CMP AL,0 </td><td>;проверка на ошибку</td></tr> <tr><td>JNE WRITE_ERROR </td><td>;</td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---позднее, закрываем файл</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>MOV AH,10H </td><td>;функция закрытия файла</td></tr> <tr><td>INT 21H </td><td>;закрываем файл</td></tr> <tr><td>CMP AL,0FFH </td><td>;проверка на ошибку</td></tr> <tr><td>JE CLOSE_ERROR </td><td>;</td></tr> </table> <p> Часто программа работает сразу с набором записей прямого доступа, передавая их в память и из памяти как единое целое. MS DOS предоставляет специальную функцию для этого при использовании метода FCB, называемую запись блока с прямым доступом. Это функция 28H прерывания 21H. При входе DS:DX должны указывать на открытый FCB, в котором поле записи прямого доступа должно быть равно номеру первой из записываемых записей набора. Эта функция совершенно аналогична вышеприведенному примеру. Единственное отличие (кроме номера функции) состоит в том, что в CX должно быть указано число записей в блоке (не путайте эти "блоки" с блоками по 128 записей, с помощью которых система находит требуемую запись - программа может читать любое число записей, начиная с любого места). <p> В CX возвращается число реально прочитанных записей. AL будет содержать 0, если все записи успешно записаны, 1 - если не хватает пространства на диске, при этом не будет записана ни одна запись. В отличии от функции 22H эта функция автоматически увеличивает поля текущей записи, текущего блока и записи прямого доступа в FCB, так что они будут указывать на запись, следующую за последней прочитанной. Отметим, что если при выполнении этой функции установить CX = 0, то размер файла будет установлен в соответствии с числом записей, равным полю записи прямого доступа, и таким образом можно резервировать для файла дисковое пространство. Метод дескриптора файлов: <p> При использовании для доступа метода дескриптора файлов система не различает последовательные файлы и файлы прямого доступа. Ваша программа должна вычислить позицию в файле, с которой начинается требуемая запись, и установить на нее файловый указатель. Файловый указатель позиционируется с помощью функции 42H прерывания 21H. Поместите номер файла в BX, а смещение в файле в CX:DX (CX будет содержать старший байт значения). Затем поместите в AL кодовый номер от 0 до 2. При AL = 0, указатель будет установлен со смещением CX:DX байтов относительно начала файла; при AL = 1, указатель будет установлен со смещением CX:DX относительно текущей позиции, а при AL = 2, указатель будет установлен со смещением CX:DX относительно конца файла (т.е. таким образом файл будет расширен). Отрицательные числа недопустимы в качестве смещений. При возврате DX:AX будут содержать новое положение указателя (старший байт в DX). Если устанавливается флаг переноса, то произошла ошибка. В этом случае AX будет содержать 1, если указан неверный код в AL и 6 - если указан неверный номер файла. <p> После позиционирования файлового указателя запись прямого доступа записывается с помощью той же функции 40H прерывания 21H, которая использовалась для записи в последовательный файл. При входе BX содержит номер файла, а CX - число байтов, которое надо записать. При возврате AX будет содержать число реально записанных байтов. Если оно отличается от числа помещенного в CX, то вероятно диск полон (см. {<a href="514.htm">5.1.4</a>}). Kак обычно, при возникновении ошибки устанавливается флаг переноса. В этом случае AX будет содержать 5 при ошибке накопителя и 6 - если указан неверный номер файла. <p> Файловый указатель играет ту же роль для образа файла на диске, что DTA для образа файла в памяти. Он может сдвигаться как угодно для доступа к различным частям файла. Будьте внимательны, манипулируя файловым указателем при работе с фалом прямого доступа, содержимое любого поля любой записи может быть сразу прочитано с диска и помещено в требуемое место в памяти. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>HANDLE DW ? </td><td>;номер файла</td></tr> <tr><td>FILEPATH DB 'A:NEWDATA',0 </td><td>;строка пути к файлу</td></tr> <tr><td>REC_BUFFER DB 30 DUP (?) </td><td>;буфер выводимых записей</td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---открываем файл</td></tr> <tr><td>MOV AH,3DH </td><td>;номер функции</td></tr> <tr><td>MOV AL,1 </td><td>;код открытия для записи</td></tr> <tr><td>LEA DX,FILEPATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>INT 21H </td><td>;открываем файл</td></tr> <tr><td>JC OPEN_ERROR </td><td>;проверка на ошибку</td></tr> <tr><td>MOV HANDLE,AX </td><td>;сохраняем номер файла</td></tr> <tr><td></td><td>;---вычисляем позицию записи и устанавливаем файловый указатель</td></tr> <tr><td>MOV AX,30 </td><td>;размер записи 30 байтов</td></tr> <tr><td>MOV CX,54 </td><td>;номер записи #54 (55-я запись)</td></tr> <tr><td>MUL CX </td><td>;теперь смещение для нее в DX:AX</td></tr> <tr><td>MOV CX,DX </td><td>;помещаем старшее слово в DX</td></tr> <tr><td>MOV DX,AX </td><td>;помещаем младшее слово в CX</td></tr> <tr><td>MOV AL,0 </td><td>;устанавливаем указатель на начало</td></tr> <tr><td>MOV AH,42H </td><td>;функция установки указателя</td></tr> <tr><td>MOV BX,HANDLE </td><td>;номер файла</td></tr> <tr><td>INT 21H </td><td>;устанавливаем указатель</td></tr> <tr><td>JC POINTER_ERROR </td><td>;проверка на ошибку</td></tr> <tr><td></td><td>;---пишем запись с прямым доступом</td></tr> <tr><td>MOV AH,40H </td><td>;номер функции</td></tr> <tr><td>MOV BX,HANDLE </td><td>;номер файла</td></tr> <tr><td>MOV CX,30 </td><td>;размер записи</td></tr> <tr><td>LEA DX,REC_BUFFER </td><td>;DS:DX указывают на буфер</td></tr> <tr><td>INT 21H </td><td>;пишем запись</td></tr> <tr><td>JC WRITE_ERROR </td><td>;проверка на ошибку</td></tr> </table> <p> В отличии от метода FCB метод дескриптора файлов не предоставляет специальной функции для записи блока записей прямого доступа. Однако Вашей программе необходимо только вычислить количество байтов, составляющих блок записей, которое должно быть записано. <hr><p align="center">
<~-<a href="544.htm">5.4.4 Чтение из последовательных файлов.</a><br><a href="index.htm#header">Содержание</a><br><a href="546.htm">5.4.6 Чтение из файлов прямого доступа.</a>-~>
</p></body></html>
