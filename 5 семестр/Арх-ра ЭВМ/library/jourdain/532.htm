<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 5. Дисковые накопители.</p> <p class="hdr2">Раздел 3. Подготовка к работе с файлами.</p> <p class="hdr3">5.3.2 Создание/удаление файла.</p> <p> Можно создать файл, не помещая в него никакой информации. Создается элемент каталога, а длина файла устанавливается равной 0. При удалении файла соответствующий элемент каталога на самом деле не удаляется, он просто становится недействующим за счет изменения первого байта элемента (первого символа имени файла) на E5H. Впоследствии этот элемент может быть перезаписан при создании нового файла. Во время удаления файла вносятся также изменения в таблицу размещения файлов, с тем чтобы сектора используемые этим файлом были доступны для других файлов. Само содержимое этих секторов при этом не стирается. Поэтому можно восстановить удаленный файл - однако предупреждаем, что операции с таблицей размещения файлов надо производить очень осторожно. <p> Средний уровень. <p> Файл может быть создан или уничтожен с помощью либо метода управляющего блока файла, либо метода дескриптора файла. Создание файла одним из методов ни в коей мере не ограничивает будущий доступ к нему только этим методом. Hо, поскольку одновременно с созданием он открывается, то при создании необходимо использовать тот метод, с помощью которого Вы будете работать с этим файлом на этот раз. Kогда файл создается, а затем закрывается и при этом в него ничего не записывается, то ему соответствует элемент каталога с нулем в поле длины файла, однако дисковое пространство этому файлу не отводится. Важно понимать, что когда последовательный файл открывается для записи (а не для добавления) данных, то используется именно эта функция создания файла, поэтому файл обрезается до нулевой длины и затем полностью перезаписывается. Метод FCB: <p> Функция 16H прерывания 21H создает и открывает файл. Создайте FCB с именем файла и накопителя и пусть DS:DX указывает на него. Затем вызовите функцию. Просматривается каталог и если найден совпадающий элемент, то снова используется именно этот элемент каталога, при этом новый файл перекрывает старый с тем же именем. Чтобы избежать непреднамеренного разрушения файлов, сначала проверьте на наличие файла с таким именем, используя функцию 11H прерывания 21H {<a href="521.htm">5.2.1</a>}. Если нет файла с таким именем, то создается новый элемент каталога и в AL возвращается 0; если каталог полон, то в AL возвращается FF. Чтобы присвоить файлу специальные атрибуты (например, статус только для чтения) {<a href="526.htm">5.2.6</a>} используйте расширенный управляющий блок файла {<a href="535.htm">5.3.5</a>}. При открытии новый файл инициализируется с нулевой длиной и ему отводится кластер дискового пространства. Вот пример: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>FCB DB 1,'MYFILE DAT',25 DUP(0)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---проверка наличия такого файла</td></tr> <tr><td>MOV AH,11H </td><td>;функция поиска файла</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>INT 21H </td><td>;ищем файл</td></tr> <tr><td>CMP AL,0 </td><td>;AL = 0 если файл существует</td></tr> <tr><td>JE WARN_USER </td><td>;если да, то сообщаем об этом</td></tr> <tr><td></td><td>;---создание файла</td></tr> <tr><td>MOV AH,16H </td><td>;номер функции создания файла</td></tr> <tr><td>INT 21H </td><td>;создаем файл</td></tr> </table> <p> Для создания файла со специальными атрибутами, например статусом только для чтения, надо использовать расширенный управляющий блок файла. Байт атрибутов файла обсуждается в {<a href="526.htm">5.2.6</a>}. K обычному FCB надо добавить 7-байтный заголовок, начиная с байта FFH, затем должны следовать 5 байтов ASCII 0, а затем нужный байт атрибутов. Для создания спрятанного файла необходимо, чтобы был установлен бит 1 байта атрибутов. Чтобы спрятать файл, открытый в приведенном примере, напишите: <table align="center"> <tr><td>FCB DB 0FFH,5 DUP(0),2,1,'MYFILE DAT',25 DUP(0)</td><td></td></tr> </table> <p> Функция 13H прерывания 21H уничтожает файл. Hадо чтобы DS:DX указывали на неоткрытый FCB и выполнить функцию. Если не найдено файла с указанным именем, то в AL возвращается FF, иначе 0. В имени файла могут использоваться джокеры (знаки вопроса, но не звездочки) и в этом случае за одно обращение к функции может быть удалено несколько файлов. Вот пример: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>FCB DB 1,'MYFILE DAT',25 DUP(0)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---удаляем файл</td></tr> <tr><td>MOV AH,13H </td><td>;номер функции удаления файла</td></tr> <tr><td>LEA DX,FCB </td><td>;DS:DX указывают на FCB</td></tr> <tr><td>INT 21H </td><td>;удаляем файл</td></tr> <tr><td>CMP AL,0FFH </td><td>;проверка на ошибку</td></tr> <tr><td>JE DELETE_ERROR </td><td>;уход на обработку ошибки</td></tr> </table> Метод дескриптора файла: <p> Функция 3CH прерывания 21H создает и открывает новый файл методом дескриптора файла. DS:DX должны указывать на строку, дающую путь к файлу и имя файла в стандартном формате MS DOS, включая имя накопителя, если файл находится не на накопителе по умолчанию. Строка должна завершаться байтом ASCII 0. Байт атрибутов файла {<a href="526.htm">5.2.6</a>} поместите в CX (0 - для нормального файла). Затем выполните функцию. При успешном выполнении флаг переноса будет равен нулю, а в AX будет возвращен номер нового файла. При возникновении ошибки флаг переноса устанавливается в 1, а в AX содержится код ошибки, который может быть равен 3, если не найден путь, 4 - если уже открыты все буфера для файлов и 5 - если каталог полон или файл уже существует со статусом только для чтения. Отметим, что если в каталоге уже существует файл с таким именем, то существующий файл обрезается до нулевой длины, и тем самым разрушается. Для избежания ошибок надо предварительно использовать функцию 4EH прерывания 21H для проверки. <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>PATH DB 'B:LEVEL1\LEVEL2\FILENAME.EXT',0</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---проверка наличия файла в каталоге</td></tr> <tr><td>MOV AH,4EH </td><td>;функция поиска в каталоге</td></tr> <tr><td>LEA DX,PATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>INT 21H </td><td>;проверка наличия файла</td></tr> <tr><td>JNC WARN_USER </td><td>;если есть, то сообщаем ;---создание файла</td></tr> <tr><td>MOV AH,3CH </td><td>;функция создания файла</td></tr> <tr><td>MOV CX,0 </td><td>;нормальные атрибуты</td></tr> <tr><td>INT 21H </td><td>;создаем файл</td></tr> <tr><td>JC OPEN_ERROR </td><td>;уход на обработку ошибки</td></tr> <tr><td>MOV HANDLE,AX </td><td>;запоминаем номер файла</td></tr> </table> <p> В MS DOS 3.0 добавлена новая функция для создания файла методом дескриптора файла. Это функция номер 5BH прерывания 21H. Она работает в точности так же, как и описанная функция 3CH, за исключением того, что она возвращает расширенные коды ошибок, что позволяет лучше обрабатывать ошибочные ситуации. Они объяснены в {<a href="725.htm">7.2.5</a>}. <p> Для уничтожения файла методом дескриптора файла используйте функцию 41H прерывания 21H. И опять DS:DX должны указывать на строку, дающую путь и имя файла. Джокеры в имени файла не допускаются. Затем вызовите функцию. Если при возврате флаг переноса установлен, то функция не выполнена; в этом случае AL будет содержать 2, если файл не найден и 5 - если произошла ошиька на диске. Отметим, что с помощью этой функции Вы не можете удалить файл со статусом только для чтения; измените атрибуты файла {<a href="526.htm">5.2.6</a>} перед его удалением. Вот пример: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>PATH DB 'B:LEVEL1\LEVEL2\FILENAME.EXT',0</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---уничтожаем файл</td></tr> <tr><td>MOV AH,41H </td><td>;номер функции уничтожения</td></tr> <tr><td>LEA DX,PATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>INT 21H </td><td>;уничтожаем файл</td></tr> <tr><td>JC DELETE_ERROR </td><td>;на обработку ошибки</td></tr> </table> <p> MS DOS версии 3.0 имеет специальную функцию (5AH прерывания 21H) для создания временного "безымянного" файла. Операционная система сама генерирует имя для файла и проверяет, что такого файла еще нет в каталоге. При этом исключается всякая возможность что при создании временного файла будет разрушен существующий файл с совпадающим именем. При входе DS:DX должны указывать на строку пути к каталогу, в котором должен быть создан временный файл. Строка должна завершаться обратной косой чертой. Поместите атрибуты файла в CX (обычно 0). При возврате AX будет содержать номер файла, если только флаг переноса не установлен, в этом случае AX содержит информацию об ошибке. Произвольное имя файла добавляется к концу строки пути. Эта функция может возвращать расширенные коды ошибок, которые существуют только в MS DOS 3.0; они объясняются в {<a href="725.htm">7.2.5</a>}. Файл, созданный этой функцией не уничтожается автоматически - программа должна использовать функцию 41H (см. выше). В данном примере программа создает временный файл, а затем уничтожает его: <table align="center"> <tr><td></td><td>;---в сегменте данных</td></tr> <tr><td>PATH DB 'B:LEVEL1\LEVEL2\',12 DUP(0)</td><td></td></tr> <tr><td></td><td></td></tr> <tr><td></td><td>;---создаем временный файл</td></tr> <tr><td>MOV AH,5AH </td><td>;номер функции</td></tr> <tr><td>LEA DX,PATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>INT 21H </td><td>;создаем временный файл</td></tr> <tr><td>JC CREATION_ERROR </td><td>;уход на обработку ошибки</td></tr> <tr><td>.</td><td></td></tr> <tr><td>.</td><td></td></tr> <tr><td>MOV AH,41H </td><td>;номер функции</td></tr> <tr><td>LEA DX,PATH </td><td>;DS:DX указывают на путь</td></tr> <tr><td>INT 21H </td><td>;уничтожаем временный файл</td></tr> <tr><td>JC DELETION_ERROR </td><td>;уход на обработку ошибки</td></tr> </table> <hr><p align="center">
<~-<a href="531.htm">5.3.1 Установка/проверка накопителя по умолчанию.</a><br><a href="index.htm#header">Содержание</a><br><a href="533.htm">5.3.3 Открытие/закрытие файла.</a>-~>
</p></body></html>
