<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 2. Таймеры и звук.</p> <p class="hdr2">Раздел 2. Создание звука.</p> <p class="hdr3">2.2.8 Создание звуковых эффектов.</p> <p> Звуковые эффекты обычно достигаются непрерывным изменением  частоты тона. Только PCjr достаточно хорошо оборудован для этой цели (см. обсуждение в {<a href="221.htm">2.2.1</a>}). Hа других машинах нельзя производить звуковые эффекты одновременно с другими операциями. <p> Hизкий уровень. <p> Любой из способов, показанных на Бейсике может быть реализован на ассемблере, хотя, как видно из предыдущих разделов, это требует затрат на программирование. Kроме того, ассемблер позволяет генерировать нечистые тона, когда интервал, в течение которого динамик включен, не равен интервалу, в течение которого он выключен. Такое нарушение симметрии может приводить к жужжащим и брякающим звукам. Kогда отношение этих интервалов составляет, скажем 50 к 1, то получаем жужжание. Если увеличить отношение еще в 10 - 20 раз, то жужжание переходит в отдельные брякающие звуки. В любом случае звук генерируется микросхемой интерфейса с периферией 8255, с помощью техники показанной в {<a href="222.htm">2.2.2</a>}. Вот пример жужжания: <table align="center"> <tr><td>NUMBER_CYCLES EQU 300 </td><td>;число переключений динамика</td></tr> <tr><td>FREQUENCY1 EQU 50 </td><td>;время, когда динамик включен</td></tr> <tr><td>FREQUENCY2 EQU 3200 </td><td>;время, когда динамик выключен</td></tr> <tr><td>PORT_B EQU 61H </td><td>;адрес порта B микросхемы 8255</td></tr> <tr><td>CLI </td><td>;запрет прерываний</td></tr> <tr><td>MOV DX,NUMBER_CYCLES</td><td>;DX считает длину тона</td></tr> <tr><td>IN AL,PORT_B </td><td>;получаем статус порта</td></tr> <tr><td>AND AL,11111110B </td><td>;отключаем динамик от таймера</td></tr> <tr><td>NEXT_CYCLE: OR AL,00000010B </td><td>;включаем динамик </td></tr> <tr><td>OUT PORT_B,AL </td><td>;посылаем команду</td></tr> <tr><td>MOV CX,FREQUENCY1 </td><td>;задержка для первой части</td></tr> <tr><td>FIRST_HALF: LOOP FIRST_HALF </td><td>;</td></tr> <tr><td>AND AL,11111101B </td><td>;выключаем динамик</td></tr> <tr><td>OUT PORT_B,AL </td><td>;посылаем команду</td></tr> <tr><td>MOV CX,FREQUENCY2 </td><td>;задержка для второй части</td></tr> <tr><td>SECND_HALF: LOOP SECND_HALF </td><td>;</td></tr> <tr><td>DEC DX </td><td>;уменьшаем число циклов</td></tr> <tr><td>JNZ NEXT_CYCLE </td><td>;если 0, то пора кончать</td></tr> <tr><td>STI </td><td>;разрешаем прерывания</td></tr> </table> Для создания брякающих звуков можно использовать этот же код, но надо заменить значение FREQUENCY2 на величину около 40000. <hr><p align="center">
<~-<a href="227.htm">2.2.7 Создание плавного перехода тонов.</a><br><a href="index.htm#header">Содержание</a><br><a href="229.htm">2.2.9 Одновременная генерация разных звуков.</a>-~>
</p></body></html>
