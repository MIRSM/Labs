<html><head><title>Справочник программиста на персональном компьютере фирмы IBM.Роберт Журден</title> <meta http-equiv="Content-Type" content="text/html; charset=windows-1251"> <link rel=stylesheet type=text/css href=style.css> </head><body> <p class="hdr1">Глава 4. Вывод на терминал.</p> <p class="hdr2">Раздел 5. Сдвиг экрана и страницы.</p> <p class="hdr3">4.5.1 Вертикальный сдвиг текстового экрана.</p> <p> Kогда текстовый экран сдвигается вверх, то строки со 2-й по 25-ю переписываются на строки с 1-й по 24-ю, а следующая строка данных выводится в 25-й строке. При этом верхняя строка, поверх которой осуществлется вывод теряется, хотя она продолжает существовать в памяти. Сдвиг вниз устроен аналогично. <p> Средний уровень. <p> Функция 6 прерывания 10H сдвигает любую часть экрана вверх, а функция 7 - вниз. В обоих случаях AL содержит число строк сдвига, а когда AL = 0, то весь экран чистится, а не сдвигается. CH:CL содержат строку и столбец левого верхнего угла, а DH:DL - содержат координаты правого нижнего угла. Появлящиеся из-за сдвига строки чистые и они выводятся с кодом атрибутов из BH. <table align="center"> <tr><td></td><td>;---сдвиг вверх на одну строку</td></tr> <tr><td>MOV AH,6 </td><td>;номер функции сдвига вверх</td></tr> <tr><td>MOV AL,1 </td><td>;число строк сдвига</td></tr> <tr><td>MOV CH,0 </td><td>;строка левого верхнего угла</td></tr> <tr><td>MOV CL,0 </td><td>;столбец левого верхнего угла</td></tr> <tr><td>MOV DH,24 </td><td>;строка правого нижнего угла</td></tr> <tr><td>MOV DL,79 </td><td>;столбец правого нижнего угла</td></tr> <tr><td>MOV BH,7 </td><td>;атрибуты очищаемой строки</td></tr> <tr><td>INT 10H </td><td>;делаем сдвиг</td></tr> </table> <p> Hизкий уровень. <p> Вертикальный сдвиг всего экрана это тривиальная задача, поскольку правая граница одной строки в памяти продолжается левой границей следующей строки. Сдвиг всего содержимого видеобуфера на 160 байт вверх по памяти (80 символов в строке * 2 байта на символ) приводит к сдвигу экрана вниз на одну строку. Если Вы пишете свою собственную процедуру сдвига экрана, использующую прямое отображение в память, то не забывайте об интерференции, которая возникает на цветном дисплее и PCjr. Эта проблема обсуждается в {<a href="431.htm">4.3.1</a>}. Обычное решение этой проблемы состоит в проверке статусного байта, ожидая пока он разрешит запись в видеобуфер. Вам придется поэкспериментировать, чтобы определить сколько данных Вы можете записать за один цикл. <p> Другое решение этой проблемы состоит в выключении экрана на время операции сдвига, а затем в его восстановлении. "Выключение экрана" подразумевает, что вывод содержащихся в видеобуфере данных запрещен, но сам буфер при этом не изменяется. Этот процесс используется функцией сдвига BIOS, использованной выше. Хотя это не очень приятно для глаз, но все-таки не так плохо, как уже упоминавшаяся интерференция. <p> Для выключения экрана у цветного графического дисплея надо сбросить бит 3 порта с адресом 3D8H. Изменение бита назад на 1 моментально включает экран обратно. Этот адрес порта соответствует регистру выбора режима цветного графического адаптора. Этот однобайтный регистр только для записи, поэтому программа не может просто прочитать его, изменить значение бита 3 и вернуть прочитанный байт. Вместо этого Вам необходимо определить также правильную установку всех остальных битов (перечисленных в {<a href="412.htm">4.1.2</a>}).  <hr><p align="center">
<~-<a href="450.htm">Раздел 5. Сдвиг экрана и страницы.</a><br><a href="index.htm#header">Содержание</a><br><a href="452.htm">4.5.2 Сдвиг текстового экрана горизонтально.</a>-~>
</p></body></html>
