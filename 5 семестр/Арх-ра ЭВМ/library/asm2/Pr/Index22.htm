<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index21.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index23.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
POP Извлечение слова из стека 
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  Команда pop выталкивает 16-битовое данное из стека, т.е. пересылает слово из 
  вершины стека (на которую указывает регистр SP) по адресу операнда-приемника. 
  После этого содержимое SP увеличивается на 2, и SP указывает на предыдущее слово 
  стека, которое теперь является его новой вершиной. Выталкивать из стека можно 
  только целые слова (не байты). Программа должна строго следить за тем, чтобы 
  каждой команде проталкивания в стек push отвечала обратная команда выталкивания 
  из стека pop. Если стек используется для временного хранения некоторых данных, 
  то извлекать эти данные из стека следует в порядке, обратном их сохранению.<br>
  В качестве операнда-приемника можно использовать любой 16-разрядный регистр 
  (кроме CS) или ячейку памяти. Команда не воздействует на флаги процессора.<br>
  Пара команд push - pop часто используется для пересылки данного из регистра 
  в регистр (особенно, в сегментный) через стек.</p>
<p align="center"><b>Пример 1</b></p>
<blockquote>
<p><br>

</font>
  <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  push AX ;Временное сохранение<br>
  push BX ;в стеке<br>
  push DS ;трех операндов<br>
  pop DS ;Восстановление из стека<br>
  pop BX ;трех операндов<br>
  pop AX ; в обратном порядке</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  push CS ;Пересылка CS через стек&nbsp;</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"> pop DS ;Теперь DS=CS</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных<br>
  mem dw 0<br>
  ; В программном сегменте<br>
  pop mem ;Восстановление из стека в память</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><b><img src="pr.gif" ></b> Допустимо использование 
  32-битовых операндов и дополнительных режимов адресации 32-разрядных процессоров.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  pop EAX ;Извлечение из стека двойного слова</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ РОРА Восстановление 
  из стека всех регистров</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда рора восстанавливает из стека содержимое всех регистров, предварительно 
  сохраненных в стеке командой pusha. Заполнение из стека регистров осуществляется 
  в следующем порядке: DI, SI, BP, SP, ВХ, DX, СХ, АХ. Исходное содержимое указателя 
  стека SP, сохраненное в стеке командой pusha, командой рора из стека извлекается, 
  но отбрасывается. Команда не имеет параметров.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  рора</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ POPAD 
  Восстановление из стека всех регистров в 32-разрядном режиме</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда popad восстанавливает из стека содержимое всех расширенных регистров, 
  предварительно сохраненных в стеке командой pushad. Заполнение из стека регистров 
  осуществляется в следующем порядке: EDI, ESI, EBP, ESP, ЕВХ, EDX, ЕСХ, ЕАХ. 
  Исходное содержимое указателя стека ESP, сохраненное в стеке командой pusha, 
  командой рора из стека извлекается, но отбрасывается. Команда не имеет параметров.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  popad</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">POPF Восстановление 
  из стека регистра флагов</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда popf пересылает верхнее слово стека (на которое указывает регистр SP) 
  в регистр флагов FLAGS. После этого содержимое SP увеличивается на 2, и SP указывает 
  на предыдущее слово стека, которое теперь является его новой вершиной. Команда 
  popf не имеет параметров; она воздействует на все флаги процессора, кроме флагов 
  VM и RF.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  popf ;Регистр флагов загружается из стека</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  pushf ;Отправим флаги в стек <br>
  mov BP,SP ;Настроим ВР на флаги в стеке <br>
  or [BP],100h ;Установим бит 100h (флаг TF)<br>
  popf ;Вытолкнем в регистр флагов.<br>
  ;Теперь в регистре флагов TF=1</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ POPFD
Восстановление из стека расширенного регистра флагов</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда popfd пересылает верхнее слово стека (на которое указывает регистр ESP) 
  в расширенный регистр флагов EFLAGS. После этого содержимое ESP увеличивается 
  на 4, и ESP указывает на предыдущее слово стека, которое теперь является его 
  новой вершиной. Команда popfd не имеет параметров; она воздействует на все флаги 
  процессора.</p>
<p align="center"><b>Пример</b></p>

  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  popfd ;Регистр EFLGS загружается из стека</font></p>

</blockquote>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index21.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index23.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>
