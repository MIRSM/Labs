<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index16.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index18.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
386+ LODSD Загрузка двойного слова из строки
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  
  Команда аналогична командам МП 86 lodb и lodsw, но позволяет загрузить из строки, 
  адресуемой через регистры DS:ESI (DS:SI для 16-разрядных приложений), двойное 
  слово в регистр ЕАХ.</p>
<p align="center"><b>Пример</b></p>
<blockquote>
<p><br>

</font>
  <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  dat dd 12789,200000,550000,8000000<br>
  ;В программном сегменте<br>
  mov SI,offset dat<br>
  add SI, 4*3 ;DS:SI -&gt; 4-й элемент массива чисел<br>
  lodsd ;EAX=8000000</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">LOOP Циклическое 
  выполнение, пока содержимое СХ не равно нулю</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><br>
  Команда loop выполняет декремент содержимого регистра СХ, и если оно не равно 
  0, осуществляет переход на указанную метку вперед или назад в том же программном 
  сегменте в диапазоне -128... + 127 байт. Обычно метка помещается перед первым 
  предложением тела цикла, а команда loop является последней командой цикла. Содержимое 
  регистра СХ рассматривается как целое число без знака, поэтому максимальное 
  число повторений группы включенных в цикл команд составляет 65536 (если перед 
  входом в цикл СХ=0). Команда не воздействует на флаги процессора.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных:<br>
  array dw 4096 dup (?) ;Массив из 4096 слов<br>
  ;В программном сегменте:<br>
  lea BX,array ;ВХ -&gt; array<br>
  xor SI,SI ;SI=0<br>
  mov CX,4096 ;Счетчик повторений<br>
  mov AX,1 ;Число-заполнитель <br>
  array: mov [BX] [SI],AX ;Очистка элемента массива<br>
  inc SI ;Сдвиг к следующему<br>
  inc SI ;слову массива<br>
  loop array ;Повторить СХ раз</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CX,20 <br>
  delay :loop delay ;Небольшая задержка</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><b><img src="pr.gif" ></b> При использовании в 
  качестве счетчика расширенного регистра ЕСХ максимальное число шагов в цикле 
  увеличивается до 232. Для того чтобы в 16-разрядном приложении процессор при 
  выполнении команды loop использовал не 16-разрядный регистр СХ, а 32-разрядный 
  регистр ЕСХ, перед командой loop необходимо указать префикс замены размера адреса 
  67h.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov ЕСХ,О<br>
  zzzz: db 67h ;Префикс замены размера адреса <br>
  loop zzzz ;Цикл из 232: шагов, реализующий<br>
  ;программную задержку порядка минут</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">LOOPE/LOOPZ 
  Циклическое выполнение, пока равно/циклическое выполнение, пока нуль</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><br>
  Оба обозначения представляют собой синонимы и относятся к одной команде. Команда 
  выполняет декремент содержимого регистра СХ, и если оно не равно 0, и флаг ZF 
  установлен, осуществляет переход на указанную метку вперед или назад в том же 
  программном сегменте в диапазоне -128...+127 байтов. Содержимое регистра СХ 
  рассматривается как целое число без знака, поэтому максимальное число повторений 
  группы включенных в цикл команд составляет 65536. Команда не воздействует на 
  флаги процессора.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных, адресуемых через DS: <br>
  command db 80 dup (' ') <br>
  ;В программном сегменте:<br>
  . . . ;Копирование в поле command строки,<br>
  ;содержимое которой следует анализировать<br>
  lea SI, command ;Настроим DS:SI<br>
  сld ;Обработка вперед<br>
  mov CX,80 ;Обрабатывать не более 80<br>
  ;байтов<br>
  pass: lodsb ;Загрузим в AL очередной<br>
  ;символ<br>
  сmр АL, ' ' ;Пропустим все пробелы в<br>
  loopepass ;начале строки<br>
  dec SI ;Сдвиг на 1 символ назад <br>
  ;DS:SI -&gt; первый символ, отличный от пробела</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><b><img src="pr.gif" ></b> При использовании в 
  качестве счетчика расширенного регистра ЕСХ максимальное число шагов в цикле 
  увеличивается до 232. Для того, чтобы в 16-разрядном приложении процессор при 
  выполнении команд loope/loopz использовал не 16-разрядный регистр СХ, а 32-разрядный 
  регистр ЕСХ, перед командами loope/loopz необходимо указать префикс замены размера 
  адреса 67h.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov ЕСХ, 1000000 ;Предельное число шагов <br>
  хххх: ... ;Тело цикла <br>
  db 67h <br>
  loopexxxx</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">LOOPNE/LOOPNZ 
  Циклическое выполнение, пока не равно/циклическое выполнение, пока не нуль</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><br>
  Оба обозначения представляют собой синонимы и относятся к одной команде. Команда 
  выполняет декремент содержимого регистра СХ, и если оно не равно 0, и флаг ZF 
  сброшен, осуществляет переход на указанную метку вперед или назад в том же программном 
  сегменте в диапазоне -128... + 127 байтов. Содержимое регистра СХ рассматривается 
  как целое число без знака, поэтому максимальное число повторений группы включенных 
  в цикл команд составляет 65536. Команда не воздействует на флаги процессора.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных:<br>
  command db 80 dup (0)<br>
  ;В программном сегменте:<br>
  . . . ;Копирование в поле command строки,<br>
  ; содержимое которой следует анализировать <br>
  lea SI,command ;Настроим DS:SI <br>
  cld ;Обработка вперед <br>
  mov CX,80 ;Обрабатывать не более 80<br>
  ;байтов<br>
  slash: lodsb ;Загрузим в AL очередной символ<br>
  cmp AL, ' / ' ;Ищем знак ' / ' <br>
  loopne slash ;во всей строке <br>
  ;DS:SI -&gt; первый символ за знаком '/'</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><b><img src="pr.gif" ></b> При использовании в 
  качестве счетчика расширенного регистра ЕСХ максимальное число шагов в цикле 
  увеличивается до 232. Для того чтобы в 16-разрядном приложении процессор при 
  выполнении команд loopne/loopnz использовал не 16-разрядный регистр СХ, а 32-разрядный 
  регистр ЕСХ, перед командами loopne/loopnz необходимо указать префикс замены 
  размера адреса 67h.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov ЕСХ,1000000 ;Предельное число шагов <br>
  хххх: . . . ;Тело цикла <br>
  db 67h <br>
  loopne xxxx</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386Р+ LSL Загрузка 
  границы сегмента</font></p>

<font face="Arial, Helvetica, sans-serif" size="3">
  
<p><br>
  Команда Isl загружает в первый операнд границу сегмента из дескриптора сегмента, 
  заданного селектором во втором операнде.<br>
  В качестве первого операнда команды Isl можно использовать 16- или 32-разрядный 
  регистр общего назначения; в качестве второго - 16- или 32-разрядный регистр 
  общего назначения или 16- или 32-битовое поле памяти.</p>

</font>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index16.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index18.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>
