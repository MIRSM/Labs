<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index18.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index20.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
MOVS Пересылка данных из строки в строку
</font>
</font>
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="4">
 MOVSB Пересылка байта данных из строки в строку</font>
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="4">
  MOVSW Пересылка слова данных из строки в строку</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  <br>
  Команды предназначены для операций над строками (строкой называется последовательность 
  байтов или слов памяти с любым содержимым). Они пересылают по одному элементу 
  строки, который может быть байтом или словом. Первый операнд (приемник) адресуется 
  через ES:DI, второй (источник) - через DS:SI. Операцию пересылки можно условно 
  изобразить следующим образом:</p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">(DS:SI) -&gt; (ES:DI)</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>После каждой операции пересылки 
  регистры SI и DI получают положительное (если флаг DF=0) или отрицательное (если 
  флаг DF=1) приращение. Величина приращения составляет 1 или 2 в зависимости 
  от размера пересылаемых элементов. Вариант команды movs имеет формат:</p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">movs строка_1, строка_2</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>В этом случае байты или слова из 
  строки строка_2 пересылаются на место строки строка_]. Размер пересылаемых элементов 
  определяется описанием строк (с помощью директив db или dw). Это не избавляет 
  от необходимости инициализировать регистры ES:DI и DS:SI адресами строк строка 
  _1 и строка_2. В этом формате возможна замена сегмента второй строки (источника):</p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">movs строка_1, ES:строка_2</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>Рассматриваемые команды могут предваряться 
  префиксом повторения rep (повторять СХ раз). После выполнения рассматриваемых 
  команд регистры SI и DI указывают на ячейки памяти, находящиеся за теми (если 
  DF=0) или перед теми (если DF=1) элементами строк, на которых закончились операции 
  пересылки. Если флаг DF сброшен, то пары регистров DS:SI и ES:DI следует инициализировать 
  начальными адресами строк-операндов; строка-источник будет пересылаться от се 
  начала, в порядке возрастания номеров ее байтов. Если флаг DF установлен, то 
  пары регистров DS:SI и ES:DI следует инициализировать конечными адресами строк-операндов; 
  строка-источник будет пересылаться от ее конца, в порядке уменьшения номеров 
  ее байтов. Команды не воздействует на флаги процессора.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных основного сегмента данных,<br>
  ;адресуемого через DS:<br>
  txt db 'Урок 1' ;Пересылаемая строка<br>
  txt_len equ S-txt ;Ee длина<br>
  ;В 'полях данных дополнительного сегмента данных,<br>
  ;адресуемого через ES :<br>
  string db 80 dup (' ')<br>
  ;В программном сегменте:<br>
  lea SI,txt ;DS:SI -&gt; txt<br>
  lea DI,string+10.;ES:DI -&gt; string+10<br>
  сld ;Движение по строке вперед<br>
  mov CX,txt_len ;Столько байтов переслать<br>
  rep movsb ;Пересылка</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных сегмента данных, адресуемого через DS: <br>
  txt db 'А',84h, 'В',84h, 'A',84h, 'P',<br>
  db 84h,'И',84h,'Я',84h,'!',84h <br>
  txt_len=$-txt ;B программном сегменте:<br>
  mov AX,0B800h ;Сегментный адрес видеобуфера<br>
  mov ES,AX ;Инициализируем ES<br>
  ;Выведем на экран текст<br>
  mov DI,1672 ;Смещение к середине экрана <br>
  lea SI,txt ;DS:SI ® txt<br>
  сld ;Движение по строке вперед <br>
  mov CX,txt_len/2 ;Столько слов переслать <br>
  rep movsw ;Пересылка в середину экрана<br>
  ;красной мерцающей (атрибут <br>
  ;84h) надписи 'АВАРИЯ!'</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных сегмента данных, адресуемого через DS: <br>
  datal dw 10000 dup(') ;Массив произвольных данных <br>
  data2 dw 5000 dup(') ;Массив-приемник <br>
  ;В программном сегменте<br>
  push DS ;Настроим<br>
  pop ES ;ES на тот же сегмент данных<br>
  mov SI,offset datal;SI -&gt; datal<br>
  add SI,5000 ;Сместим SI к середине <br>
  ;массива<br>
  mov DI,offset data2;DI -&gt; data2<br>
  mov CX,2500 ;Размер половины массива (в <br>
  ;словах)<br>
  сld ;Движение вперед <br>
  rep movsw ;Перешлем вторую половину<br>
  ;массива datal на место data2</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 4</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных сегмента, адресуемого через DS<br>
  file db 'MYFILE.01.DAT1,0 ;Строка-источник<br>
  fname db 128 dup(?) ;Строка-приемник<br>
  ;В программном сегменте <br>
  push DS<br>
  pop ES ;Теперь ES=DS <br>
  mov SI,offset file;DS:SI -&gt; strl <br>
  mov SI,128 ;Максимальная длина имени<br>
  ;файла <br>
  сld ;Движение по строке вперед<br>
  null: lodsb ;Загрузим в AL очередной<br>
  ; символ<br>
  cmp AL, 0 ;Ищем 0 в конце имени файла <br>
  loopne null<br>
  ;DS:SI ® Первый символ за концом имени файла (за<br>
  ;завершающим нулем)<br>
  dec SI ;SI -&gt; байт с 0 std ;Движение по строке назад <br>
  mov ВХ,128 ;Из начального значения СХ <br>
  sub BX,CX ;вычтем то, что в СХ осталось<br>
  mov СХ,ВХ ;СХ=число символов в имени (с 0)<br>
  dec ВХ ;Смещение к 0 от начала имени файла<br>
  lea DI,fname[ВХ] ;Смещение завершающего 0<br>
  rep movsb ;Перешлем все имя (от конца к началу)</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ MOVSD Пересылка 
  двойного слова из строки в строку</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда аналогична командам МП 86 movsb и movsw, но позволяет скопировать двойное 
  слово из строки, адресуемой через регистры DS:ESI, в строку, адресуемую через 
  регистры ES:EDI.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных сегмента, адресуемого через DS <br>
  strl db '01234567890ABCDEF' ;Строка-источник <br>
  str2 db 16 dup(?) ;Строка-приемник <br>
  ;B программном сегменте <br>
  push DS<br>
  pop ES ;Теперь ES=DS <br>
  mov SI,offset strl ;DS:SI ®strl <br>
  mov DI,offset str2 ;ES:DI -&gt; str2 <br>
  сld ;Движение по строке вперед <br>
  mov CX,4 ;Коэффициент повторения <br>
  rep movsd ;Копирование по 4*4 байт</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ MOVSX Пересылка 
  с расширением знака</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда пересылает байт в слово или двойное слово, а также слово в двойное слово 
  с расширением знака. В качестве первого операнда (приемника) может использоваться 
  16- или 32-разрядный регистр общего назначения, в качестве второго - 8- или 
  16-разрядный регистр общего назначения или ячейка памяти такого же размера. 
  Недопустима пересылка из памяти в память, в или из сегментного регистра, а также 
  непосредственного значения. Фактически команда movsx увеличивает размер как 
  положительного, так и отрицательного числа, ни изменяя ни его значения, ни знака.</p>
<p align="center"><b>Пример 1</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CL,-5 ;CL=FBh <br>
  movsxAX,CL ;AX=FFFBh</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 2</b>
  </p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><br>
  mov CL,+5 ;CL=05h <br>
  movsxAX,CL ;AX=0005h</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 3</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov BL,-128 ;BL=80h <br>
  movsxECX,BL ;ECX=FFFFFF80h</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 4</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  mem dw -3 ;mem=FFFDh<br>
  ;В программном сегменте<br>
  movsxEB-X,mem ; EBX=FFFFFFFDh</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ MOVZX Пересылка 
  с расширением нуля</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда пересылает байт в слово или двойное слово, а также слово в двойное слово 
  с заполнением старших разрядов нулями. В качестве первого операнда (приемника) 
  может использоваться 16- или 32-разрядный регистр общего назначения, в качестве 
  второго - 8- или 16-разрядный регистр общего назначения или ячейка памяти такого 
  же размера. Недопустима пересылка из памяти в память, в или из сегментного регистра, 
  а также непосредственного значения. Фактически команда movzx увеличивает размер 
  числа, считая его числом без знака.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CL,5 ;CL=05h <br>
  movsxAX,CL ;AX=0005h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CL,-5 ;CL=FBh <br>
  movsxAX,CL ;AX=00FBh</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov BL,80h ;BL=80h <br>
  movsxECX,BL ;ECX=00000080h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 4</b></p>

  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">;B полях данных<br>
  mem dw 0FFFFh ;mem=FFFFh<br>
  ;B программном сегменте<br>
  movsxEBX,mem ;EBX=0000FFFFh</font></p>

</blockquote>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index18.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index20.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>
