<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index31.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>

</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
486+ XADD Обмен   и сложение
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  Команда xadd выполняет в одной операции сложение и обмен операндов. Команда 
  требует двух операндов, причем первый операнд должен быть ячейкой памяти, а 
  второй - регистром. После сложения операндов исходное содержимое памяти переносится 
  во второй операнд (регистр), а полученная сумма записывается в память (на место 
  первого слагаемого) (рис. П13). Команда воздействует на флаги OF, SF, ZF, AF, 
  PF и CF.</p>
<p align="center"><img src="pr-13.jpg" ></p>
<p align="center"><b>Рис. П13.</b> Действие команды xadd.</p>
<p align="center"><b>Пример</b></p>
<blockquote>
<p><br>

</font>
  <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  mem dw 99<br>
  ;В программном сегменте<br>
  mov AX,48<br>
  xadd mem,AX ;mem=147, AX=99</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">XCHG Обмен 
  данными между операндами</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда xchg пересылает значение первого операнда во второй, а второго - в первый. 
  В качестве любого операнда можно указывать регистр (кроме сегментного) или ячейку 
  памяти, однако не допускается определять оба операнда одновременно как ячейки 
  памяти. Операнды могут быть байтами или словами и представлять числа со знаком 
  или без знака. Команда не воздействует на флаги процессора.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,OFF01h<br>
  mov SI,1000h<br>
  xchg AX,SI ;AX=01000h, SI=FF01h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В полях данных: <br>
  mem dw 0F0F0h <br>
  ;В программном сегменте<br>
  mov CX,1256h<br>
  xchg CX,mem ;CX=F0F0h, mem=1256h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,6031h<br>
  xchg AH,AL ;AX=3160h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><b><img src="pr.gif" ></b> Допустимо использование 
  32-битовых операндов и дополнительных режимов адресации 32-разрядных процессоров.</p>
<p align="center"><b>Пример</b></p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><br>
  xchg ESI,EDI ;ESI и EDI обмениваются содержимым</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">XLAT Табличная 
  трансляция</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда xlat осуществляет выборку байта из массива байтов, который в этом случае 
  называют таблицей трансляции. В регистре ВХ должен находиться относительный 
  адрес таблицы, а в регистре AL - смещение в таблице к выбираемому байту (его 
  индекс). Выбранный байт загружается в регистр AL, замещая находившееся в нем 
  смещение. Длина таблицы может достигать 256 байт. Таблица должна находиться 
  в сегменте данных, адресуемом через сегментный регистр DS. Замена сегмента не 
  допускается. Команда xlat не имеет параметров, но требует предварительной настройки 
  регистров ВХ и AL. Команда не воздействует на флаги процессора.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;Пример демонстрирует преобразование первых 14 скен-кодов <br>
  ;(фактически это скен-коды клавиш верхнего ряда <br>
  ;клавиатуры) в коды ASCII соответствующих символов <br>
  ; В полях данных:<br>
  table db 0,27, ' 1234567890- = \';Таблица кодов ASCII <br>
  ;В программном сегменте <br>
  lea BX,table<br>
  mov AL,5 ;Скен-код 5 клавиши &lt;4/$&gt; <br>
  xlat ;AL=34h, код ASCII символа 4</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>&nbsp; </p>

</font>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ XLAT</font> </p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">
 386+ XLATB</font> </p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда xlatb эквивалентна команде xlat МП 86 за исключением того, что для 32-разрядных 
  приложений относительный адрес таблицы размещается в расширенном регистре ЕВХ.<br>
  Команда xlat может иметь в качестве операнда относительный адрес таблицы трансляции; 
  в этом случае помещение адреса таблицы в регистр ЕВХ не требуется. Действие 
  команды от этого не изменяется, однако возможна замена сегмента. </p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;В сегменте, адресуемом через сегментный регистр ES: <br>
  table db 0,27,'1234567890-=\';Таблица кодов ASCII <br>
  ;В программном сегменте<br>
  mov AL,13 ;Скен-код клавиши &lt;=/+&gt; <br>
  xlat ES:table ;AL=3Dh, код ASCII символа =</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">XOR Логическое 
  ИСКЛЮЧАЮЩЕЕ ИЛИ</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда хог выполняет операцию логического (побитового) ИСКЛЮЧАЮЩЕГО ИЛИ над 
  своими двумя операндами. Результат операции замещает первый операнд; второй 
  операнд не изменяется. Каждый бит результата устанавливается в 1, если соответствующие 
  биты операндов различны, и сбрасывается в 0, если соответствующие биты операндов 
  совпадают.<br>
  В качестве первого операнда команды хог можно указывать регистр (кроме сегментного) 
  или ячейку памяти, в качестве второго - регистр (кроме сегментного), ячейку 
  памяти или непосредственное значение, однако не допускается определять оба операнда 
  одновременно как ячейки памяти. Операнды могут быть байтами или словами. Команда 
  воздействует на флаги OF, SF, ZF, PF и CF, причем флаги OF и CF всегда сбрасываются, 
  а остальные флаги устанавливаются в зависимости от результата.</p>
<p align="center"><b>Правила побитового ИСКЛЮЧАЮЩЕГО 
  ИЛИ:</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  Первый операнд-бит 0101</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  Второй операнд-бит 0011</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  Бит результата 0110</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0Fh<br>
  хог AX,0FFFFh ;AX=FFF0h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  хог ВХ,ВХ ;Обнуление ВХ</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov SI,0AAAAh<br>
  mov BX,5555h<br>
  xor SI,BX ;SI=FFFFh,BX=5555h</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><b><img src="pr.gif" ></b> Допустимо использование 
  32-битовьгх операндов и дополнительных режимов адресации 32-разрядных процессоров.</p>
<p align="center"><b>Пример</b>
  </p>

  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov EAX,4444AAAAh<br>
  xor EAX,4441AAACh ;EAX=00050006h</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  <br>
  </p>

  </blockquote>

</font>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index31.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>

</tr>
</table>
</body>
</html>
