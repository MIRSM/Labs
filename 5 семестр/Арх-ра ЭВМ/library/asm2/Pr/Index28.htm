<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index27.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index29.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
386+ SETcc  Установка байта по условию
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  Команды, обозначаемые (в книгах, не в программах!) SETcc, осуществляют запись 
  в указанный байтовый операнд 1 или 0 в зависимости от одного из 16 условий, 
  определяемых флагами состояния. Если условие ее выполняется, команда записывает 
  в операнд 1; если условие не выполняется - 0.В качестве операнда можно использовать 
  байтовый регистр или 8-битовую ячейку памяти.<br>
  В составе команд процессора предусмотрены следующие команды условной установки 
  байта:

</font>
</p>
<blockquote>
<p align="left">
<font face="Verdana, Arial, Helvetica, sans-serif" size="3">Команда Установить 1, если Условие установки 1<br>
  seta выше CF=0 и ZF=0<br>
  setae выше или равно CF=0<br>
  setb ниже CF= I<br>
  setbe ниже или равно CF=1 или ZF=1<br>
  setc перенос CF=1<br>
  sete равно ZF=1<br>
  setg больше ZF=0 или SF=OF<br>
  setge больше или равно SF=OF<br>
  setl меньше SF не равно OF<br>
  setle меньше или равно ZF=1 или SF не равно ОР<br>
  setna не выше CF=1 или ZF=1<br>
  setnae не выше и не равно CF=1<br>
  setnb не ниже CF=0<br>
  setnbe не ниже и не равно CF=0 и ZF=0<br>
  setnc нет переноса CF=0<br>
  setne не равно ZF=0<br>
  setng не больше ZF=1 или SF не равно OF<br>
  setnge не больше и не равно SF не равно OF<br>
  setnl не меньше SF=OF<br>
  setnle не меньше и не равно ZF=0 и SF=OF<br>
  setno нет переполнения OF=0<br>
  setnp нет четности PF=0<br>
  setns знаковый бит равен О SF=0<br>
  setnz не нуль ZF=0<br>
  seto переполнение OF=1<br>
  setp есть четность PF=1<br>
  setpe сумма битов четная PF=1<br>
  setpo сумма битов нечетная PF=0<br>
  sets знаковый бит равен SF=1<br>
  setz нуль ZF= I</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>Команды, осуществляющие установку 
  по условию &quot;выше - ниже&quot;, предназначены для анализа чисел без знака; 
  команды, осуществляющие установку по условию &quot;больше - меньшее&quot;, предназначены 
  для анализа чисел со знаком.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  cmp AX,35h<br>
  seta CH ;Если AX&gt;35h, CH=1 <br>
  ;Если AX&lt;=35h, CH=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  flag db ?<br>
  ;В программном сегменте<br>
  test AX,8000h<br>
  sete flag ;Если в АХ установлен бит 7, <br>
  ;flag=l. Иначе flag=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>386Р+ SGDT Сохранение в памяти содержимого 
  регистра таблицы глобальных дескрипторов</b></p>
<p><br>
  Команда копирует содержимое регистра таблицы глобальных дескрипторов GDTR (линейный 
  базовый адрес таблицы и ее границу) в поле из 6 байт, указанное в качестве операнда.</p>
<p>&nbsp;</p>

</font>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">SHL Логический 
  сдвиг влево</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда полностью эквивалентна команде sal (арифметический сдвиг влево). См. 
  описание команды sal.</p>
<p>&nbsp;</p>

</font>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ SHLD Логический 
  сдвиг влево с двойной точностью</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Трехоперандная команда shld с операндами op1, ор2 и орЗ осуществляет сдвиг влево 
  первого из своих операндов opl. Число битов сдвига определяется третьим операндом 
  орЗ. По мере сдвига операнда opl влево, выдвигаемые из него старшие биты, пройдя 
  через флаг CF, теряются, ; на освобождающиеся места со стороны его младших битов 
  поступают старшие биты второго операнда ор2, как если бы он вдвигался своим 
  левым (старшим) концом в opl. Однако после завершения сдвига значение операнда 
  ор2 не изменяется (рис. П10). Во флаге CF остается последний выдвинутый из операнда 
  opl бит. Максимальное число битов сдвига составляет 31.</p>
<p align="center"><img src="pr-10.jpg" ></p>
<p align="center"><b>Рис. П10. </b> Действие команды shld.</p>
<p>В качестве первого операнда op1можно 
  указывать 16- или 32-разрядный регистр общего назначения или 16- или 32-битовую 
  ячейку памяти. Вторым операндом ор2 может служить только 16- или 32-разрядный 
  регистр общего назначения. Третий операнд, характеризующий число битов сдвига, 
  может находиться в регистре CL или быть непосредственным значением.<br>
  Команда воздействует на флаги OF, SF, ZF, PF и CF.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,OC001h<br>
  mov BX,900Fh<br>
  shld AX,BX,1 ;AX=8003h, BX=900Fh, CF=1</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0C001h<br>
  mov BX,900Fh<br>
  shld AX,BX,2 ;AX=0006h, BX=900Fh, CF=1</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0C001h <br>
  mov BX,900Fh <br>
  shld AX,BX,3 ;AX=000Ch, BX=900Fh, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 4</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov EBX,0FFCS000h<br>
  mov ESI,12340000h<br>
  mov CL,16<br>
  shld EBX,ESI,CL ;EBX=80001234h,<br>
  ;ESI=12340000h, CF=0</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">SHR Логический 
  сдвиг вправо</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Команда shr осуществляет сдвиг вправо всех битов операнда. Младший бит операнда 
  поступает в флаг CF. Если команда записана в формате</p>
  <blockquote>
<p>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">SHR операнд,1</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>сдвиг осуществляется на 1 бит. В 
  старший бит операнда загружается 0, а младший теряется. Если команда записана 
  в формате</p>
  <blockquote>
<p>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">SHR onepand,CL</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p>сдвиг осуществляется на число бит, 
  указанное в регистре-счетчике CL, при этом в процессе последовательных сдвигов 
  старшие биты операнда заполняются нулями, а младшие, пройдя через флаг CF, теряются 
  (рис. П11).</p>
<p align="center"><img src="pr-11.jpg" ></p>
<p align="center"><b>Рис. П11.</b> Действие команды shr.</p>
<p>В качестве операнда можно указывать 
  любой регистр (кроме сегментного) или ячейку памяти размером как в байт, так 
  и в слово. Не допускается использовать в качестве операнда непосредственное 
  значение. Команда воздействует на флаги CF, OF, PF, SF и ZF.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AL,7<br>
  shr AL,1 ;AL=3, CF=1</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX, lFF0h<br>
  mov CL,4<br>
  shr AX,CL ;AX=01FFh, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov DX,9513h<br>
  mov CL,8<br>
  shr DX,CL ;DX=0095h, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><b><img src="pr.gif" ></b> Допустим сдвиг 32-битовых 
  операндов. Допустимо указание числа бит сдвига как с помощью регистра CL, так 
  и непосредственным значением. Максимальная величина сдвига составляет 31 бит.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov ESI,0FFFF0009h<br>
  shr ESI,8 ;ESI=00FFFF00h, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  mem dd 11111111h <br>
  ;B программном сегменте<br>
  shr mem,12 ;mem=00011111h, CF=0</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ SHRD Логический 
  сдвиг вправо с двойной точностью</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">
<p><br>
  Трехоперандная команда shrd с операндами opl, ор2 и орЗ осуществляет сдвиг вправо 
  первого из своих операндов opl. Число битов сдвига определяется третьим операндом 
  орЗ. По мере сдвига операнда opl вправо выдвигаемые из него младшие биты, пройдя 
  через флаг CF, теряются, а на освобождающиеся места со стороны его старших битов 
  поступают младшие биты второго операнда ор2, как если бы он вдвигался своим 
  правым (младшим) концом в opl. Однако после завершения сдвига значение операнда 
  ор2 не изменяется (рис. П12). Во флаге CF остается последний выдвинутый из операнда 
  opl бит. Максимальное число битов сдвига составляет 31.<br>
  В качестве первого операнда opl можно указывать 16- или 32-разрядный регистр 
  общего назначения или 16- или 32-битовую ячейку памяти. Вторым операндом ор2 
  может служить только 16- или 32-разрядный регистр общего назначения.</p>
<p align="center"><img src="pr-12.jpg"></p>
<p align="center"><b>Рис. П12.</b> Действие команды shrd.</p>
<p>Третий операнд, характеризующий 
  число битов сдвига, может находиться в регистре CL или быть непосредственным 
  значением.<br>
  Команда воздействует на флаги OF, SF, ZF, PF и CF.</p>
<p align="center"><b>Пример 1</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0C001h<br>
  mov BX,900Eh<br>
  shrd AX,BX,1 ;AX=6000h, BX=900Eh, CF=1</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0C001h<br>
  mov BX,900Eh<br>
  shrd AX,BX,2 ;AX=B000h, BX=900Eh, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 3</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0C001h<br>
  mov BX,900Eh<br>
  shrd AX,BX,3 ;AX=D800h, BX=900Eh, CF=0</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
<p align="center"><b>Пример 4</b></p>

  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov EBX,0FFCS000h<br>
  mov ESI,12345678h<br>
  mov CL,16<br>
  shrd EBX,ESI,CL ;EBX=5678FFC8h,<br>
  ;ESI=12345678h, CF=0</font></p>

</blockquote>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index27.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index29.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>

