<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index8.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index10.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
DAA Десятичная коррекция в регистре AL
после сложения
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">

  Команда daa корректирует результат сложения в регистре AL двух упакованных двоично-десятичных
(BCD) чисел (по одной цифре в каждом полубайте), чтобы получить пару правильных 
  упакованных двоично-десятичных цифр. Команда используется вслед за операцией 
  сложения упакованных двоично-десятичных чисел. Если результат сложения превышает 
  99, возникает перенос и устанавливается флаг
CF. Команда воздействует на флаги SF, ZF, AF, PF и CF.</p>
<p align="center"><b>Пример 1</b>
  </p>
<blockquote>
<p><br>

</font>
  <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AL,87h ;Упакованное BCD 87</font>
  </p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  add AL,04h ;После сложения AL=8Bh</font>
  </p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  daa ;AL=91h, т.е. упакованное BCD 91</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
</blockquote>
<p align="center"><b>Пример 2</b></p>
<blockquote>
<p><br>

</font>
  <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AL,87h ;Упакованное BCD 87 <br>
  add AL,11h ;После сложения AL=97h <br>
  daa ;AL=97h, т.е. упакованное <br>
;BCD 97 (в данном случае <br>
  ;команда daa ничего не делает)</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">DAS Десятичная 
  коррекция в регистре AL после вычитания</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><br>
  Команда das корректирует результат вычитания в регистре AL двух упакованных 
  двоично-десятичных (BCD) чисел (по одной цифре в каждом полубайте), чтобы получить 
  пару правильных упакованных десятичных цифр. Команда используется вслед за операцией 
  вычитания упакованных двоично-десятичных чисел. Если для вычитания требовался 
  заем, устанавливается флаг CF. Команда воздействует на флаги
SF, ZF, AF, PF 
  и CF.</p>
<p align="center"><b>Пример 1</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AL,55h ;Упакованное BCD 55</font>
  </p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  sub AL,19h ;После вычитания AL=3Ch</font>
  </p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  das ;AL=36h, т.е. упакованное BCD 36</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 2</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AL,55h ;Упакованное BCD 55</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  sub AL,15h ;После вычитания AL=40h</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  das ;AL=40h, т.е. упакованное</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
;BCD 40 (в данном случае</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;команда das ничего не делает)</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">DEC Декремент 
  (уменьшение на 1)</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><br>
  Команда dec вычитает 1 из операнда, в качестве которого можно указывать регистр 
  (кроме сегментного) или ячейку памяти размером как в байт, так и в слово. Не 
  допускается использовать в качестве операнда непосредственное значение. Операнд 
  интерпретируется как число без знака. Команда воздействует на флаги
OF, SF, ZF, AF и PF.</p>
<p align="center"><b>Пример 1</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0FFFFh<br>
  dec AX ;AX=FFFEh</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 2</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CX,0<br>
  dec CX ;CX=FFFFh</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 3</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov CX,3500h<br>
  dec CL ;CX=35FFh</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 4</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  mem dw 68<br>
;B программном сегменте<br>
  dec mem mem=67</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><img src="pr.gif" > Допустимо использование 
  32-битовых операндов и дополнительных режимов адресации 32-разрядных процессоров.</p>
<p align="center"><b>Пример</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov EAX, 0<br>
  dec EAX ;EAX=FFFFFFFFh</font></p>
<p>&nbsp;</p>
</blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">DIV Деление 
  целых чисел без знака</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><br>
  Команда div выполняет деление целого числа без знака, находящегося в регистрах 
  АХ (в случае деления на байт) или DX:AX (в случае деления на слово), на операнд-источник 
  (целое число без знака). Размер делимого в два раза больше размеров делителя 
  и остатка.<br>
  Для однобайтовых операций делимое помещается в регистр АХ; после выполнения 
  операции частное записывается в регистр AL, остаток - в регистр АН.<br>
  Для двухбайтовых операций делимое помещается в регистры DX:AX (в DX - старшая 
  часть, в АХ - младшая); после выполнения операции частное записывается в регистр 
  АХ, остаток - в регистр DX.<br>
  В качестве операнда-делителя команды div можно указывать регистр (кроме сегментного) 
  или ячейку памяти; не допускается деление на непосредственное значение. Если 
  делитель равен 0, или если частное не помещается в назначенный регистр, возбуждается 
  прерывание с вектором 0. Команда не воздействует на флаги процессора.<br>
  Команду div можно использовать для целочисленного деления неупакованного двоично-десятичного 
  числа в регистре АХ не неупакованный двоично-десятичный делитель, если перед 
  ней выполнить команду aad (см. пример 3).</p>
<p align="center"><b>Пример 1</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,506 ;Делимое<br>
  mov BL,50 ;Делитель<br>
  div BL ;AL=0Ah (частное), AH=06h (остаток)</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример 2</b>
  </p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ; В полях данных<br>
  long dd 65537 ;Делимое<br>
  ;В программном сегменте<br>
  mov DX,word ptr long+2 ;DX=0001h, старшая<br>
  ;часть делимого <br>
  mov AX,word ptr long ;AX=0001h, младшая<br>
  ;часть делимого<br>
  mov CX,256 ;Делитель <br>
  div CX ;AX=0100h (частное),<br>
;DX=0001h (остаток)</font>
<font face="Arial, Helvetica, sans-serif" size="3">

  <br>
  </p>
  </blockquote>
<p align="center"><b>Пример З</b></p>
  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  mov AX,0807h ;Неупакованное BCD 87<br>
  mov DL,09h ;Неупакованное BCD 9<br>
  aad ;AX=0057h=87<br>
  div DL ;AX=0609h, т.е. 9 и 6 в остатке</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><img src="pr.gif" > Допустимо использование 
  32-битовых операндов и дополнительных режимов адресации 32-разрядных процессоров. 
  При этом, если делитель представляет 32-битовую величину, то возможен только 
  один вариант команды деления, когда делимое находится в парс регистров
EDX:EAX. 
  В этом случае частное будет помещено в регистр ЕАХ, остаток - в
EDX.</p>
<p align="center"><b>Пример</b></p>

</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><br>
  mov ЕАХ, 0FFFFFFFh ;Младшая часть делимого <br>
  mov EDX,0 ;Старшая часть делимого <br>
  mov EBX,256 ;Делитель<br>
  div EBX ;Частное в EAX=000FFFFFh, <br>
  ;Остаток в EDX=000000FFh</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">

<p>&nbsp;</p>

</font>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="4">386+ ENTER
Создание стекового кадра для параметров процедуры</font></p>
<font face="Arial, Helvetica, sans-serif" size="3">

<p><br>
  Команда enter, обычно являющаяся первой командой процедуры, выделяет заданный 
  объем стекового пространства для локальных (автоматических) параметров процедуры, 
  предоставляя процедуре указатель на выделенную область (в качестве такого указателя 
  используется регистр ЕВР) и смещая указатель стека ESP так, чтобы он указывал 
  на начало свободного стекового пространства. В результате процедура имеет возможность 
  обращаться по ходу своего выполнения к своим локальным параметрам и, в то же 
  время, пользоваться оставшимся пространством стека для временного сохранения 
  в нем любых данных с помощью команд push и pop. Команда leave в конце процедуры 
  выполняет обратные действия, возвращая стек в исходное состояние и уничтожая 
  область локальных переменных. Локальными, как известно, называются как раз те 
  переменные, которые существуют только в течение времени выполнения некоторой 
  процедуры, и автоматически исчезают после се завершения.<br>
  Команды enter и leave используются многими языками высокого уровня для управления 
  доступом к локальным переменным вложенных процедур.<br>
  Команда enter имеет два операнда. Первый (16-битовое непосредственное значение) 
  определяет число байтов, выделяемых в стеке для локальных переменных. Для 32-разрядных 
  приложений место в стеке выделяется двойными словами (по 4 байт), для 16-разрядных 
  - словами (по 2 байт). Второй операнд (8-битовос непосредственное значение) 
  задаст так называемый лексический уровень процедуры, характеризующий степень 
  ее вложенности. В зависимости от значения лексического уровня, команда enter 
  выполняется по-разному. При лексическом уровне, равном 0, реализуется невложенная 
  форма команды enter. В этом случае после входа в процедуру (командой
call) с 
  сохранением в стеке адреса возврата, в стек заносится текущее содержимое регистра 
  ЕВР, в ЕВР копируется текущее значение указателя стека, а указатель стека смещается 
  на число байтов, заданное первым операндом команды enter
. Создаваемая 
  на сте-ке структура носит название стекового кадра, а регистр ЕВР выполняет 
  в данном случае функцию указателя стекового кадра.</p>
<p>Подпрограмма имеет возможность обращаться 
  к своим локальным переменным по адресам ESP-4 и ESP-8 (для случая резервирования 
  места под две переменные). Занеся в стек по этим адресам некоторые данные (полученные 
  в качестве параметров вызова через регистры общего назначения или созданные 
  самостоятельно) подпрограмма может затем многократно к ним обращаться, не боясь 
  их затирания в процессе использования стека. Поскольку команда enter настроила 
  указатель стека на область, находящуюся за пределами локальных переменных, программа 
  может использовать команды push для сохранения в стеке временных данных.<br>
  Команда leave, размещаемая в самом конце процедуры, перед завершающей командой
ret, копирует содержимое ЕВР в ESP, освобождая (в логическом плане) область 
  локальных переменных, и снимает со стека сохраненное там исходное содержимое 
  ЕВР. После этого командой ret можно вернуться в вызывающую процедуру.<br>
  Поскольку первый параметр команды enter имеет размерность слова, процедура в 
  принципе имеет возможность зарезервировать в стеке для своих локальных переменных 
  до 64 Кбайт стекового пространства.<br>
  Лексические уровни, отличные от 0, используются в тех случаях, когда по правилам 
  языка высокого уровня каждая вложенная процедура имеет право обращаться к локальным 
  переменным всех вышележащих процедур, но не к процедурам, находящимся на параллельных 
  с ней ветвях вложенности. Другими словами, область видимости переменных распространяется 
  на все вложенные процедуры, но две подпрограммы, вызываемые из одной и той же 
  (вышележащей) процедуры, &quot;не видят&quot; друг друга.<br>
  В таких случаях главной процедуре назначается лексический уровень 1, все вызываемые 
  из нее подпрограммы получают значение лексического уровня 2, подпрограммы, вызываемые 
  из этих процедур, имеют уровень 3 и т.д. Команды enter при ненулевом значения 
  второго параметра создают в стеке стековые кадры с более сложной структурой. 
  Отличие такого стекового кадра от рассмотренного выше заключается в том, что 
  в него, помимо области локальных переменных, входят также указатели стековых 
  кадров всех вышележащих процедур. В результате любая подпрограмма может с помощью 
  своего указателя (т.е. содержимого ESP) обратиться к собственных! переменным, 
  а используя хранящиеся в стеке указатели кадров вышележащих процедур, &quot;дотянуться&quot; 
  и до их локальных переменных. По-прежнему команды leave освобождают стек от 
  стековых кадров вместе со всеми находящимися в них данными.</p>
<p align="center"><b>Пример</b></p>

  <blockquote>
<p><br>

</font>
    <font face="Verdana, Arial, Helvetica, sans-serif" size="3">
  ;Вызывающая процедура<br>
  call subrl <br>
  ;Подпрограмма subrl <br>
  subrl proc<br>
  enter2048,0 ;Место под локальные данные<br>
  . . . ;Работа с локальными данными<br>
  leave<br>
  ret</font></p>

</blockquote>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index8.htm">
<img SRC="Back.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index10.htm">
<img SRC="For.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>

