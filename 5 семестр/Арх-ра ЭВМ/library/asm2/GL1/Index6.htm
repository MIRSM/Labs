<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index5.htm">
<img SRC="Back.gif" BORDER="0">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index7.htm">
<img SRC="For.gif" BORDER="0">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
Система прерываний
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">

Система прерываний любого
  компьютера является его важнейшей частью, позволяющей быстро реагировать на 
  события, обработка которых должна выполнятся немедленно: сигналы от машинных 
  таймеров, нажатия клавиш клавиатуры или мыши, сбои памяти и пр. Рассмотрим в 
  общих чертах компоненты этой системы.<br>
  Сигналы аппаратных прерываний, возникающие в устройствах, входящих в состав 
  компьютера или подключенных к нему, поступают в процессор не непосредственно, 
  а через два контроллера прерываний, один из которых называется ведущим, а второй 
  - ведомым (рис. 1.11)</font></p>
<p align="center"><img src="gl1-11.jpg"></p>
<blockquote>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b>Рис. 1.11. </b> Аппаратная 
  организация прерываний.</font></p>
</blockquote>
<p><font face="Arial, Helvetica, sans-serif" size="3">Два контроллера используются 
  для увеличения допустимого количества внешних устройств. Дело в том, что каждый 
  контроллер прерываний может обслуживать сигналы лишь от 8 устройств. Для обслуживания 
  большего количества устройств контроллеры можно объединять, образуя из них веерообразную 
  структуру. В современных машинах устанавливают два контроллера, увеличивая тем 
  самым возможное число входных устройств до 15 (7 у ведущего и 8 у ведомого контроллеров).<br>
  К входным выводам IRQ1...IRQ7 и IRQ8...IRQ15 (IRQ - это сокращение от Interrupt
Request, запрос прерывания) подключаются выводы устройств, на которых возникают 
  сигналы прерываний. Выход ведущего контроллера подключается к входу INT микропроцессора, 
  а выход ведомого - к входу IRQ2 ведущего. Основная функция контроллеров - передача 
  сигналов запросов прерываний от внешних устройств на единственный вход прерываний 
  микропроцессора. При этом, кроме сигнала INT, контроллеры передают в микропроцессор 
  по линиям данных номер вектора, который образуется в контроллере путем сложения 
  базового номера, записанного в одном из его регистров, с номером входной линии, 
  по которой поступил запрос прерывания. Номера базовых векторов заносятся в контроллеры 
  автоматически в процессе начальной загрузки компьютера. Для ведущего контроллера 
  базовый вектор всегда равен 8, для ведомого - 70h. Таким образом, номера векторов, 
  закрепленных за аппаратными прерываниями, лежат в диапазонах 8h...Fh и 70h...77h. 
  Очевидно, что номера векторов аппаратных прерываний однозначно связаны с номерами 
  линий, или уровнями IRQ, а через них - с конкретными устройствами компьютера. 
  На рис. 1.11 указаны некоторые из стандартных устройств компьютера, работающих 
  в режиме прерываний.<br>
  Процессор, получив сигнал прерывания, выполняет последовательность стандартных 
  действий, обычно называемых процедурой прерывания. Подчеркнем, что здесь идет 
  речь лишь о реакции самого процессора на сигналы прерываний, а не об алгоритмах 
  обработки прерываний, предусматриваемых пользователем в программах обработки 
  прерываний.<br>
  Объекты вычислительной системы, принимающие участие в процедуре прерывания, 
  и их взаимодействие показаны на рис. 1.12.</font></p>
<p align="center"><img src="gl1-12.jpg"></p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b>Рис. 1.12.</b> Процедура 
  обслуживания прерывания.</font></p>
<p><font face="Arial, Helvetica, sans-serif" size="3">Самое начало оперативной 
  памяти от адреса 0000h до 03FFh отводится под векторы прерываний - четырехбайтовые 
  области, в которых хранятся адреса обработчиков прерываний (ОбрПр на рис. 1.12). 
  В два старшие байта каждого вектора записывается сегментный адрес обработчика, 
  в два младшие - смещение (относительный адрес) точки входа в обработчик. Векторы, 
  как и соответствующие им прерывания, имеют номера, причем вектор с номером 0 
  располагается, начиная с адреса 0, вектор 1 - с адреса 4, вектор 2 - с адреса 
  8 и т.д. Вектор с номером п занимает, таким образом, байты памяти от
n*4 до n*4+3. Всего в выделенной под векторы области памяти помещается 256 векторов.<br>
  Получив сигнал на выполнение процедуры прерывания с определенным номером, процессор 
  сохраняет в стеке выполняемой программы текущее содержимое трех регистров процессора: 
  регистра флагов, CS и IP. Два последних числа образуют полный адрес возврата 
  в прерванную программу. Далее процессор загружает CS и IP из соответствующего 
  вектора прерываний, осуществляя, тем самым, переход на обработчик прерывания, 
  связанный с этим вектором.<br>
  Обработчик прерываний всегда заканчивается командой iret
(interrupt return, 
  возврат из прерывания), выполняющей обратные действия - извлечение из стека 
  сохраненных там слов и помещение их назад в регистры IP и
CS, а также в регистр 
  флагов. Это приводит к возврату в основную программу в ту самую точку, где она 
  была прервана.<br>
  В действительности запросы на обработку прерываний могут иметь различную природу. 
  Помимо описанных выше аппаратных прерывания от периферийных устройств, называемых 
  часто внешними, имеются еще два типа прерываний: внутренние и программные.<br>
  Внутренние прерывания возбуждаются цепями самого процессора при возникновении 
  одной из специально оговоренных ситуаций, например, при выполнении операции 
  деления на ноль или при попытке выполнить несуществующую команду. За каждым 
  из таких прерываний закреплен определенный вектор, номер которого известен процессору. 
  Например, за делением на 0 закреплен вектор 0, а за неправильной командой - 
  вектор 6. Если процессор сталкивается с одной из таких ситуаций, он выполняет 
  описанную выше процедуру прерывания, используя закрепленный за этой ситуацией 
  вектор прерывания.<br>
  Наконец, еще одним чрезвычайно важным типом прерываний являются программные 
  прерывания. Они вызываются командой hit с числовым аргументом, который рассматривается 
  процессором, как номер вектора прерывания. Если в программе встречается, например, 
  команда</font><font size="3" face="Times New Roman, Times, serif"><br>
  </font></p>
<blockquote>
<p><font size="3" face="Verdana">int 13h
  </font><font size="3" face="Times New Roman, Times, serif"><br>
  </font></p>
</blockquote>
<p><font face="Arial, Helvetica, sans-serif" size="3">то процессор выполняет 
  ту же процедуру прерывания, используя в качестве номера вектора операнд команды
int. Программные прерывания применяются в первую очередь для вызова системных 
  обслуживающих программ - функций DOS и BIOS. С командой int 2In вызова DOS мы 
  уже сталкивались в примере 1-1 и будем встречаться еще многократно. В дальнейшем 
  будут также приведены примеры использования команды int для вызова прикладных 
  обработчиков программных прерываний.<br>
  Важно подчеркнуть, что описанные действия процессора выполняются совершенно 
  одинаково для всех видов прерываний - внутренних, аппаратных и программных, 
  хотя причины, возбуждающие процедуру прерывания, имеют принципиально разную 
  природу.<br>
  Большая часть векторов прерываний зарезервирована для выполнения определенных 
  действий; часть из них автоматически заполняется адресами системных программ 
  при загрузке системы. Приведем краткую выдержку из таблицы векторов, позволяющую 
  продемонстрировать разнообразие ее состава:</font><font size="3" face="Times New Roman, Times, serif"><br>
  </font></p>
<p><font size="3" face="Verdana">00h -внутреннее прерывание, 
  деление на 0;<br>
  0lh -внутреннее прерывание, пошаговое выполнение (при
TF=1);<br>
  02h -немаскируемое прерывание (вывод NMI процессора);<br>
  08h -аппаратное прерывание от системного таймера;<br>
  09h -аппаратное прерывание от клавиатуры;<br>
  0Eh -аппаратное прерывание от гибкого диска;<br>
  10h - программное прерывание, программы BIOS управления видеосистемой;<br>
  13h - программное прерывание, программы BIOS управления дисками;<br>
  16h - программное прерывание, программы BIOS управления клавиатурой;<br>
  IDh -не вектор, адрес таблицы видеопараметров, используемой
BIOS;<br>
  lEh -не вектор, адрес таблицы параметров дискеты, используемой
BIOS;<br>
  21h - программное прерывание, диспетчер функций
DOS;<br>
  22h - программное прерывание, адрес перехода при завершении процесса, используемый
DOS;<br>
  23h -программное прерывание, обработчик прерываний по &lt;Ctrl&gt;/C, используемый
DOS;<br>
  25h - программное прерывание, абсолютное чтение диска (функция
DOS);<br>
  26h - программное прерывание, абсолютная запись на диск (функция
DOS);<br>
  60h...66h - зарезервировано для программных прерываний пользователя;<br>
  68h...6Fh - программные прерывания, свободные векторы;<br>
  70h -аппаратное прерывание от часов реального времени (с питанием от аккумулятора);<br>
  76h -аппаратное прерывание от жесткого диска;
  </font></p>
<p><font face="Arial, Helvetica, sans-serif" size="3">Как видно из таблицы, векторы 
  прерываний можно условно разбить<br>
  на следующие группы:<br>
  векторы внутренних прерываний процессора (0lh, 02h и др.);<br>
  векторы аппаратных прерываний (08h...0Fh и 70h...77h);<br>
  программы BIOS обслуживания аппаратуры компьютера (10h, 13h, 16h и др.);<br>
  программы DOS (21h, 22h, 23h и др.);<br>
  адреса системных таблиц BIOS (IDh, lEh и др.).<br>
  Системные программы, адреса которых хранятся в векторах прерываний, в большинстве 
  своем являются всего лишь диспетчерами, открывающими доступ к большим группам 
  программ, реализующих системные функции. Так, видеодрайвер BIOS (вектор 10h) 
  включает программы смены видеорежима, управления курсором, задания цветовой 
  палитры, загрузки шрифтов и многие другие. Особенно характерен в этом отношении 
  вектор 21h, через который осуществляется вызов практически всех функций
DOS: 
  ввода с клавиатуры и вывода на экран, обслуживания файлов, каталогов и дисков, 
  управления памятью и процессами, службы времени и т.д. Для вызова требуемой 
  функции надо не только выполнить команду int с соответствующим номером, но и 
  указать системе в одном из регистров (для этой цели всегда используется регистр 
  АН) номер вызываемой функции. Иногда для &quot;многофункциональных&quot; функций 
  приходится указывать еще и номер подфункции (в регистре
AL).
</font>
</p>
<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index5.htm">
<img SRC="Back.gif" BORDER="0">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index7.htm">
<img SRC="For.gif" BORDER="0">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>
