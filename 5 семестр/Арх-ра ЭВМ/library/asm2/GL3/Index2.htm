<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>
</title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body background="../FON.JPG" BGCOLOR="#E7E3E7" TEXT="#000000" LINK="#004080" VLINK="#004080">
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index1.htm">
<img SRC="Back.gif" BORDER="0">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index3.htm">
<img SRC="For.gif" BORDER="0">
</a>
</font>
</td>
</tr>
</table>
<p>
&nbsp;
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
Циклы и условные переходы&nbsp;
</font>
</font>
</p>
<p align="center">
<font face="Arial, Helvetica, sans-serif" size="3">
<font size="4">
 Циклы
</font>
<br>
</font>
</p>
<p align="left">
<font face="Arial, Helvetica, sans-serif" size="3">
  
  Циклы, позволяющие выполнить некоторый участок программы многократно, в любом 
  языке являются одной из наиболее употребительных конструкций. В системе команд 
  МП 86 циклы реализуются, главным образом, с помощью команды loop (петля), хотя 
  имеются и другие способы организации циклов. Во всех случаях число шагов в цикле 
  определяется содержимым регистра СХ, поэтому максимальное число шагов составляет 
  64 К.<br>
  Рассмотрим простой пример организации цикла. Пусть в программе зарезервировано 
  место для массива размером 10000 слов, и этот массив надо заполнить натуральным 
  рядом чисел от 0 до 9999. Эти числа, заполняющие последовательные элементы массива, 
  иногда называют числами-заполнителями. Соответствующий фрагмент программы будет 
  выглядеть следующим образом:</p>
<blockquote>
<p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;В
сегменте данных</font></p>
<p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">array dw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10000 dup(0)</font></p>
<p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;В
программном сегменте</font></p>
  <font face="Arial, Helvetica, sans-serif" size="3">
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  BX,offset array&nbsp; ; Адрес массива</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  SI,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;Индекс</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  AX,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Начальное значение заполнителя</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  CX,10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;
  Счетчик цикла</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">fill:
  mov [BX] [SI],AX&nbsp; ;Заполнитель пошлем в массив</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">inc
  AX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;Инкремент заполнителя</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">add
  SI,2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; модификация индекса</font></p>
  <p align="left"><font face="Verdana, Arial, Helvetica, sans-serif" size="3">loop
  fill&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Команда цикла</font></p>
  </blockquote>
<p>На этапе подготовки мы 
  заносим в регистр ВХ относительный адрес начала массива, отождествляемый с его 
  именем array, устанавливаем начальное значение индекса элемента массива в регистре 
  SI (с таким же успехом можно бьшо взять DI) и начальное значение числа-заполнителя. 
  Сам цикл состоит из трех команд - единственной содержательной команды засылки 
  числа-заполнителя в очередной элемент массива (по адресу, который вычисляется, 
  как сумма содержимого регистров ВХ и SI), а также модификации числа-заполнителя 
  и индекса очередного элемента массива. Завершающей командой loop управление 
  передается на метку fill, и цикл повторяется столько раз, каково содержимое 
  СХ, в данном случае 10000 шагов.<br>
  Следует обратить внимание на команду модификации индекса - в каждом шаге к содержимому 
  SI добавляется 2, так как массив состоит из двухбайтовых слов. Если бы нужно
было заполнить байтовый массив, то в каждом шаге содержимое регистра цикла SI 
  следовало увеличивать на 1.<br>
  Стоит отметить некоторые детали, связанные с механизмом выполнения команды
loop. 
  При реализации этой команды процессор сначала уменьшает содержимое регистра 
  СХ на 1, а затем сравнивает полученное число с нулем. Если СХ &gt; 0, переход 
  на указанную метку выполняется. Если СХ = 0, цикл разрывается и процессор переходит 
  на команду, следующую за командой loop. Поэтому после нормального выхода из 
  цикла содержимое СХ всегда равно 0.<br>
  Другое обстоятельство связано с кодированием команды
loop. В ее коде под смещение 
  к точке перехода отводится всего 1 байт. Поскольку смещение должно являться 
  величиной со знаком, максимальное расстояние, на которое можно передать управление 
  командой loop, составляет от -128 до +127 байт (хотя довольно трудно представить 
  себе цикл, в котором переход осуществляется вперед). Другими словами, тело цикла 
  ограничивается всего 128 байтами. Если циклически повторяемый фрагмент программы 
  имеет большую длину, цикл придется организовать другим, более сложным способом:</p>
</font></font>
<blockquote>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Организация
  длинного цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  CX,10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Счетчик цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">fill:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Метка начала цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Тело длинного цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">dec CX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Декремент счетчика цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp
  CX,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;
  Отработано заданное число шагов?</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">je finish&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Да, на метку продолжения программы</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jmp fill&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Нет, на начало цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">finish:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; Продолжение программы</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p>&nbsp;</p>
<p>В этом, весьма типичном 
  фрагменте мы &quot;вручную&quot; уменьшаем содержимое счетчика цикла и сравниваем 
  полученное значение с 0. Если СХ = О, это значит, что в цикле выполнено заданное 
  число шагов, и командой условного перехода je осуществляется переход на продолжение 
  программы (метка finish). Если СХ еще не равно нулю, командой безусловного перехода 
  jmp осуществляется возврат в начало цикла. Как было показано в гл. 2, команда 
  jmp позволяет перейти в любую точку сегмента, и ограничение на размер тела 
  цикла снимается.<br>
  При необходимости организовать вложенные циклы, для сохранения счетчика внешнего 
  цикла на время выполнения внутреннего удобно воспользоваться стеком. В следующем 
  фрагменте организуется временная задержка длительностью несколько секунд (конкретная 
  величина задержки зависит от скорости работы процессора).</p>

<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
CX,2000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Счетчик внешнего
цикла</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">outer: push CX&nbsp;&nbsp;&nbsp;
; Сохраним его в стеке</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  CX,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Счетчик
  внутреннего цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">inner: loop
  inner&nbsp; ; loop внутреннего цикла</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">pop CX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;Восстановим внешний счетчик</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">loop outher&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ; loop внешнего цикла</font></p>
</blockquote>
<p>Программные задержки удобно 
  использовать при отладке программ, чтобы замедлить их работу и успеть рассмотреть 
  их частичные результаты; иногда программные задержки позволяют синхронизовать 
  работу аппаратуры, подключенной к компьютеру, если скорость отработки аппаратурой 
  посылаемых в нее из компьютера команд меньше скорости процессора.<br>
  В приведенном выше фрагменте внешний цикл выполняется 2000 раз; внутренний - 
  65536 раз. При счете числа шагов внутреннего цикла используется явление оборачивания, 
  которое уже упоминалось ранее. Начальное значение в регистре СХ равно нулю; 
  после выполнения тела цикла 1 раз команда loop уменьшает содержимое СХ на 1, 
  что дает число FFFFh (которое можно рассматривать, как -1). В результате цикл 
  повторяется еще 65535 раз, а в сумме - точно 64 К шагов.<br>
  Команда loop внутреннего цикла передает управление на саму себя, т.е. тело внутреннего 
  цикла состоит из единственной команды loop. В этом нет ничего незаконного. Любая 
  команда, в том числе и loop, требует какого-то времени для своего выполнения, 
  и повторение 64 К раз команды loop дает некоторую временную задержку (на современных 
  процессорах порядка тысячной доли секунды).<br>
  Перейдем теперь к рассмотрению команд условных переходов.<br>
  В приведенном выше фрагменте для реализации длинного цикла использовалась команда 
  условного перехода по равенству je. В системе команд МП 86 имеется свыше трех 
  десятков команд условных переходов, позволяющих осуществлять переходы при наличии 
  разнообразных условий: равенства, неравенства, положительности или отрицательности 
  результата и проч. При выполнении всех этих команд процессор анализирует содержимое 
  регистра флагов и осуществляет (или не осуществляет) переход на указанную метку 
  в зависимости от состояния отдельных флагов или их комбинаций. Поскольку на 
  состояние регистра флагов влияют многие команды процессора, командами условных 
  переходов можно пользоваться не только после команд сравнения или анализа, но 
  и после многих других команд, если внимательно изучить влияние этих команд на 
  флаги процессора. Приведем несколько абстрактных примеров.</p>
</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp AX,BX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Сравнение двух регистров</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">je equal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если AX=BX</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp SI,mem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Сравнение регистра и ячейки памяти</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jne notequ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если SI&lt;&gt;mem</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int
21h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Вызов DOS</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jc syserr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если была ошибка</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;и флаг CF=1</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">or BX,BX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Анализ BX</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jz zero&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если BX=0</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">inpt: in&nbsp;
AL,DX&nbsp;&nbsp; ;Ввод данного из устройства</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">test
AL,80h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Анализ бита 7 в
данном</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">je inpt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Ввод до тех пор , пока</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;бит 7=0 (ожидание установки бита 7)</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">test
AX,7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Анализ
битов 0,1,2 в AX</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jne found&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если хотя бы 1 бит</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;из них установлен</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">test DI,OFh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Анализ битов 0...3 в DI</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jz reset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Переход, если все они сброшены</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p>В гл. 2 отмечалось, что 
  двоичные числа, записываемые в регистры процессора или ячейки памяти, можно 
  рассматривать, либо как числа существенно положительные, т.е. числа без знака, 
  либо как числа со знаком. Например, адреса ячеек, разумеется, не могут быть 
  отрицательными. Поэтому число FFFFh, если по смыслу программы оно является адресом, 
  обозначает 65535. Если, однако, то же число FFFFh получилось в арифметической 
  операции вычитания 2 из 1, то его надо рассматривать, как - 1. Точно так же 
  понятие знака бессмысленно по отношению к кодам символов, которые с равным успехом 
  могут принимать любое значение из диапазона 0...255. С другой стороны, мы можем 
  условно считать, что коды символов первой половины таблицы ASCII положительны, 
  а коды второй половины таблицы (у них установлен старший бит) отрицательны, 
  и использовать для обработки символов команды, чувствительные к знаку.<br>
  В составе команд условных переходов имеются две группы команд для сравнения 
  чисел без знака (это команды ja, jae, jb, jbc, jna,
jnae, jnb и jnbe) и чисел 
  со знаком (jg, jge, jl, jle, jng, jnge, jnl и jnle). В аббревиатурах этих команд 
  для сравнения чисел без знака используются слова above (выше) и below (ниже), 
  а для чисел со знаком - слова greater (больше) и less (меньше).<br>
  Разница между теми и другими командами условных переходов заключается в том, 
  что команды для чисел со знаком рассматривают понятия &quot;больше-
меньше&quot; 
  применительно к числовой оси -32К...0...+32К, а команды для чисел без знака 
  - применительно к числовой оси 0...64К. Поэтому для первых команд число 7FFFh 
  (+32767) больше числа S000h (-32768), а для вторых число 7FFFh (32767) меньше 
  числа S000h (32768). Аналогично, команды для чисел со знаком считают, что 0 
  больше, чем FFFFh (-1), а команды для чисел без знака - меньше.<br>
  Рассмотрим пример использования команд условных переходов для обработки символов. 
  Пусть мы вводим с клавиатуры некоторую строку символов (например, имя файла), 
  и хотим, чтобы в программе эта строка была записана прописными буквами, независимо 
  от того, какие буквы использовались при ее вводе. Между прочим, при вводе с 
  клавиатуры команд DOS система всегда выполняет эту операцию, поэтому и команды, 
  и ключи, и имена файлов можно вводить как прописными, так и строчными буквами 
  - DOS во всех случаях преобразует все буквы в прописные.</p>
</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">code segment</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">assume
cs:code,ds:data</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">main proc</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov AX,data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Инициализация</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">move DS,AX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Регистр DS</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Выведем
служебное сообщение</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
AH,09h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Функция вывода</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov DX,offset msg&nbsp;&nbsp;
;Адрес сообщения</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int 21h</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Поставим
запрос к DOS на ввод строки</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
AH,3Fh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Функция ввода</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
BX,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Дескриптор клавиатуры</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
CX,80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Ввод максимум 80 байт</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov DX, offset
buf&nbsp;&nbsp;&nbsp; ;Адрес буфера ввода</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int 21h</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov actlen,AX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Фактически введено</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Превратим
строчные русские буквы в прописные</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov CX,actlen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Длина введенной строки</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
SI,0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Указатель в буфере</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">filter: mov&nbsp;&nbsp;&nbsp;
AL,buf[SI] ;Возьмем символ</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp AL,'a'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Меньше 'a'?</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jb&nbsp; noletter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Да, не преобразовывать</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp AL,'я'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Больше 'я'?</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">ja noletter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Да, не преобразовывать</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">cmp AL,'п'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Больше 'п'?</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">ja more&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
; Да, на дальнейшую проверку</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">sub
AL,20h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;'a'..'п'. Преобразуем в прописную</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jmp store&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;На сохранение в буфере</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">more: cmp AL,'p'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;Меньше 'p1' (псевдографика)?</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">jb noletter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;&gt;'п',&lt;'p'. Не изменять</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">sub
  AL,50h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;'p'...'я'.
  Преобразуем в прописную</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">store: mov&nbsp;&nbsp;
  buf[SI],AL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Отправим назад в buf</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">noletter: inc
  SI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Сместим
  указатель</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">loop filter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;Цикл по всем символам</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;
  Выведем результат преобразования на экран
  для контроля</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  AX,40h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Функция вывода</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  BX,1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Дескриптор
  экрана</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov CX,actlen&nbsp;&nbsp;
  ;Длина сообщения</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov DX,offset
  buf&nbsp; ;Адрес сообщения</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int 21h</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
  AH,01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Остановим
  программу</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int
  21h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ;в ожидании нажатия клавиши</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Завершим
  программу</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov AX,4C00h</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">int 21h</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">main endp</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">code ends</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">data segment</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">msg db &quot;Вводите!$&quot;</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">buf db 80 dup
  (' ')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;Буфер
  ввода</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">actlen dw 0</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">data ends</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">stk segment
  stack</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">dw 128 dup(')</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">stk ends</font></p>
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">end main</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  
  </p>
  </blockquote>
<p>В начале программы на экран 
  выводится служебное сообщение &quot;Вводите!&quot;, которое служит запросом 
  программы, адресованным пользователю. Далее с помощью функции DOS 3Fh выполняется 
  ввод строки текста с клавиатуры. Функция 3Fh может вводить данные из разных 
  устройств - файлов, последовательного порта, клавиатуры. Различные устройства 
  идентифицируются их дескрипторами. При работе с файлами дескриптор каждого файла 
  создается системой в процессе операции открытия или создания этого файла, а 
  для стандартных устройств - клавиатуры, экрана, принтера и последовательного 
  порта действуют дескрипторы, закрепляемые за этими устройствами при загрузке 
  системы. Для ввода с клавиатуры используется дескриптор 0, для вывода на экран 
  дескриптор 1. <br>
  При вызове функции 3Fh в регистр ВХ следует занести требуемый дескриптор, в 
  регистр DX - адрес области в программе, выделенной для приема вводимых с клавиатуры 
  символов, а в регистр СХ - максимальное число вводимых символов. Мы считаем, 
  что пользователь не будет вводить более 80 символов. Можно ввести и меньше; 
  в любом случае ввод строки следует завершить нажатием клавиши &lt;Enter&gt;. 
  Функция 3Fh, отработав, вернет в регистре АХ реальное число введенных символов 
  (включая коды 13 и 10, образуемые при нажатии клавиши &lt;Enter&gt;). В примере 
  3.5 число введенных символов сохраняется в ячейке actlen с целью использования 
  далее по ходу программы.<br>
  Далее в цикле из actlen шагов выполняется анализ каждого введенного символа 
  путем сравнения с границами диапазонов строчных русских букв. Русские строчные 
  буквы размещаются в двух диапазонах кодов ASCII (а...п и р...с), причем для 
  преобразования в прописные букв первого диапазона их код следует уменьшать на 
  20h, а для преобразования букв второго диапазона - на 50h. Поэтому анализ проводится 
  с помощью четырех команд сравнения сmр и соответствующих команд условных переходов. 
  Модифицированный символ записывается на то же место в буфере
buf.<br>
  После завершения анализа и преобразования введенных символов, выполняется контрольный 
  вывод содержимого buf на экран. Поскольку мы заранее не знаем, сколько символов 
  будет введено, вывод на экран осуществляется функцией 40h, среди параметров 
  которой указывается число выводимых символов. Так же, как и в случае функции 
  ввода 3Fh, для функции вывода 40h в регистре ВХ необходимо указать дескриптор 
  устройства ввода, в данном случае экрана, а в регистре DX - адрес выводимой 
  строки.<br>
  Коды символов являются числами без знака, и использование в данном случае команд 
  условных переходов для чисел без знака представляется логичным и даже единственно 
  возможным. Если, однако, внимательно рассмотреть понятия больше-
меньше для чисел 
  со знаком и без знака, то легко увидеть, что пока мы сравниваем друг с другом 
  только &quot;положительные&quot; или только &quot;отрицательные&quot; числа, 
  команда ja эквивалентна команде jg, а команда jb эквивалентна команде
jl. Однако 
  при сравнении, например, кодов цифр с кодами русских букв, правильный результат 
  можно получить лишь при использовании команд переходов для чисел без знака. 
  Впрочем, всегда нагляднее и надежнее использовать те команды, которые соответствуют 
  существу рассматриваемых данных, даже если такой же правильный результат получится 
  и при использовании &quot;неправильных&quot; команд.<br>
  Более отчетливо разница между числами со знаком и без знака проявляется при 
  использовании арифметических операций, например, операций умножения или деления. 
  Здесь для чисел со знаком и чисел без знака предусмотрены отдельные команды:</p>
</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><b>mul</b> - команда умножения 
  чисел без знака;</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><br>
<b>
imul</b> - команда умножения 
  чисел со знаком;</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"> <br>
<b>
  div</b> - команда деления чисел без знака;</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"> <br><b>idiv</b> - команда деления чисел со знаком.</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p>Поясним различия этих команд 
  на формальных примерах.
</p>
</font>
<blockquote>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">;Умножение
положительных чисел со знаком</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
AL,5&nbsp;&nbsp;&nbsp; ;Первый сомножитель равен 5</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
BL,7&nbsp;&nbsp;&nbsp; ;Второй сомножитель равен 7</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mul BL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;AX=0023h=35</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
AL,5&nbsp;&nbsp;&nbsp; ;Первый сомножитель равен 5</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
BL,7&nbsp;&nbsp;&nbsp; ;Второй сомножитель равен 7</font>
</p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">imul BL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;AX=0023h=35</font>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<br>
</p>
  </blockquote>
<p>Обе команды, mul и
imul, 
  дают в данном случае одинаковый результат, так как положительные числа со знаком 
  совпадают с числами без знака. Не так обстоит дело при умножении отрицательных 
  чисел.</p>
  <blockquote>
<p>;</font><font face="Verdana, Arial, Helvetica, sans-serif" size="3">Умножение
    отрицательных чисел со знаком</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov AL,OFCh&nbsp;&nbsp;&nbsp;&nbsp;
;Первый сомножитель=252</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
BL,4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;
Второй сомножитель =4</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mul BL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;AX=03F0h =1008</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov AL,OFCh&nbsp;&nbsp;&nbsp;&nbsp;
;Первый сомножитель=-4</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">mov
BL,4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
; Второй сомножитель =4</font></p>
<p><font face="Verdana, Arial, Helvetica, sans-serif" size="3">imul BL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
;AX=FFFO=-16</font></p>
</blockquote>
<font face="Arial, Helvetica, sans-serif" size="3">
  
<p>Здесь действие команд mul 
  и imul над одними и теми же операндами дает разные результаты. В первом примере 
  число без знака FCh, которое интерпретируется, как 252, умножается на 4, давая 
  в результате число без знака 3F0, т.е. 1008. Во втором примере то же число FCh 
  рассматривается, как число со знаком. В этом случае оно составляет -4. Умножение 
  на 4 дает FFF0h, т.е. -16.</p>

<p>
&nbsp;
</p>
<table COLS="3" WIDTH="16%">
<tr>
<td>
<font face="Arial, Helvetica, sans-serif">
<a href="Index1.htm">
<img SRC="Back.gif" BORDER="0">
</a>
</font>
</td>
<td WIDTH="10%">
<font face="Arial, Helvetica, sans-serif">
<a href="../index.html">
<img SRC="Menu.gif" BORDER="0" width="73" height="22">
</a>
</font>
</td>
<td ALIGN="RIGHT">
<font face="Arial, Helvetica, sans-serif">
<a href="Index3.htm">
<img SRC="For.gif" BORDER="0">
</a>
</font>
</td>
</tr>
</table>
</body>
</html>