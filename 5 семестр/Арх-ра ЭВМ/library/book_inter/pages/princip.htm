<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><meta http-equiv="Content-Language" content="ru"><title>Роль и место систем ввода-вывода</title><link rel="stylesheet" type="text/css" href="../main.css"><style>
<!--
 p.MsoNormal
	{mso-style-parent:"";
	margin:5.0pt 0cm; text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";
	}

-->
</style>
</head><body><hr width="745" align="left"><table border="0" width="745" id="table3"><tr><td>
      <h2 align="center"><span style="font-size: 18.0pt">Основные принципы организации 
        передачи информации в вычислительных системах</span></h2>
    </td></tr></table><hr align="left" width="745"><table border="0" width="745" id="table2"><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">В процессе работы компьютера передача информации по одному и тому же интерфейсу в один и тот же момент времени идет только между двумя устройствами (<i>модулями</i>) по принципу “точка-точка”. При этом одно из устройств является активным (<i>ведущим, задатчиком</i>), другое – пассивным (<i>исполнителем, ведомым</i>). Активное устройство начинает процедуру обмена и управляет ею. Пассивное устройство выполняет предписания активного. В компьютере одни устройства всегда является задатчиками (<i>активными</i>), другие только исполнителями (<i>пассивными</i>), третьи в разные моменты времени могут быть как задатчиками, так и исполнителями. Процессор всегда активное устройство, оперативная память (<i>ОЗУ</i>) – пассивное устройство. Периферийные устройства при работе с процессором являются исполнителями,&nbsp; а при работе с ОЗУ (прямой доступ к памяти) – задатчиками. Возможна передача между двумя ПУ, тогда одно – задатчик, другое – исполнитель (см. рис.1.3а).</td></tr></table><table border="0" width="745" id="table1"><tr>
    <td>
      <div align="center"><img src="../images/3.png" width="601" height="501"></div>
    </td>
  </tr></table><table border="0" width="745" id="table11"><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Таким образом, пассивными устройствами являются либо ОЗУ, либо ПУ. Со стороны процессора&nbsp; средства управления этими двумя типами устройств существенно различны. Это обусловлено тем, что для передач процессор-ОЗУ заранее известны все типы и параметры устройств, которые должны соединяться между собой, т.к. эти устройства однотипны, в то время как ПУ существенно различаются, как по задержке, так и по пропускной способности. Кроме того, процесс управления ПУ намного сложнее и требует большего времени и учета специфики работы.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Поэтому управление передачей процессор-ОЗУ реализуется в рамках одной компьютерной команды на уровне микрокоманд (см. рис. 1.3б), а управление процессом ввода-вывода с учетом специфики ПУ с помощью специальной подпрограммы, которая называется драйвером и содержит как команды компьютера, так и команды управления, специфичные для каждого типа ПУ (см. рис.1.3в). Поэтому интерфейс, связывающий устройства при передаче данных должен учитывать эти особенности.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Передача информации от задатчика к исполнителю реализуется операцией записи, а обратная – операцией чтения. Процесс передачи между ПУ и ЦПр называют вводом-выводом информации.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Ввод реализуется с помощью операции чтения, а вывод – операцией записи.</p>
      <p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Если на процессор возложить функции управления 
        вводом-выводом, то у него не хватит времени для выполнения своей главной 
        функции – преобразования информации. Это обусловлено широким диапазоном 
        скоростей работы ПУ, сложностью их управления и большим разнообразием 
        и количеством разных ПУ (<a href="../images/pages/1.htm" target="_blank">см. 
        рис.1.1б</a>).</p>
      <p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Для минимизации загрузки процессора при выполнении процессов ввода-вывода функции управления распределяются на несколько устройств: процессор, главный контроллер (канал) ввода-вывода, контроллер ПУ и блок управления ПУ.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Главный контроллер и контроллеры различного типа ПУ вместе с соответствующим программным обеспечением образуют Систему ввода-вывода.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Процессор, главный контроллер, контроллеры ПУ находятся в системном блоке, а блок управления ПУ – в самом периферийном устройстве, в ряде случаев контроллер ПУ может находиться в самом ПУ. Такое распределение позволяет оптимизировать загрузку каждого вида устройств присущими ему функциями при мультипрограммном режиме работы&nbsp; компьютера. Это происходит за счет совмещения во времени работы различных по функциям устройств. Функциональная схема передачи информации в компьютере показана на рис.1.4.</p></td></tr></table><table border="0" width="745" id="table9"><tr>
    <td>
      <div align="center"><img src="../images/4.png" width="600" height="700"></div>
    </td>
  </tr></table><table border="0" width="745" id="table5"><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Операцию ввода-вывода начинает процессор, выдавая в главный контроллер ввода-вывода соответствующую команду (2). Предварительно, с помощью слова состояния канала, процессор должен убедиться, что он готов к работе (1).</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Канал приступает к управлению вводом-выводом с помощью специальной программы канала. После чего процессор отключается от процесса ввода-вывода и функции управления&nbsp; принимает на себя канал. </p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Канал, после анализа слова состояния (4) соответствующего контроллера о его готовности, передает ему управляющий приказ (команду канала) (6,7) и может переходить к работе с контроллером другого ПУ. Контроллер ПУ принимает эстафету управления вводом-выводом, формирует и передает в блок управления ПУ необходимый управляющий код (сигнал) (8,9), получив который&nbsp; ПУ преступает к процессу передачи данных (10).</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Как следует из рассмотрения (см. рис.1.4), каждый уровень управления вводом-выводом&nbsp; должен иметь регистры управления, состояния и данных для реализации своих действий по передаче информации.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">При реализации такой многоуровневой системы управления вводом-выводом&nbsp; для связи устройств между собой используется два вида интерфейсов: системные интерфейсы (внутренние) для взаимосвязи модулей в системном блоке и внешние интерфейсы ПУ (интерфейс периферийных устройств) для подсоединения ПУ к системному блоку (см. рис.1.4)&nbsp;&nbsp; </p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Для учета особенностей реализации процессов ввода-вывода и специфики различного типа ПУ используются три режима ввода-вывода информации: программный ввод-вывод, ввод-вывод в режиме прерываний и с прямым доступом к памяти.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Интерфейсы должны учитывать возможность реализации всех 3-х режимов ввода-вывода.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Программный ввод-вывод. Здесь инициализация и управление процессом ввода-вывода осуществляет процессор. Имеется три способа его выполнения (см. рис.1.5). </p></td></tr><tr>
    <td>
      <div align="center"><img src="../images/5.png" width="400" height="200"></div>
    </td>
  </tr><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">Первый способ – прямой, используется для синхронных ПУ, т.е. устройств, которые всегда готовы к работе и циклов ожидания не требуется. Второй – условный с занятием цикла, когда при не готовности ПУ, процессор ждет до тех пор, пока наступит его готовность. Третий – условный с совмещением. В отличие от предыдущего, процессор не ждет готовности ПУ, а переходит к продолжению программы с периодической проверкой готовности ПУ.</p>
      <p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">Ввод-вывод в режиме прерываний. В этом случае инициатором начала 
        процесса ввода-вывода является ПУ. Оно, когда готово, подает сигнал процессору 
        &quot;запрос на прерывание&quot;. Процессор, если ПУ разрешен такой режим, 
        завершает текущую команду и переходит к выполнению процесса ввода-вывода 
        (<a href="../images/pages/1.htm" target="_blank">см. рис. 1.6</a>). Сначала 
        он осуществляет контекстное переключение, т.е. запоминает свое состояние, 
        чтобы можно было после продолжить программу, идентифицирует ПУ и передает 
        управление драйверу данного ПУ (ПП), который и осуществляет ввод или вывод 
        информации. Идентификация ПУ производится с помощью адреса вектора прерывания, 
        который содержит номер ячейки, где хранится первая команда этого драйвера. 
        Адрес вектора прерывания ПУ передается процессору от контроллера прерываний 
        (<a href="../images/pages/4.htm" target="_blank">см. рис.1.4, сигнал 5</a>).</p>
      &nbsp;</td></tr><tr>
    <td>
      <div align="center"><img src="../images/6.png" width="400" height="900"></div>
    </td>
  </tr><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">Следует отметить два момента. Во-первых, ПУ должно иметь, предварительно установленное, разрешение на работу в режиме прерываний. Во-вторых, возможны коллизии, когда несколько ПУ выставляют процессору запрос прерывания. Эта коллизия разрешается с помощью механизма задания уровня приоритетов для каждого ПУ. Возможна организация вложенных прерываний, когда ПУ с большим приоритетом прерывает работу ПУ с меньшим приоритетом. Все эти моменты должен учитывать стандарт на интерфейс.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">Прямой доступ к памяти (см. рис. 1.7). Этот режим используется для высокоскоростных ПУ, имеющих скорость передачи более 50 Кбит/сек. В этом режиме активным устройством является контроллер прямого доступа к памяти (<i>КПДП</i>). Процессор, получив от КПДП заявку на прямой доступ, прерывает свою работу и отключается от интерфейса, передавая его задатчику, т.е. КПДП. Процессор при этом не выполняет контекстного переключения, а может продолжать свою работу, если она не требует интерфейса. Управление интерфейсом переходит к КПДП, который посредством выполнения операций чтения и записи передает информацию между ОЗУ и ПУ с соответствующим заданием адресов памяти. В этом режиме используется механизм задания уровня приоритетов для тех ПУ, которые работают с прямым доступом к памяти. Этот режим также должен быть предусмотрен в интерфейсах.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">Как следует из вышеизложенного, канал ввода-вывода (главный контроллер) реализует функции управления общие для всех ПУ, а контроллер внешнего интерфейса учитывает специфику интерфейса, связывающего его с соответствующим ПУ.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">В компьютерах, которые работают с малой интенсивностью ввода-вывода, главный контроллер (канал) ввода-вывода обычно отсутствует, а его функции берет на себя микропроцессор. В этом случае процессор работает непосредственно с контроллером ввода-вывода ПУ, что упрощает структуру компьютера.</p><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-indent:1.0cm;
line-height:150%">При работе с высокоскоростным ПУ обычно используется режим прямого доступа к памяти. Для этого режима аппаратно реализуется специальный канал ввода-вывода в виде КПДП.</td></tr><tr>
    <td>
      <div align="center"><img src="../images/7.png" width="400" height="700"></div>
    </td>
  </tr><tr><td><p class="MsoNormal" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
text-indent:1.0cm;line-height:150%">Изложенный в данном разделе материал, дает возможность понять, почему интерфейсы имеют такую структуру, функции и протоколы работы.</td></tr></table><table border="0" width="745" id="table12"><tr><td><h5><a href="role.htm">Назад</a><span lang="en-us">|</span><strong><a href="../index.htm">Главная страница</a><span lang="en-us">|</span></strong><a href="komp_com.htm">Далее</a></h5></td></tr></table><hr align="left" width="745"><dl><dd><h1 align="left">©&nbsp;ПГУ, 2005. Все права защищены.</h1></dd></dl></body></html>